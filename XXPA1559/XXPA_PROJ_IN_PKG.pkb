create or replace PACKAGE BODY XXPA_PROJ_IN_PKG
IS
  /******************************************************************************
  *                           - COPYRIGHT NOTICE -                              *
  *******************************************************************************
  ** Title            :        XXPA2381
  ** File             :        xxpa_proj_in_pkg.pkb
  ** Description      :        Package for creating Projects, Agreement
  ** Parameters       :        {None}
  ** Run as           :        APPS
  ** 12_2_compliant   :        YES
  ** Keyword Tracking :
  **
  ** History          :
  ** Date          Who                    Description
  ** -----------   ------------------     ------------------------------------------
  ** 10-Oct-2013   Vipulgiri Gosai        Initial
  ** 06-Jan-2015   Jyotsana Kandpal       Invalid Number Error during implicit
  **                                      conversion of Customer Number and Party Site Number
  ** 16-Oct-2016   Vishnu M               Added for Duplicate Event Submission Check Ref RT : 6801346
  ** 24-Feb-2017   Joydeb Saha            Merged WRITE Project Code (version 1.13) with production code (version 1.14).
  ** 24-Mar-2017   Joydeb Saha            RT7070069 - Create task version failing due to initializing issue. Global variable g_key_members_blank will be initialized properly.
  **                                      The same issue was reported in RT7070207 and RT7075649
  **                                      RT7071677 - Code fixed to update Customer PO number even in partial update mode.
  ** 28-Mar-2017  Vishnu M                RT7075650 - Created a new validate_proj_manager_role procedure to handle different scenarios of updating existing project managers. This will avoid
  **                                      the error same manager exists in the date range.
  ** 31-Mar-2017  Joydeb Saha             RT7075650 - Modified teh validate_proj_manager_role procedure to handle different update scenarios for key members other than project manager.
  ** 28-Apr-2017  Joydeb Saha             RT7122728 - Modified the check_duplicate_events function to set user_status_code to DUPLICATE. This will allow duplicate payloads to be delta tracked.
  ** 04-May-2017  Joydeb Saha             RT7137886 - Siebel will be sending SERVICE TYPE Code as part of task SRC attribute. Logic is added to accept the SRC attribute and map it to SERVICE_TYPE_CODE at task level.
  **                                    Also, enabled the code for updating project start date in Update mode which was earlier done through RT7075620 but commented out as business did not approve at that time.
  ** 08-Jun-2017  Joydeb Saha             RT7198253 - SIBEL ID needs to mapped to SHIP to site use attribute1 inorder to XXONT1222 work seemlessly. A new SRC attribute is added at customer level for this purpose.
  ** 09-Jun-2017  Joydeb Saha             RT7196623 - Issue when more than one agreement exists for teh same agreement number is fixed.
  ** 21-Jun-2017  Joydeb Saha             RT7188466 - SIEBEL PM Engine sends country name or country code as part of Ship to address. As PM Engine is an automated process and SIBEL team does not have control on it,
  **                                    we will modify the logic to derive country code from the country name.
  ** 20-Sep-2017  Joydeb Saha             RT7358717 - ROLL BACK CODE CHANGES FOR RT#7196623.
  ** 01-Jan-2018  Ashwini Tiwari          RT7512717 - Delta tracking for errored events added for Performance improvement of xxpa2101.
  ** 05-Mar-2018  Vishnusimman M          CR7680 - Set Limit to transaction control flag at task level based on the payload(merged changes v1.53 and v1.55)
  ** 05-Apr-2018  Ashwini Tiwari          RT7663964 - Added Delta tracking for successful and failed projects and tasks because of timing issue in xxpa2101.
  ** 26-Jul-2018  Vishnusimman M          CR9339 - Map OEM expenditure for AGRL task sent from Siebel
  ** 11-Oct-2018  Vishnusimman M          RT7993903 - PROJECT NOT CREATED DUE TO MULTICURRENCY CAUSING AN AGREEMENT AMOUNT NOT EQUAL BUDET AMOUNT
  ** 05-Dec-2018  Vishnusimman M          RT8038711 - XXPA2381 - SIEBEL ERROR MESSAGE BY CONFIRM BILLING NEW  AGREEMENT
  ** 12-Feb-2019  Ravi Alapati            RT8196124 , RT#8208760 - Agreement End Date Change Not Working
  ** 06-May-2019  Vishnusimman M          CR24105 - Supporting new process for milestone billing
  ** 21-Aug-2019  Vishnusimman M          HPQC30226 - Allow Cross Charge Flag is not getting populated in New Projects
                                        HPQC30126 - Agreement Invoice Format to default to 0
  ** 10-Oct-2019  Vishnusimman M          Reverted HPQC30226 changes as Patch 27706436 applied as part of PS26695 handles this issue
  ** 11-Nov-2019  Vishnusimman M          RT8550526 - Reverted HPQC30126 - Agreement Invoice Format to default to 0
  ** 11-Jun-20    Ravi Alapati 19c Upgrade - v$ retrofit changes
  ** 02-Nov-2020  Mousami Bhandary        CR24557-Credit Receiver to be populated in custom table instead of standard oracle projects forms
  ** 12-Dec-2020  Arnab/Vishnu            CR24470 - Adding logic to create initial Forecast Cost and Revenue budget
  ** 14-Jan-21    Vinay Samudrala         Worksight - CR24585 - Add xxint_phase5 to track for acknowledgement service.
  ** 08-Jul-2021  Athilakshmi G           Removed partner enabled API and called inside 4066 insert into event track table
  ** 06-Aug-2021  Prakash                 CR24148 Default Task Manager from Project PM
  ** 05-Oct-2021  Sourabh Bhattacharjee    Added XEDIT functionality and changed the logic for updating budget version in PO Addendum process
  ** 29-Oct-2021  Jyotsana Kandpal      HPQC#32791 : XXPA4027 not able to update the funding for negative PO Addendum scenario
  ** 30-Oct-2021  Sourabh Bhattacharjee HPQC32191 : Update Budget for Estimated Cost Budget, Forecast Cost and Forecast Revenue
                                        based on current budget amount.
  ** 30-Nov-2021  Sourabh Bhattacharjee HPQC33078 : Update only amount of agreement before funding update
  ** 10-Dec-2021  Jyotsana Kandpal      Modified pa_agreements_all.attribute11 to attribute8 due to a problem with conversion
  ** 27-Jan-22      Joydeb Saha            Worksight - CR24894 - add assign_pjm_org. This will be used for phase2. This will call the main
  **                                    procedure from concurrent program XXPA1559_2 to add project to project manufacturing org.
  **                                    Existing phase2 will move to phase3.
  ** 21-Feb-2022  Santhosh Ramakrishnan CR24907 - Capture Org_Id in XXINT Event Attributes to support XXINT Event Error Dashboard functionality built in Apex
  ** 25-Feb-22    Sourabh Bhattacharjee CR24909 - Update Estimated Revenue Budget based on the current budget amount
  ** 12-May-2022  Santhosh R12            INC0420830 - 1. As part of performance fix, Removed Cursor CUR_EVENT_EXISTS and purge_old_events Procedure (for Force close), since both are no longer needed.
  **                                                    Based on XXINT Event setup, events will no longer be stuck in ERROR status, hence no eligible records to force close
  **                                                 2. Move ack service procedure call xxint_phase_ack from Phase5 to Phase1 and deleted Phase5 procedure
  ** 10-Aug-2022  Sourabh Bhattacharjee INC0433625 - Fixing BILL_TO site deriving multiple values due to primary flag is not set
  ** 19-Sep-22      Sourabh Bhattacharjee    INC0390451 : Start Date and other values of the agreement should not get updated
  ** 31-Jan-23    Dheeraj Nambiar       WorkSight - CR25148 - Project and task completion date extension and handling revaluate_funding_flag and include_gains_losses_flag
  ** 03-Jul-2023  Jai Shankar Kumar     CR25098 - Enhance this Integration for NEOCRM_CN partner
  ** 23-Aug-2023   Vishnusimman M           CR25364 - Extend Existing Project Creation to include Subtask details
  ** 31-Dec-2023   Dheeraj Nambiar          WorkSight - CR25448 - Modify Project Manager Update Logic for WS-EQ
  **
  ***************************************************************************************************************************/
  --[Start] For Variable Declaration.
  gv_procedure_name             VARCHAR2(100);
  gv_poo                        VARCHAR2(500);
  g_partner_agr_update_allow    VARCHAR2(1);
  g_partner_cross_prd_update    VARCHAR2(1);
  g_partner_partial_proj_udpate VARCHAR2(1);
  g_proj_status_udpate          VARCHAR2(1);
  gv_orig_project_status        pa_projects_all.project_status_code%type;
  gv_error_source               xxau_error_headers.error_source%TYPE := xxau_errors_pkg.gv_ebs;
  gv_object_type CONSTANT xxau_error_headers.object_type%TYPE := 'CONCURRENT_PROGRAM';
  g_guid                 xxint_events_v.guid%TYPE;
  gv_transaction_id      xxau_error_headers.transaction_id%TYPE := TO_NUMBER(TO_CHAR(SYSDATE,
                                                                                     'DDMMRRRRHH24MISS'));
  gv_xedit_enabled       xxint_event_type_key_vals.key_name%TYPE := 'XEDIT_WRITE_ENABLED' ;
  gv_source_system       xxau_error_headers.source_system%TYPE;
  gv_source_reference    VARCHAR2(1000) := NULL;
  gv_target_system       xxau_error_headers.target_system%TYPE := xxau_errors_pkg.gv_ebs;
  gv_transmission_system xxau_error_headers.transmission_system%TYPE := xxau_errors_pkg.gv_fmw;
  gv_component_name      xxau_error_lines.component_name%TYPE := 'XXPA2381';
  gv_component_type      xxau_error_lines.component_type%TYPE := xxau_errors_pkg.gv_package;
  gv_org_id              NUMBER := mo_global.get_current_org_id;
  gv_sql_stmt            xxau_error_lines.debug_step%TYPE;
  gv_debug_key           VARCHAR2(29) := 'XXPA2381_INT';
  g_organization_code    VARCHAR2(3) := NULL;
  gv_err_rec             xxau_errors_pkg.g_error_rec%TYPE;
  g_namespace            VARCHAR2(2000) := NULL;
  g_payload              CLOB; -- stores payload from XXINT Event. This is an XML message.
  g_address_validation   VARCHAR2(1) := 'N';
  --  g_cr_forcast_rev_budget     varchar2(1) := 'N'; --Added for CR24470
  --  g_cr_forcast_cost_budget    varchar2(1) := 'N'; --Added for CR24470
  g_proj_bud_version_name      VARCHAR2(2000); --Added for Phase 3B
  g_process_mode               VARCHAR2(200) := 'CREATE';
  g_partner_proj_update_allow  VARCHAR2(1);
  g_task_addr_update_allow     VARCHAR2(1);
  g_agr_partial_update         VARCHAR2(1); -- Added by vinod to remove hardcodinng for FOE
  g_agr_pm_product_code        pa_projects_all.pm_product_code%type; --Added for HPQC22755
  g_prj_pm_product_code        pa_projects_all.pm_product_code%type; --Added for HPQC22755
  g_task_exp_limit_flag        VARCHAR2(1); -- Added for CR9339
  g_allow_cust_crdt_recvr      VARCHAR2(1); --added by Mousami CR24557
  g_allow_cust_crdt_recvr_task VARCHAR2(1); -- Added for CR25098
  g_allow_soldto_cust_change   VARCHAR2(2);
  g_default_task_pm_keyname    xxint_event_type_key_vals.key_name%TYPE:= 'DEFAULT_PROJECT_PM_TO_TASK'; --CR24148 Default Task PM from Project
  g_default_task_pm            VARCHAR2(1); --CR24148 Default Task PM from Project
  gc_allow_neg_po_add_keyname  xxint_event_type_key_vals.key_name%TYPE:= 'ALLOW_REBAL_NEG_PO_ADDENDUM'; -- Added for HPQC#32791
  gc_derive_bill_to            xxint_event_type_key_vals.key_name%TYPE:= 'DERIVE_BILL_TO' ;
  gv_allow_neg_po_addendum     VARCHAR2(1) DEFAULT 'N'; --Added for HPQC#32791
  g_proj_completion_dt_extn    NUMBER := 0;
  gv_revaluate_funding_flag    VARCHAR2(1);
  gv_include_gains_losses_flag VARCHAR2(1);
  g_proj_manager_upd_st_dt     VARCHAR2(1); --added for CR25448

  gc_supress_zero_line_keyname  varchar2(200):= 'SUPRESS_ZERO_LINES';--Added for CR25364
  g_supress_zero_lines_exists   VARCHAR2(1);--Added for CR25364
  gv_supress_zero_lines VARCHAR2(1):='N'; --Added for CR25364
  gv_business_offering VARCHAR2(200):= NULL; --Added for CR25364

  --Added for CR25364
  --Procedure to get all error message in ERROR_MESSAGE Clob for easy retrieval
  PROCEDURE log_error_clob(p_message varchar2) is
  begin
    XXINT_EVENT_API_PUB.APPEND_TO_CLOB(p_guid => g_guid,
                                       p_clob_code => 'ERROR_MESSAGE',
                                       p_clob => to_clob(p_message)
                                      );
  end log_error_clob;
 --End of Added for CR25364
 --
  --Procedure to add Debug Log File
  --
  PROCEDURE write_into_file(p_message VARCHAR2) IS
  BEGIN
    --
    --gn_text_id := xx_au_debug.f_write_debug_text(g_guid,gn_debug_level,p_message);
    --xxint_xml_util.write_debug(p_message,'XXPA_PROJ_IN_PKG',XXINT_EVENT_UTIL_SITE.G_LEVEL_EVENT,FALSE);
    xxau_errors_pkg.write_debug_log(p_module  => gc_interface_name,
                                    p_message => p_message);
    xxint_xml_util.write_debug(p_message,
                               gc_interface_name,
                               xxint_event_util_site.g_level_event,
                               TRUE);
--    dbms_output.put_line(p_message);
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END write_into_file;
  --
  --Procedure to add Errors to XXAU_ERROR_LOG
  --
  PROCEDURE log_error_prc(p_entity_id     xxau_error_lines.entity_id%TYPE,
                          p_entity_name   xxau_error_lines.entity_name%TYPE,
                          p_sql_stmt      xxau_error_lines.debug_step%TYPE,
                          p_severity      VARCHAR2 DEFAULT 'E' --E,C or W
                         ,
                          p_error_code    xxau_error_lines.ERROR_CODE%TYPE,
                          p_error_message xxau_error_lines.error_message%TYPE) IS
    PRAGMA AUTONOMOUS_TRANSACTION;
    x_return_status VARCHAR2(5000) := NULL;
    x_msg_data      VARCHAR2(5000) := NULL;
  BEGIN
    --> This procedure in turn inserts into table xxau_error_headers and  xxau_error_lines
    gv_err_rec.error_source := gv_error_source;
    -- =>  Error Source Denotes the Source of the Error here in this case its EBZ
    --instance_name take care by Debug Package --         => Its a DB name in which the script is being executed
    gv_err_rec.object_name := gc_interface_name;
    -- =>  Object Name denotes the RICE ID
    gv_err_rec.object_type := gv_object_type;
    -- =>  Harcoded Values 'CONCURRENT PROGRAM'
    gv_err_rec.transaction_id := gv_transaction_id;
    -- =>  Need to check.. right now.its formatting of the sysdate to DDMMRRRRHH24MISS
    --error_date by default sysdate
    gv_err_rec.source_system := gv_source_system;
    -- =>  For Inbound its Legacy System that is invoking this service
    gv_err_rec.target_system := gv_target_system;
    -- =>  For Inbound its EBIZ which is actually receiving data and processing it.
    gv_err_rec.transmission_system := gv_transmission_system;
    -- =>'FMW' (Fusion Middle Ware) gv_wm = 'WM' (Web Method)
    gv_err_rec.component_name := SUBSTR(gv_debug_key || '.' ||
                                        gv_component_name,
                                        '239');
    gv_err_rec.component_type := gv_component_type;
    gv_err_rec.org_id         := gv_org_id;
    gv_err_rec.entity_id      := p_entity_id;
    -->  this denotes the values of the entities which are defined in entity name e.g.11234~11~1
    gv_err_rec.entity_name := p_entity_name;
    --=>  This defines the Entities e.g. PO_NUMBER~PO_RELEASE_NUMBER~PO_LINE_NUMBER. so Entity Name and Entity id should be have relation
    gv_err_rec.debug_step := SUBSTR(p_sql_stmt, '60');
    --> typically it defines the Log Step number which is defined
    gv_err_rec.ERROR_CODE := SUBSTR(p_error_code, '29');
    -->  This Defines the Error Code
    gv_err_rec.error_message := SUBSTR(NVL(p_error_message, 'Error'),
                                       '3999');
    -->  This Defines the Error Message.
    IF p_severity = 'E' THEN
      gv_err_rec.severity := xxau_errors_pkg.gv_error; --'ERROR'
    ELSIF p_severity = 'C' THEN
      gv_err_rec.severity := xxau_errors_pkg.gv_critical; --'CRITICAL'
    ELSIF p_severity = 'W' THEN
      gv_err_rec.severity := xxau_errors_pkg.gv_warning; --'WARNING'
    END IF;
    xxau_errors_pkg.write_error_log_rec(p_error_rec => gv_err_rec);
    --report_errors(p_error_message,g_guid, x_return_status, x_msg_data);
    gv_err_rec := NULL;
    --COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      write_into_file('ERROR IN LOG_ERROR_PRC() ' || SQLERRM);
  END log_error_prc;

  /*
  ** Procedure Name  : date_convert
  **
  ** Purpose:  For Converting date
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  --      ** 05-Dec-13            Vipul Gosai      HPQC#11273 XXPA2381 : Change Date Format to RRRR-MM-DDTHH24:MI:SS
  ** 02-Feb-15            Vipul GOsai      HPQC#16715 Project Start and Finish Dates exceed contract start and finish dated and Cannot add new task to project with same start date
  */
  PROCEDURE date_convert(p_in_date IN VARCHAR2, p_out_date OUT DATE) IS
--    l_in_date VARCHAR2(2000);
  BEGIN
    p_out_date := NULL;
    if p_in_date is not null then
    write_into_file('Convert Date : ' || p_in_date);
    IF p_out_date is null then
      BEGIN
        SELECT TRUNC(TO_DATE(p_in_date, 'DD-MON-YYYY HH24:MI:SS'))
          INTO p_out_date
          FROM DUAL;
      EXCEPTION
        WHEN OTHERS THEN
          p_out_date := NULL;
      END;
    END IF;
    IF p_out_date is null then
      BEGIN
        SELECT TRUNC(TO_DATE(p_in_date, 'DD-MON-YYYY HH:MI:SS AM'))
          INTO p_out_date
          FROM DUAL;
      EXCEPTION
        WHEN OTHERS THEN
          p_out_date := NULL;
      END;
    END IF;
    IF p_out_date is null then
      BEGIN
        SELECT TRUNC(TO_DATE(p_in_date, 'DD-MON-YYYY'))
          INTO p_out_date
          FROM DUAL;
      EXCEPTION
        WHEN OTHERS THEN
          p_out_date := NULL;
      END;
    END IF;
    IF p_out_date is null then
      BEGIN
        SELECT TRUNC(TO_DATE(p_in_date, 'DD/MM/YYYY'))
          INTO p_out_date
          FROM DUAL;
      EXCEPTION
        WHEN OTHERS THEN
          p_out_date := NULL;
      END;
    END IF;
    IF p_out_date is null then
      BEGIN
        SELECT TRUNC(TO_DATE(p_in_date, 'MM/DD/YYYY'))
          INTO p_out_date
          FROM DUAL;
      EXCEPTION
        WHEN OTHERS THEN
          p_out_date := NULL;
      END;
    END IF;
    IF p_out_date is null then
      BEGIN
        SELECT TRUNC(TO_DATE(p_in_date, 'RRRR-MM-DD"T"HH24:MI:SS'))
        -- Add Trunc for HPQC#16715
          INTO p_out_date
          FROM DUAL;
      EXCEPTION
        WHEN OTHERS THEN
          p_out_date := NULL;
      END;
    END IF;
    IF p_out_date is null then
      p_out_date := p_in_date;
    end if;
    end if;
    --    write_into_file('Return Convert date : ' || p_out_date);
  EXCEPTION
    WHEN OTHERS THEN
      p_out_date := p_in_date;
  END;

  PROCEDURE proj_sold_to_cust_change(p_project_id     in number,
                                     p_customers_in   in pa_project_pub.customer_tbl_type,
                                     x_return_status  out varchar2,
                                     x_return_message out varchar2) IS

    lv_customers_in          pa_project_pub.customer_tbl_type;
    lv_record_version_number number := 1;
    X_CUSTOMER_ID            number;
    lv_check_exist_customer  varchar2(1) := 'N';
  begin
    lv_customers_in.delete;
    --Update Current Split Percent to 0
    begin
      select customer_id,
             bill_to_customer_id,
             bill_to_address_id,
             ship_to_customer_id,
             ship_to_address_id,
             inv_rate_type,
             inv_currency_code,
             0 customer_bill_split,
             record_version_number
        into lv_customers_in(1).customer_id,
             lv_customers_in(1).bill_to_customer_id,
             lv_customers_in(1).bill_to_address_id,
             lv_customers_in(1).ship_to_customer_id,
             lv_customers_in(1).ship_to_address_id,
             lv_customers_in(1).inv_rate_type,
             lv_customers_in(1).inv_currency_code,
             lv_customers_in(1).customer_bill_split,
             lv_record_version_number
        from pa_project_customers
       where project_id = p_project_id
         and customer_bill_split <> 0;
    exception
      when others then
        write_into_file('Exception in getting existing customer data : ' ||
                        SQLERRM);
    end; --Add New Customer
    write_into_file('Sold to Customer : ' || lv_customers_in(1)
                    .customer_id);
    write_into_file('Bill to Customer ID : ' || lv_customers_in(1)
                    .bill_to_customer_id);
    write_into_file('Bill to Site ID : ' || lv_customers_in(1)
                    .bill_to_address_id);
    write_into_file('Bill Split :' || lv_customers_in(1)
                    .customer_bill_split);
    write_into_file('Ship to Customer ID : ' || lv_customers_in(1)
                    .ship_to_customer_id);
    write_into_file('Ship to Site ID : ' || lv_customers_in(1)
                    .ship_to_address_id);

    pa_customers_contacts_pub.update_project_customer(p_api_version               => gc_api_version_number,
                                                      p_init_msg_list             => fnd_api.g_true,
                                                      p_commit                    => fnd_api.g_false,
                                                      p_validate_only             => fnd_api.g_false,
                                                      p_validation_level          => 0,
                                                      p_project_id                => p_project_id,
                                                      p_customer_id               => lv_customers_in(1)
                                                                                     .customer_id,
                                                      p_project_relationship_code => 'PRIMARY', --g_customers_in(1).project_relationship_code,
                                                      p_customer_bill_split       => lv_customers_in(1)
                                                                                     .customer_bill_split,
                                                      p_bill_to_customer_id       => lv_customers_in(1)
                                                                                     .bill_to_customer_id,
                                                      p_ship_to_customer_id       => lv_customers_in(1)
                                                                                     .ship_to_customer_id,
                                                      p_bill_to_address_id        => lv_customers_in(1)
                                                                                     .bill_to_address_id,
                                                      p_ship_to_address_id        => lv_customers_in(1)
                                                                                     .ship_to_address_id,
                                                      --                                                     p_bill_site_name => 'BILL_SITE_NM',
                                                      --                                                     p_work_site_name => 'SHIP_SITE_NM',
                                                      p_inv_currency_code          => lv_customers_in(1)
                                                                                      .inv_currency_code,
                                                      p_inv_rate_type              => lv_customers_in(1)
                                                                                      .inv_rate_type,
                                                      p_record_version_number      => lv_record_version_number,
                                                      x_return_status              => g_return_status,
                                                      x_msg_count                  => g_msg_count,
                                                      x_msg_data                   => g_msg_data,
                                                      p_default_top_task_cust_flag => 'N',
                                                      p_en_top_task_cust_flag      => 'N');

    write_into_file('Update g_return_status : ' || g_return_status);
    write_into_file('Update g_return_status : ' || g_msg_count);
    write_into_file('Update g_return_status : ' || g_msg_data);
    IF g_return_status <> 'S' THEN
      ROLLBACK;
      IF g_msg_count >= 1 THEN
	  	log_error_clob('Sold to Customer Change(1) :');--Added for CR25364
        FOR i IN 1 .. g_msg_count LOOP
          pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                              p_msg_index     => i,
                                              p_encoded       => 'F',
                                              p_data          => g_data,
                                              p_msg_count     => g_msg_count,
                                              p_msg_index_out => g_msg_index_out);
          write_into_file('Error Message : ' || g_data);
        END LOOP; --i in 1..g_msg_count
		log_error_clob(g_data);--Added for CR25364
      END IF; -- g_msg_count >= 1 THEN
    ELSE
      select decode(count(1), '0', 'N', 'Y')
        into lv_check_exist_customer
        from pa_project_customers
       where project_id = p_project_id
         and customer_id = p_customers_in(1).customer_id;

      if lv_check_exist_customer <> 'Y' THEN
        --Add New Customer Split 100
        write_into_file(p_customers_in(1).customer_id || '-' || p_customers_in(1)
                        .bill_to_customer_id || '-' || p_customers_in(1)
                        .bill_to_address_id);

        pa_customers_contacts_pub.CREATE_PROJECT_CUSTOMER(p_api_version               => 1.0,
                                                          p_init_msg_list             => FND_API.G_TRUE,
                                                          p_commit                    => FND_API.G_FALSE,
                                                          p_validate_only             => FND_API.G_FALSE,
                                                          p_validation_level          => 0, --FND_API.G_VALID_LEVEL_FULL,
                                                          p_calling_module            => 'SELF_SERVICE',
                                                          p_debug_mode                => 'Y',
                                                          p_max_msg_count             => 10 --FND_API.G_MISS_NUM
                                                         ,
                                                          p_project_id                => p_project_id,
                                                          p_customer_id               => p_customers_in(1)
                                                                                         .customer_id -- FND_API.G_MISS_NUM
                                                         ,
                                                          p_customer_name             => FND_API.G_MISS_CHAR,
                                                          p_customer_number           => FND_API.G_MISS_CHAR,
                                                          p_project_relationship_code => 'PRIMARY',
                                                          p_customer_bill_split       => 100,
                                                          p_bill_to_customer_id       => p_customers_in(1)
                                                                                         .bill_to_customer_id --IN NUMBER     := FND_API.G_MISS_NUM       /* For Bug 2731449 */
                                                         ,
                                                          p_ship_to_customer_id       => p_customers_in(1)
                                                                                         .ship_to_customer_id --IN NUMBER     := FND_API.G_MISS_NUM       /* For Bug 2731449 */
                                                         ,
                                                          p_bill_to_customer_name     => FND_API.G_MISS_CHAR /* For Bug 2965841 */,
                                                          p_bill_to_customer_number   => FND_API.G_MISS_CHAR /* For Bug 2965841 */,
                                                          p_ship_to_customer_name     => FND_API.G_MISS_CHAR /* For Bug 2965841 */,
                                                          p_ship_to_customer_number   => FND_API.G_MISS_CHAR /* For Bug 2965841 */,
                                                          p_bill_to_address_id        => p_customers_in(1)
                                                                                         .bill_to_address_id --IN NUMBER     := FND_API.G_MISS_NUM
                                                         ,
                                                          p_ship_to_address_id        => p_customers_in(1)
                                                                                         .ship_to_address_id --IN NUMBER     := FND_API.G_MISS_NUM
                                                         ,
                                                          p_bill_site_name            => FND_API.G_MISS_CHAR,
                                                          p_work_site_name            => FND_API.G_MISS_CHAR,
                                                          p_inv_currency_code         => p_customers_in(1)
                                                                                         .inv_currency_code --FND_API.G_MISS_CHAR
                                                         ,
                                                          p_inv_rate_type             => p_customers_in(1)
                                                                                         .inv_rate_type --IN VARCHAR2   := FND_API.G_MISS_CHAR
                                                         ,
                                                          p_inv_rate_date             => p_customers_in(1)
                                                                                         .inv_rate_date --IN DATE       := FND_API.G_MISS_DATE
                                                         ,
                                                          p_inv_exchange_rate         => p_customers_in(1)
                                                                                         .inv_exchange_rate --IN NUMBER     := FND_API.G_MISS_NUM
                                                         ,
                                                          p_allow_user_rate_type_flag => 'N',
                                                          p_receiver_task_id          => FND_API.G_MISS_NUM
                                                          --,p_receiver_project_name         IN VARCHAR2   := FND_API.G_MISS_CHAR
                                                         ,
                                                          x_customer_id      => x_customer_id --File.Sql.39 bug 4440895
                                                         ,
                                                          x_return_status    => g_return_status --File.Sql.39 bug 4440895
                                                         ,
                                                          x_msg_count        => g_msg_count --File.Sql.39 bug 4440895
                                                         ,
                                                          x_msg_data         => g_msg_data --File.Sql.39 bug 4440895
                                                         ,
                                                          p_project_party_id => NULL
                                                          --Billing setup related changes for FP_M development. Tracking bug 3279981
                                                         ,
                                                          p_Default_Top_Task_Cust_Flag => 'N',
                                                          p_en_top_task_cust_flag      => 'N');

        write_into_file('g_return_status : ' || g_return_status);
        IF g_return_status <> 'S' THEN
          rollback;
          IF g_msg_count >= 1 THEN
		  log_error_clob('Sold to Customer Change(2) :');--Added for CR25364
            FOR i IN 1 .. g_msg_count LOOP
              pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                  p_msg_index     => i,
                                                  p_encoded       => 'F',
                                                  p_data          => g_data,
                                                  p_msg_count     => g_msg_count,
                                                  p_msg_index_out => g_msg_index_out);
              write_into_file('Error Message : ' || g_data);
			  log_error_clob(g_data);--Added for CR25364
            END LOOP; --i in 1..g_msg_count
          END IF; -- g_msg_count >= 1 THEN
        else
          write_into_file('Update Successfull');
          --      commit;
        END IF; --g_return_status <> 'S' THEN
      else
        select record_version_number
          into lv_record_version_number
          from pa_project_customers
         where project_id = p_project_id
           and customer_id = p_customers_in(1).customer_id;

        pa_customers_contacts_pub.update_project_customer(p_api_version               => gc_api_version_number,
                                                          p_init_msg_list             => fnd_api.g_true,
                                                          p_commit                    => fnd_api.g_false,
                                                          p_validate_only             => fnd_api.g_false,
                                                          p_validation_level          => 0,
                                                          p_project_id                => p_project_id,
                                                          p_customer_id               => p_customers_in(1)
                                                                                         .customer_id,
                                                          p_project_relationship_code => 'PRIMARY', --g_customers_in(1).project_relationship_code,
                                                          p_customer_bill_split       => p_customers_in(1)
                                                                                         .customer_bill_split,
                                                          p_bill_to_customer_id       => p_customers_in(1)
                                                                                         .bill_to_customer_id,
                                                          p_ship_to_customer_id       => p_customers_in(1)
                                                                                         .ship_to_customer_id,
                                                          p_bill_to_address_id        => p_customers_in(1)
                                                                                         .bill_to_address_id,
                                                          p_ship_to_address_id        => p_customers_in(1)
                                                                                         .ship_to_address_id,
                                                          --                                                     p_bill_site_name => 'BILL_SITE_NM',
                                                          --                                                     p_work_site_name => 'SHIP_SITE_NM',
                                                          p_inv_currency_code          => p_customers_in(1)
                                                                                          .inv_currency_code,
                                                          p_inv_rate_type              => p_customers_in(1)
                                                                                          .inv_rate_type,
                                                          p_record_version_number      => lv_record_version_number,
                                                          x_return_status              => g_return_status,
                                                          x_msg_count                  => g_msg_count,
                                                          x_msg_data                   => g_msg_data,
                                                          p_default_top_task_cust_flag => 'N',
                                                          p_en_top_task_cust_flag      => 'N');

        write_into_file('Update g_return_status : ' || g_return_status);
        write_into_file('Update g_return_status : ' || g_msg_count);
        write_into_file('Update g_return_status : ' || g_msg_data);
        IF g_return_status <> 'S' THEN
          ROLLBACK;
          IF g_msg_count >= 1 THEN
		  log_error_clob('Sold to Customer Change(3):'); --Added for CR25364
            FOR i IN 1 .. g_msg_count LOOP
              pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                  p_msg_index     => i,
                                                  p_encoded       => 'F',
                                                  p_data          => g_data,
                                                  p_msg_count     => g_msg_count,
                                                  p_msg_index_out => g_msg_index_out);
              write_into_file('Error Message : ' || g_data);
			  log_error_clob(g_data);--Added for CR25364
            END LOOP; --i in 1..g_msg_count
          END IF; -- g_msg_count >= 1 THEN
        end if;
      end if;
    END IF; --g_return_status <> 'S' THEN
  end proj_sold_to_cust_change;

  ------ Added for CR24470 Start -----------
  /*
  ** Procedure Name  : add_forcast_rev_lines
  **
  ** Purpose:  For adding lines to create Initial Forecast Revenue Budget
  **
  ** Procedure History:
  ** Date                   Who                    Description
  ** ---------            ---------------       -----------------------------------------
  ** 08-Jan-2021           Arnab Chakraborty      Created for adding lines to the table type for
  **                                              processing of Forecast Revenue budget which is not
  **                                              present in payload
  */
  PROCEDURE add_forcast_rev_lines(p_budget_fc_tbl  IN g_budget_prj_tbl_t,
                                  p_work_type_id   IN varchar2,
                                  p_resource_alias IN varchar2,
                                  x_return_status  OUT VARCHAR2,
                                  x_return_message OUT VARCHAR2) is
    l_work_type_name      pa_work_types_tl.name%type;
    lv_budget_line_in_tbl pa_budget_pub.budget_line_in_tbl_type;
    lv_count              Number := 1;
    ln_tot_burdened_cost  number;
    ln_funding_amt        number;
    ln_bud_amt            number;
  begin
    write_into_file('Forecast cost Budget Table count : ' ||
                    p_budget_fc_tbl.count);

    gv_procedure_name := 'add_forcast_rev_lines';

    if p_budget_fc_tbl.count > 0 then
      lv_budget_line_in_tbl.delete;
      select name
        into l_work_type_name
        from pa_work_types_tl
       where work_type_id = p_work_type_id
         and language = 'US';
      write_into_file('Add Forecast Lines : ' || l_work_type_name);
      for i in p_budget_fc_tbl.first .. p_budget_fc_tbl.last loop
        for j in p_budget_fc_tbl(i).g_budget_line_in_tbl.first .. p_budget_fc_tbl(i)
                                                                  .g_budget_line_in_tbl.last loop

          write_into_file('table type work type ' || p_budget_fc_tbl(i).g_prj_bud_line_extra_t(j)
                          .work_type);
          if p_budget_fc_tbl(i).g_prj_bud_line_extra_t(j)
           .work_type = l_work_type_name then
            if l_work_type_name = gc_bs_task_type then
              write_into_file('for Task - ' || l_work_type_name);
              ln_tot_burdened_cost := 0;
              for k in p_budget_fc_tbl(i).g_budget_line_in_tbl.first .. p_budget_fc_tbl(i)
                                                                        .g_budget_line_in_tbl.last loop
                if gc_bs_task_type = p_budget_fc_tbl(i).g_prj_bud_line_extra_t(k)
                  .work_type then
                  ln_tot_burdened_cost := ln_tot_burdened_cost + p_budget_fc_tbl(i).g_budget_line_in_tbl(k)
                                         .burdened_cost;
                end if;
              end loop;

              select ppf.total_baselined_amount
                into ln_funding_amt
                from pa_summary_project_fundings ppf
               where ppf.project_id = p_budget_fc_tbl(i).p_pa_project_id
                 and ppf.task_id = p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                    .pa_task_id;

              ln_bud_amt := round(((p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                                  .burdened_cost / ln_tot_burdened_cost) *
                                  ln_funding_amt),
                                  2);

              write_into_file('ln_bud_amt -' || ln_bud_amt);
              write_into_file('ln_funding_amt -' || ln_funding_amt);
            elsif l_work_type_name = gc_ff_task_type then
              write_into_file('for Task - ' || l_work_type_name);
              ln_tot_burdened_cost := 0;
              for k in p_budget_fc_tbl(i).g_budget_line_in_tbl.first .. p_budget_fc_tbl(i)
                                                                        .g_budget_line_in_tbl.last loop
                if gc_ff_task_type = p_budget_fc_tbl(i).g_prj_bud_line_extra_t(k)
                  .work_type then
                  ln_tot_burdened_cost := ln_tot_burdened_cost + p_budget_fc_tbl(i).g_budget_line_in_tbl(k)
                                         .burdened_cost;
                end if;
              end loop;

              select ppf.total_baselined_amount
                into ln_funding_amt
                from pa_summary_project_fundings ppf
               where ppf.project_id = p_budget_fc_tbl(i).p_pa_project_id
                 and ppf.task_id = p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                    .pa_task_id;

              ln_bud_amt := round(((p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                                  .burdened_cost / ln_tot_burdened_cost) *
                                  ln_funding_amt),
                                  2);

              write_into_file('ln_bud_amt -' || ln_bud_amt);
              write_into_file('ln_funding_amt -' || ln_funding_amt);
              ----  If task type is Start Up, then Revenue amount would be the funding amount on task
            elsif l_work_type_name = gc_su_task_type then
              write_into_file('for Start Up Task');
              select ppf.total_baselined_amount
                into ln_funding_amt
                from pa_summary_project_fundings ppf
               where ppf.project_id = p_budget_fc_tbl(i).p_pa_project_id
                 and ppf.task_id = p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                    .pa_task_id;

              ln_bud_amt := round(ln_funding_amt, 2);
            end if;

            lv_budget_line_in_tbl(lv_count).budget_start_date := p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                                                                 .budget_start_date;
            lv_budget_line_in_tbl(lv_count).budget_end_date := p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                                                               .budget_end_date;

            if p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
             .period_name is null then

              if lv_budget_line_in_tbl(lv_count)
               .budget_start_date is not null and lv_budget_line_in_tbl(lv_count)
                 .budget_end_date is not null then

                SELECT glp.period_name
                  into lv_budget_line_in_tbl(lv_count).period_name
                  FROM pa_projects_all        ppa,
                       pa_tasks               pt,
                       pa_implementations_all pia,
                       gl_periods             glp
                 WHERE ppa.project_id = p_budget_fc_tbl(i).p_pa_project_id
                   and pt.task_id = p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                      .pa_task_id
                   and pt.project_id = ppa.project_id
                   and pia.org_id = ppa.org_id
                   and glp.period_set_name = pia.period_set_name
                   and glp.start_date >= lv_budget_line_in_tbl(lv_count)
                      .budget_start_date
                   and glp.end_date <= lv_budget_line_in_tbl(lv_count)
                      .budget_end_date;
              else
                begin
                SELECT glp.period_name
                  into lv_budget_line_in_tbl(lv_count).period_name
                  FROM pa_projects_all        ppa,
                       pa_tasks               pt,
                       pa_implementations_all pia,
                       gl_periods             glp
                 WHERE ppa.project_id = p_budget_fc_tbl(i).p_pa_project_id
                   and pt.task_id = p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                      .pa_task_id
                   and pt.project_id = ppa.project_id
                   and pia.org_id = ppa.org_id
                   and glp.period_set_name = pia.period_set_name
                   and nvl(pt.completion_date, ppa.completion_date) between
                       glp.start_date and glp.end_date;

                end;
              end if;
            else

              lv_budget_line_in_tbl(lv_count).period_name := p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                                                             .period_name;

            end if;

            lv_budget_line_in_tbl(lv_count).revenue := ln_bud_amt;
            lv_budget_line_in_tbl(lv_count).resource_alias := p_resource_alias;
            lv_budget_line_in_tbl(lv_count).pa_task_id := p_budget_fc_tbl(i).g_budget_line_in_tbl(j)
                                                          .pa_task_id;
            lv_count := lv_count + 1;
          end if;
        end loop;
      end loop;

      if lv_budget_line_in_tbl.count > 0 then
        for j in lv_budget_line_in_tbl.first .. lv_budget_line_in_tbl.last loop

          for i in g_budget_prj_tbl.first .. g_budget_prj_tbl.last loop
            if g_budget_prj_tbl(i).budget_type_code = 'FR' then
              lv_count := g_budget_prj_tbl(i).g_budget_line_in_tbl.count + 1;
              write_into_file('lv_count : ' || lv_count);
              g_budget_prj_tbl(i).g_budget_line_in_tbl(lv_count) := lv_budget_line_in_tbl(j);
              g_budget_prj_tbl(i).g_prj_bud_line_extra_t(lv_count).work_type := l_work_type_name;
            end if;
          end loop;
        end loop;
      end if;
    end if;
  exception
    when others then
      x_return_status  := gc_error;
      x_return_message := 'Exception : ' || SQLERRM;
	  log_error_clob('Derive Budget Lines : '||SQLERRM); --Added for CR25364
      write_into_file(gv_procedure_name || '-' || x_return_message);
      write_into_file(dbms_utility.format_error_stack || '-' ||
                      dbms_utility.format_error_backtrace);
  end add_forcast_rev_lines;
  --
  /*
  ** Procedure Name  : derive_budget_details
  **
  ** Purpose:  For deriving forecast budget amount
  **
  ** Procedure History:
  ** Date                   Who                    Description
  ** ---------            ---------------       -----------------------------------------
  ** 08-Jan-2021           Arnab Chakraborty      Created for deriving Forecast Revenue
  **                                              budget details
  */
  PROCEDURE derive_budget_details(x_return_status  OUT VARCHAR2,
                                  x_return_message OUT VARCHAR2) is
    lv_create_fc_bud  varchar2(20);
    l_worktype_exists varchar2(1) := 'N';
    l_fc_bud_exist    varchar2(2) := 'N';
    l_fr_bud_exist    varchar2(2) := 'N';
    lv_budget_fc_tbl  g_budget_prj_tbl_t;
    lv_budget_fr_tbl  g_budget_prj_tbl_t;
    lv_fund_amount    number;
    lv_work_type_id   number;
    lv_bud_count      number := 1;
    lv_bud_line_count number := 1;

  begin

    write_into_file('In Derive Budget Details');
    gv_procedure_name := 'derive_budget_details';
    lv_create_fc_bud  := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                       p_key_type       => gc_key_type,
                                                                       p_key_type_value => gv_source_system,
                                                                       p_name           => gc_create_fc_budget),
                             'N');

    write_into_file('lv_create_fc_bud : ' || lv_create_fc_bud);

    if lv_create_fc_bud = 'Y' THEN
      write_into_file('Create Budget Details Enabled for this Parnter');
      if g_budget_prj_tbl.count > 0 then
        -- Check Forecast Cost Exists and Forecast Revenue exists in the payload
        for bud_count in g_budget_prj_tbl.first .. g_budget_prj_tbl.last loop
          if g_budget_prj_tbl(bud_count).budget_type_code = 'FC' THEN
            lv_budget_fc_tbl(lv_budget_fc_tbl.count + 1) := g_budget_prj_tbl(bud_count);
            l_fc_bud_exist := 'Y';
          elsif g_budget_prj_tbl(bud_count).budget_type_code = 'FR' THEN
            lv_budget_fr_tbl(lv_budget_fr_tbl.count + 1) := g_budget_prj_tbl(bud_count);
            l_fr_bud_exist := 'Y';
          end if;
        end loop;

        select decode(count(1), '0', 'N', 'Y')
          into l_worktype_exists
          from pa_tasks pt, xxint_event_type_key_vals x
         where x.event_type = gc_event_type
           and x.key_type = gc_key_type
           and x.key_type_value = gv_source_system
           and x.key_name = 'BUDGET_TYPE_CODE'
           and x.status = 'ACTIVE'
           and pt.project_id = g_budget_prj_tbl(1).p_pa_project_id
           and to_char(pt.work_type_id) = x.attribute1;

        write_into_file('Task Work Type Exists : ' || l_worktype_exists);

        if l_worktype_exists = 'Y' THEN
          if l_fr_bud_exist = 'N' THEN
            lv_bud_count := g_budget_prj_tbl.count + 1;
            g_budget_prj_tbl(lv_bud_count).p_pm_project_reference := g_budget_prj_tbl(1)
                                                                     .p_pm_project_reference;
            g_budget_prj_tbl(lv_bud_count).p_pa_project_id := g_budget_prj_tbl(1)
                                                              .p_pa_project_id;
            g_budget_prj_tbl(lv_bud_count).budget_type_code := 'FR';
            g_budget_prj_tbl(lv_bud_count).budget_update_flag := 'C';
            select rev_budget_entry_method_code,
                   rev_budget_resource_list_id
              into g_budget_prj_tbl(lv_bud_count).entry_method_code,
                   g_budget_prj_tbl(lv_bud_count).resource_list_id
              from pa_project_types_all ppt, pa_projects_all ppa
             where ppa.project_id = g_budget_prj_tbl(1).p_pa_project_id
               and ppt.project_type = ppa.project_type
               and ppt.org_id = ppa.org_id;
          end if;
          -- Check Funding revenue for the Task
          for c_bud_defaults in (select *
                                   from xxint_event_type_key_vals
                                  where event_type = gc_event_type
                                    and key_type = gc_key_type
                                    and key_type_value = gv_source_system
                                    and key_name = 'BUDGET_TYPE_CODE'
                                    and key_value = 'FR'
                                    and status = 'ACTIVE') loop
            l_worktype_exists := 'N';
            if lv_budget_fr_tbl.count > 0 then

              for i in lv_budget_fr_tbl.first .. lv_budget_fr_tbl.last loop
                l_worktype_exists := 'N';

                for j in lv_budget_fr_tbl(i).g_budget_line_in_tbl.first .. lv_budget_fr_tbl(i)
                                                                           .g_budget_line_in_tbl.last loop

                  write_into_file('Attribute value for work type - ' ||
                                  c_bud_defaults.attribute1);
                  write_into_file('Attribute value for resource alias - ' ||
                                  c_bud_defaults.attribute2);
                  if c_bud_defaults.attribute1 = lv_budget_fr_tbl(i).g_prj_bud_line_extra_t(j)
                    .work_type_id and l_worktype_exists = 'N' then
                    l_worktype_exists := 'Y';

                    exit;
                  end if;
                end loop;
                if l_worktype_exists = 'N' THEN
                  --lv_bud_line_count := lv_budget_fr_tbl(i).g_budget_line_in_tbl.count;
                  if lv_budget_fc_tbl.count > 0 then

                    add_forcast_rev_lines(lv_budget_fc_tbl,
                                          c_bud_defaults.attribute1,
                                          c_bud_defaults.attribute2,
                                          x_return_status,
                                          x_return_message);
                  end if;
                end if;
              end loop;
            else

              for c_data in (SELECT rownum            row_num,
                                    pbl.period_name,
                                    pbl.burdened_cost,
                                    pra.task_id,
                                    pt.work_type_id,
                                    pwt.name          work_type
                               FROM pa_budget_versions        pbvd,
                                    pa_resource_list_members  prlm,
                                    pa_resource_assignments   pra,
                                    pa_budget_lines           pbl,
                                    pa_tasks                  pt,
                                    pa_work_types_tl          pwt,
                                    xxint_event_type_key_vals x
                              WHERE pbvd.budget_type_code = 'FC'
                                AND pbvd.budget_version_id =
                                    pra.budget_version_id
                                AND pbvd.project_id = pra.project_id
                                AND pbvd.budget_status_code = 'B'
                                and pbvd.current_flag = 'Y'
                                AND pbl.resource_assignment_id =
                                    pra.resource_assignment_id
                                AND prlm.resource_list_member_id =
                                    pra.resource_list_member_id
                                and pt.task_id = pra.task_id
                                and pwt.work_type_id = pt.work_type_id
                                and pwt.language = 'US'
                                and x.event_type = gc_event_type
                                and x.key_type = gc_key_type
                                and x.key_type_value = gv_source_system
                                and x.key_value = pbvd.budget_type_code
                                and x.key_name = 'BUDGET_TYPE_CODE'
                                and x.status = 'ACTIVE'
                                and x.attribute1 = to_char(pt.work_type_id)
                                AND pra.project_id = g_budget_prj_tbl(1)
                                   .p_pa_project_id) loop
                if lv_budget_fc_tbl.count = 0 then
                  lv_budget_fc_tbl(1).budget_type_code := 'FC';
                  lv_budget_fc_tbl(1).budget_update_flag := 'C';
                end if;
                write_into_file('Before value assignment to table type');
                lv_budget_fc_tbl(1).g_budget_line_in_tbl(c_data.row_num).period_name := c_data.period_name;
                lv_budget_fc_tbl(1).g_budget_line_in_tbl(c_data.row_num).pa_task_id := c_data.task_id;
                lv_budget_fc_tbl(1).g_budget_line_in_tbl(c_data.row_num).burdened_cost := c_data.burdened_cost;
                lv_budget_fc_tbl(1).g_prj_bud_line_extra_t(c_data.row_num).work_type := c_data.work_type;
                lv_budget_fc_tbl(1).g_prj_bud_line_extra_t(c_data.row_num).work_type_id := c_data.work_type_id;
              end loop;

              if lv_budget_fc_tbl.count > 0 then
                write_into_file('Before calling procedure to add FR line');
                add_forcast_rev_lines(lv_budget_fc_tbl,
                                      c_bud_defaults.attribute1,
                                      c_bud_defaults.attribute2,
                                      x_return_status,
                                      x_return_message);
              end if;
            end if;
          end loop;
          -- Check Key Value Pair for Calculation
          --Get FC cost and copy it to FR Cost
          FOR prj_budget_cnt IN g_budget_prj_tbl.first .. g_budget_prj_tbl.last LOOP
            write_into_file('After derive Budget Lines');
            write_into_file(g_budget_prj_tbl(prj_budget_cnt)
                            .p_pm_project_reference || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .p_pa_project_id || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .budget_type_code || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .entry_method_code || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .resource_list_id);
            write_into_file(g_budget_prj_tbl(prj_budget_cnt)
                            .g_budget_line_in_tbl.COUNT || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .g_budget_line_out_tbl.COUNT);
            FOR i IN g_budget_prj_tbl(prj_budget_cnt)
                     .g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                    .g_budget_line_in_tbl.last LOOP
              write_into_file(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                              .pa_task_id || '-' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                              .period_name || '-' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                              .revenue);
              write_into_file(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                              .pa_task_id || '-' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                              .period_name || '-' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                              .burdened_cost);
            END LOOP;
          end loop;
        end if;
      END IF;
    end if;
  exception
    when others then
      x_return_status  := gc_error;
      x_return_message := 'Exception : ' || SQLERRM;
	  log_error_clob('Derive Budget Details(2):'||x_return_message);
      write_into_file(gv_procedure_name || '-' || x_return_message);
      write_into_file(dbms_utility.format_error_stack || '-' ||
                      dbms_utility.format_error_backtrace);
  end derive_budget_details;
  ------ Added for CR24470 End -----------
  --Added for CR24105
  PROCEDURE create_attachment(x_return_status  OUT VARCHAR2,
                              x_return_message OUT VARCHAR2) IS
    l_category_id   number;
    l_user_id       number := fnd_global.user_id;
    l_function_name varchar2(200);
    l_pk1_value     fnd_attached_documents.pk1_value%type;
    l_entity_name   varchar2(200);
    x_file_id       number;
    l_seq_num       number;
    l_funding_seq   number := 0;
    l_task_seq number := 0;
    l_proj_seq number := 0;
    l_agr_seq number := 0;
  BEGIN

    write_into_file('In Create Attachment' || g_proj_attach_tbl.count);

    if g_proj_attach_tbl.count > 0 then
      for i in g_proj_attach_tbl.first .. g_proj_attach_tbl.last loop
        write_into_file(g_proj_attach_tbl(i).noteType);
        write_into_file(g_proj_attach_tbl(i).notes);
        write_into_file(g_proj_attach_tbl(i).entityName);
        write_into_file(g_proj_attach_tbl(i).seqNumber);
        write_into_file(g_proj_attach_tbl(i).title);
        write_into_file(g_proj_attach_tbl(i).description);
        write_into_file(g_proj_attach_tbl(i).agreement_num);
        write_into_file(g_proj_attach_tbl(i).project_num);
        write_into_file(g_proj_attach_tbl(i).task_num);
        begin
          select category_id
            into l_category_id
            from fnd_document_categories_tl
           where user_name like g_proj_attach_tbl(i).noteType
             and language = 'US';
        exception
          when others then
            null;
        end;
        write_into_file('Category Id : ' || l_category_id);

        if g_proj_attach_tbl(i).project_funding_amount is not null then

          select project_funding_id
            into l_pk1_value
            from pa_project_fundings pf
           where agreement_id =
                 (select agreement_id
                    from pa_agreements_all
                   where agreement_num = g_proj_attach_tbl(i).agreement_num)
             and project_id =
                 (select project_id
                    from pa_projects_all
                   where segment1 = g_proj_attach_tbl(i).project_num)
             and allocated_amount = g_proj_attach_tbl(i)
                .project_funding_amount
             and (g_proj_attach_tbl(i)
                 .task_num is null or
                  task_id =
                  (select task_id
                     from pa_tasks
                    where project_id = pf.project_id
                      and task_number = g_proj_attach_tbl(i).task_num));

          l_function_name := 'Project Fundings';
          l_entity_name   := 'PA_PROJECT_FUNDINGS';
          l_funding_seq   := l_funding_seq + 10;
          l_seq_num       := nvl(l_funding_seq, 10);

        elsif g_proj_attach_tbl(i).project_funding_amount is null and g_proj_attach_tbl(i)
              .task_num is not null then

          select task_id
            into l_pk1_value
            from pa_tasks
           where project_id =
                 (select project_id
                    from pa_projects_all
                   where segment1 = g_proj_attach_tbl(i).project_num)
             and task_number = g_proj_attach_tbl(i).task_num;

          l_function_name := 'Tasks';
          l_entity_name   := 'PA_TASKS';

          l_task_seq := l_task_seq + 10;
          l_seq_num  := nvl(l_task_seq, 10);

        elsif g_proj_attach_tbl(i).project_funding_amount is null and g_proj_attach_tbl(i)
              .task_num is null and g_proj_attach_tbl(i)
              .project_num is not null then

          select project_id
            into l_pk1_value
            from pa_projects_all
           where segment1 = g_proj_attach_tbl(i).project_num;

          l_function_name := 'Projects';
          l_entity_name   := 'PA_PROJECTS';

          l_proj_seq := l_proj_seq + 10;
          l_seq_num  := nvl(l_proj_seq, 10);

        else
          select agreement_id
            into l_pk1_value
            from pa_agreements
           where agreement_num = g_proj_attach_tbl(i).agreement_num;

          l_function_name := 'PAXINEAG';
          l_entity_name   := 'PA_AGREEMENTS';

          l_agr_seq := l_agr_seq + 10;
          l_seq_num := nvl(l_agr_seq, 10);

        end if;

        write_into_file('l_pk1_value : ' || l_pk1_value);
        write_into_file('l_seq_num : ' || l_seq_num);
        write_into_file('l_function_name : ' || l_function_name);
        write_into_file('l_entity_name : ' || l_entity_name);

        --
        --    if g_proj_attach_tbl(i).agreement_num is not null
        --        and g_proj_attach_tbl(i).project_num is null
        --        and g_proj_attach_tbl(i).task_num is null
        --        and g_proj_attach_tbl(i).project_funding_amount is null
        --    then
        --
        --        select agreement_id
        --        into l_pk1_value
        --        from pa_agreements
        --        where agreement_num  = g_proj_attach_tbl(i).agreement_num;
        --
        --        l_function_name := 'PAXINEAG';
        --        l_entity_name   := 'PA_AGREEMENTS';
        --
        --        begin
        --        select nvl(max(seq_num),0)
        --        into l_seq_num
        --        from fnd_attached_documents
        --        where entity_name = l_entity_name
        --        and pk1_value = l_pk1_value;
        --        exception
        --         when no_data_found then
        --           l_seq_num := 0;
        --        when others then
        --            l_seq_num := 0;
        --        end;
        --    end if;
        --
        --  write_into_file('l_pk1_value : '||l_pk1_value);
        --  write_into_file('l_seq_num : '||l_seq_num);
        --  write_into_file('l_function_name : '||l_function_name);
        --  write_into_file('l_entity_name : '||l_entity_name);
        --
        --    if g_proj_attach_tbl(i).project_num is not null and g_proj_attach_tbl(i).agreement_num is null
        --    and g_proj_attach_tbl(i).task_num is null
        --        and g_proj_attach_tbl(i).project_funding_amount is null
        --    then
        --
        --        select project_id
        --        into l_pk1_value
        --        from pa_projects_all
        --        where segment1  = g_proj_attach_tbl(i).project_num;
        --
        --        l_function_name := 'Projects';
        --        l_entity_name   := 'PA_PROJECTS';
        --    end if;
        --
        --      if g_proj_attach_tbl(i).project_num is null and g_proj_attach_tbl(i).agreement_num is null
        --    and g_proj_attach_tbl(i).task_num is not null
        --        and g_proj_attach_tbl(i).project_funding_amount is null
        --    then
        --
        --        select task_id
        --        into l_pk1_value
        --        from pa_tasks
        --        where segment1  = gv_prg_proj_attach_tbl(i).task_num;
        --
        --        l_function_name := 'Projects';
        --        l_entity_name   := 'PA_PROJECTS';
        --    end if;
        --
        --    if  g_proj_attach_tbl(i).project_funding_amount is not null
        --    then
        --
        --        select project_funding_id
        --        into l_pk1_value
        --        from pa_project_fundings pf
        --        where agreement_id = (select agreement_id from pa_agreements_all where agreement_num = g_proj_attach_tbl(i).agreement_num)
        --        and project_id = (select project_id from pa_projects_all where segment1  = g_proj_attach_tbl(i).project_num)
        --        and allocated_amount = g_proj_attach_tbl(i).project_funding_amount
        --        and (g_proj_attach_tbl(i).task_num is null or task_id = (select task_id from pa_tasks where project_id = pf.project_id and task_num = g_proj_attach_tbl(i).task_num));
        --
        --        l_function_name := 'Project Fundings';
        --        l_entity_name   := 'PA_PROJECT_FUNDINGS';
        --    end if;
        --
        --    if l_pk1_value is not null then

        --    l_seq_num := l_seq_num + 10;

        fnd_webattch.add_attachment(seq_num              => l_seq_num,
                                    category_id          => l_category_id,
                                    document_description => g_proj_attach_tbl(i)
                                                            .noteType,
                                    datatype_id          => 1,
                                    text                 => g_proj_attach_tbl(i)
                                                            .notes,
                                    file_name            => NULL,
                                    url                  => NULL,
                                    function_name        => l_function_name,
                                    entity_name          => l_entity_name,
                                    pk1_value            => l_pk1_value,
                                    pk2_value            => NULL,
                                    pk3_value            => NULL,
                                    pk4_value            => NULL,
                                    pk5_value            => NULL,
                                    media_id             => x_file_id,
                                    user_id              => l_user_id,
                                    usage_type           => 'O');
        --        end if;
      end loop;
    END if;
  end;

  procedure add_task_limit_exp_category(p_task_limit_exp g_task_limit_exp_t) is
    l_count  NUMBER := 0;
    p_tc_in  pa_trx_control_pub.tc_rec_tbl_type; --:= PA_TRX_CONTROL_PUB.Tc_Rec_Tbl_Type();
    p_lcf_in pa_trx_control_pub.tc_rec_lcf_type; --:= PA_TRX_CONTROL_PUB.TC_REC_LCF_TYPE();
    e_invalid_exception EXCEPTION;
    i NUMBER := 0;
    --
    CURSOR c_task_rec(p_project_number       varchar2,
                      p_task_number          varchar2,
                      p_expenditure_category varchar2) IS
      SELECT ppa.org_id,
             ppa.segment1,
             nvl(pt.pm_product_code, ppa.pm_product_code) product_code,
             ppa.project_type,
             ppa.project_id,
             pt.task_id,
             nvl(pt.start_date, ppa.start_date) start_date
        FROM pa_projects_all ppa, pa_tasks pt
       WHERE ppa.template_flag = 'N'
         AND pt.project_id = ppa.project_id
         AND ppa.project_status_code <> 'CLOSED'
            --AND SYSDATE BETWEEN ppa.start_date AND nvl(ppa.completion_date, SYSDATE + 1) --Commmented for RT8038711
         AND nvl(ppa.completion_date, SYSDATE + 1) >= sysdate --Added for RT8038711
         AND pt.limit_to_txn_controls_flag = 'Y'
         AND NOT EXISTS
       (SELECT 1
                FROM pa_transaction_controls
               WHERE project_id = pt.project_id
                 AND task_id = pt.task_id
                 AND expenditure_category = p_expenditure_category)
         AND ppa.segment1 = p_project_number
         AND pt.task_number = p_task_number;

  BEGIN
    --clean up variable
    if p_task_limit_exp.count > 0 then
      p_tc_in.DELETE;

      FOR task_count in p_task_limit_exp.first .. p_task_limit_exp.last loop
        FOR c_task_data IN c_task_rec(p_task_limit_exp(task_count)
                                      .project_number,
                                      p_task_limit_exp(task_count)
                                      .task_number,
                                      p_task_limit_exp(task_count)
                                      .task_exp_category_code) LOOP
          i := i + 1;
          p_tc_in(i).p_project_id := c_task_data.project_id; --         pa_transaction_controls.project_id%type    :=-1
          p_tc_in(i).p_task_id := c_task_data.task_id; --Pa_Transaction_Controls.Task_Id%Type        :=-2
          p_tc_in(i).p_start_date_active := c_task_data.start_date; --Pa_Transaction_Controls.Start_Date_Active%Type  :=Pa_Interface_Utils_Pub.G_Pa_Miss_Date
          p_tc_in(i).p_end_date_active := pa_interface_utils_pub.g_pa_miss_date;
          p_tc_in(i).p_expenditure_type := pa_interface_utils_pub.g_pa_miss_char;
          p_tc_in(i).p_expenditure_category := p_task_limit_exp(task_count)
                                               .task_exp_category_code; --Pa_Transaction_Controls.Expenditure_Category%Type :=Pa_Interface_Utils_Pub.G_Pa_Miss_Char
          p_tc_in(i).p_person_id := -3;
          p_tc_in(i).p_chargeable_flag := 'Y'; --Pa_Transaction_Controls.Chargeable_Flag%Type   :=PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
          p_tc_in(i).p_billable_indicator := 'T'; --Pa_Interface_Utils_Pub.G_Pa_Miss_Char;
          p_tc_in(i).p_non_labor_resource := pa_interface_utils_pub.g_pa_miss_char;
          p_tc_in(i).p_scheduled_exp_only := pa_interface_utils_pub.g_pa_miss_char;
          p_tc_in(i).p_workplan_res_only_flag := pa_interface_utils_pub.g_pa_miss_char;
          p_tc_in(i).p_employees_only_flag := pa_interface_utils_pub.g_pa_miss_char;
          p_tc_in(i).p_error_message_code := NULL;
          p_tc_in(i).p_return_status_code := fnd_api.g_ret_sts_success;
          p_tc_in(i).p_error_message_count := 0;
        END LOOP;
      END LOOP;
      -- RT8196124 , RT#8208760 -- a rollback is happening when we invoke pa_trx_control_pub.create_txn_control
      -- with no data to input parameters. added below check to invoke the API only if there is data to process.
      IF p_tc_in.COUNT > 0 THEN
        pa_trx_control_pub.create_txn_control(p_api_version_number => 1.0,
                                              p_init_msg_list      => fnd_api.g_true,
                                              p_tc_in              => p_tc_in,
                                              p_lcf_in             => p_lcf_in);

        --    IF p_tc_in.count > 0 THEN
        FOR c IN 1 .. p_tc_in.count LOOP
          IF p_tc_in(c).p_return_status_code = 'S' THEN
            write_into_file('Project/Task : ' || p_tc_in(c).p_project_id || '/' || p_tc_in(c)
                            .p_task_id ||
                            ' : Expenditure Category Updated successfully');

          ELSE
            write_into_file('Error while adding Expenditure Project/Task: ' || p_tc_in(c)
                            .p_project_id || '/' || p_tc_in(c).p_task_id ||
                            ' : ' || p_tc_in(c).p_error_message_code);

          END IF;
        END LOOP;
      END IF;
    end if;

  EXCEPTION
    WHEN e_invalid_exception THEN
      NULL;
    WHEN OTHERS THEN
      fnd_file.put_line(fnd_file.log,
                        'Exception occured while running datafix procedure for XXPA1390_TASK_EXPENDITURE_UPD');
      fnd_file.put_line(fnd_file.log, 'Error Details  : ' || sqlerrm);
  END add_task_limit_exp_category;

  -- CR25098 - Function to get conversion rate used for creation of Project Budget Lines - START
  FUNCTION get_conversion_rate(p_from_currency   IN VARCHAR2,
                               p_to_currency     IN VARCHAR2,
                               p_conversion_type IN VARCHAR2,
                               p_conversion_date IN DATE)
  RETURN NUMBER IS
    ln_conversion_rate NUMBER := NULL;
    lv_error_message   VARCHAR2(4000);

    CURSOR get_conversion_rate
	IS
      SELECT conversion_rate
        FROM gl_daily_rates
       WHERE conversion_type = p_conversion_type
         AND from_currency = p_from_currency
         AND to_currency = p_to_currency
         AND TRUNC(conversion_date) = TRUNC(p_conversion_date);

    CURSOR get_latest_rate
	IS
      SELECT conversion_rate
        FROM gl_daily_rates
       WHERE conversion_type = p_conversion_type
         AND from_currency = p_from_currency
         AND to_currency = p_to_currency
         AND TRUNC(conversion_date) = (SELECT MAX(conversion_date)
                                        FROM gl_daily_rates
                                       WHERE conversion_type = p_conversion_type
                                         AND from_currency = p_from_currency
                                         AND to_currency = p_to_currency)
       ORDER BY conversion_date DESC;

  BEGIN
    write_into_file('Start get_conversion_rate for From Currency: ' || p_from_currency || ' ~ and to currency: ' || p_to_currency || ' ~ for rate: ' || p_conversion_type);
    IF p_from_currency = p_to_currency
	THEN
      RETURN 1;
    END IF;

	--Get Direct Conversion Rate
    FOR c_conv_rate IN get_conversion_rate
	LOOP
      ln_conversion_rate := c_conv_rate.conversion_rate;
    END LOOP;

    IF ln_conversion_rate IS NULL
	THEN
      FOR c_conv_rate IN get_latest_rate
	  LOOP
        ln_conversion_rate := c_conv_rate.conversion_rate;
        EXIT;
      END LOOP;
    END IF;

    write_into_file('get_conversion_rate - ln_conversion_rate : ' || ln_conversion_rate);
	RETURN ln_conversion_rate;

  EXCEPTION
    WHEN OTHERS THEN
      lv_error_message := SUBSTR(SQLERRM, 1, 2000);
      write_into_file('get_conversion_rate - Exception in Conversion Rate Procedure : ' || lv_error_message);
      RETURN NULL;
  END get_conversion_rate;
  -- CR25098 - Function to get conversion rate used for creation of Project Budget Lines - END

  /*
  ** Procedure Name  : parse_transaction
  **
  ** Purpose:  For Parsing the XML
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 10-Oct-13            Vipul Gosai      Created new
  ** 05-Dec-13            Vipul Gosai      HPQC#11273 XXPA2381: Change Date Format to RRRR-MM-DDTHH24:MI:SS
  */
  PROCEDURE parse_transaction(p_xml            IN XMLTYPE,
                              p_agr_rec        OUT g_agr_rec_in,
                              x_return_status  OUT VARCHAR2,
                              x_return_message OUT VARCHAR2)
  IS
    l_att_count              NUMBER := 0;
    l_prj_budget_line_cnt    NUMBER := 0;
    lv_months_extn           NUMBER := 0;
    lv_completion_dt         DATE   := SYSDATE;    --End of change
    -- CR25098 - Added Local Variables - START
	ln_prj_src_cnt           NUMBER := 0;
	lv_carrying_out_org_code org_organization_definitions.organization_code%TYPE;
	lv_func_currency_code    gl_ledgers.currency_code%TYPE;
    lv_projrate_type         pa_implementations_all.default_rate_type%TYPE;
    -- CR25098 - Added Local Variables - END
	lv_task_count         number:=0; --Added for CR25364

  BEGIN
    gv_procedure_name := 'parse_transaction';
    gv_poo            := 'Start';
    write_into_file(gv_procedure_name || '.' || gv_poo);
    x_return_status        := 'SUCCESS';
    gv_poo                 := 'START AGREEMENT LOOP';
    p_agr_rec.agr_main_rec := NULL;
    -- START AGREEMENT LOOP
    FOR c_agr_loop IN (SELECT EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/PM_AGREEMENT_REFERENCE',
                                           g_namespace) AS pm_agreement_reference,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/AGREEMENT_ID',
                                           g_namespace) AS agreement_id,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/CUSTOMER_ID',
                                           g_namespace) AS customer_id,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/CUSTOMER_NUM',
                                           g_namespace) AS customer_num,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/AGREEMENT_NUM',
                                           g_namespace) AS agreement_num,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/AGREEMENT_TYPE',
                                           g_namespace) AS agreement_type,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/AMOUNT',
                                           g_namespace) AS amount,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/TERM_ID',
                                           g_namespace) AS term_id,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/EXPIRATION_DATE',
                                           g_namespace) AS expiration_date,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/DESCRIPTION',
                                           g_namespace) AS description,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/OWNED_BY_PERSON_ID',
                                           g_namespace) AS owned_by_person_id,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/DESC_FLEX_NAME',
                                           g_namespace) AS desc_flex_name,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE_CATEGORY',
                                           g_namespace) AS attribute_category,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE1',
                                           g_namespace) AS attribute1,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE2',
                                           g_namespace) AS attribute2,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE3',
                                           g_namespace) AS attribute3,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE4',
                                           g_namespace) AS attribute4,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE5',
                                           g_namespace) AS attribute5,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE6',
                                           g_namespace) AS attribute6,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE7',
                                           g_namespace) AS attribute7,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE8',
                                           g_namespace) AS attribute8,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE9',
                                           g_namespace) AS attribute9,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE10',
                                           g_namespace) AS attribute10,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/OWNING_ORGANIZATION_ID',
                                           g_namespace) AS owning_organization_id,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/AGREEMENT_CURRENCY_CODE',
                                           g_namespace) AS agreement_currency_code,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/CUSTOMER_ORDER_NUMBER',
                                           g_namespace) AS customer_order_number,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/START_DATE',
                                           g_namespace) AS start_date,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE11',
                                           g_namespace) AS attribute11,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE12',
                                           g_namespace) AS attribute12,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE13',
                                           g_namespace) AS attribute13,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE14',
                                           g_namespace) AS attribute14,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE15',
                                           g_namespace) AS attribute15,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE16',
                                           g_namespace) AS attribute16,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE17',
                                           g_namespace) AS attribute17,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE18',
                                           g_namespace) AS attribute18,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE19',
                                           g_namespace) AS attribute19,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE20',
                                           g_namespace) AS attribute20,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE21',
                                           g_namespace) AS attribute21,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE22',
                                           g_namespace) AS attribute22,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE23',
                                           g_namespace) AS attribute23,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE24',
                                           g_namespace) AS attribute24,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/ATTRIBUTE25',
                                           g_namespace) AS attribute25,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/REVENUE_LIMIT_FLAG',
                                           g_namespace) AS revenue_limit_flag,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/TEMPLATE_FLAG',
                                           g_namespace) AS template_flag,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/INVOICE_LIMIT_FLAG',
                                           g_namespace) AS invoice_limit_flag,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/advance_required',
                                           g_namespace) AS advance_required,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/BILLING_SEQUENCE',
                                           g_namespace) AS billing_sequence,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/LINE_OF_ACCOUNT',
                                           g_namespace) AS line_of_account,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/PM_PRODUCT_CODE',
                                           g_namespace) AS pm_product_code,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/TERM_NAME',
                                           g_namespace) AS term_name,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/OWNED_BY_PERSON_NUMBER',
                                           g_namespace) AS owned_by_person_number,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/OWNING_ORGANIZATION_CODE',
                                           g_namespace) AS owning_organization_code,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/OWNING_ORGANIZATION_NAME',
                                           g_namespace) AS owning_organization_name,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/UPDATE_AGREEMENT_ALLOWED',
                                           g_namespace) AS update_agreement_allowed,
                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                           '/PA_AGREEMENTS_ALL/OWNER_EBS_USER_NAME',
                                           g_namespace) AS ebs_user_name, -- Added for Phase 3B
                              EXTRACT(tmp_l.COLUMN_VALUE,
                                      '//PA_AGREEMENTS_ALL/G_ATTACHMENT',
                                      g_namespace) AS G_ATTACHMENT,
                              EXTRACT(tmp_l.COLUMN_VALUE,
                                      '//G_PA_PROJECTS_ALL',
                                      g_namespace) AS g_pa_projects_all,
                              EXTRACT(tmp_l.COLUMN_VALUE,
                                      '//G_PA_PROJECT_FUNDINGS',
                                      g_namespace) AS g_pa_project_fundings
                         FROM TABLE(XMLSEQUENCE(p_xml.EXTRACT('/PA_AGREEMENTS_ALL',
                                                              g_namespace))) tmp_l) LOOP
      -- Starts Header Loop
      --
      BEGIN
        write_into_file('Loop Start for Agreement ' ||
                        c_agr_loop.agreement_num);
        gv_poo := 'Assignment of XML to Agr Record Type';
        --- Agreement Record Type
        dbms_output.put_line('Test c_agr_loop.expiration_date   : '||c_agr_loop.expiration_date);
        p_agr_rec.agr_main_rec.pm_agreement_reference := c_agr_loop.pm_agreement_reference;
        p_agr_rec.agr_main_rec.agreement_id           := c_agr_loop.agreement_id;
        p_agr_rec.agr_main_rec.customer_id            := c_agr_loop.customer_id;
        p_agr_rec.agr_main_rec.customer_num           := c_agr_loop.customer_num;
        p_agr_rec.agr_main_rec.agreement_num          := c_agr_loop.agreement_num;
        p_agr_rec.agr_main_rec.agreement_type         := c_agr_loop.agreement_type;
        p_agr_rec.agr_main_rec.amount                 := c_agr_loop.amount;
        p_agr_rec.agr_main_rec.term_id                := c_agr_loop.term_id;
        p_agr_rec.agr_main_rec.revenue_limit_flag     := c_agr_loop.revenue_limit_flag;
        --p_agr_rec.agr_main_rec.expiration_date            := c_agr_loop.expiration_date;
        date_convert(c_agr_loop.expiration_date,
                     p_agr_rec.agr_main_rec.expiration_date);
        p_agr_rec.agr_main_rec.description        := c_agr_loop.description;
        p_agr_rec.agr_main_rec.owned_by_person_id := c_agr_loop.owned_by_person_id;
        p_agr_rec.agr_main_rec.desc_flex_name     := c_agr_loop.desc_flex_name;
        p_agr_rec.agr_main_rec.attribute_category := c_agr_loop.attribute_category;
        --p_agr_rec.agr_main_rec.attribute1              := nvl(c_agr_loop.attribute1,'0'); --Added NVL for HPQC30126
        p_agr_rec.agr_main_rec.attribute1              := c_agr_loop.attribute1; --nvl(c_agr_loop.attribute1,'0'); --Added NVL for HPQC30126 Reverted as per RT8550526
        p_agr_rec.agr_main_rec.attribute2              := c_agr_loop.attribute2;
        p_agr_rec.agr_main_rec.attribute3              := c_agr_loop.attribute3;
        p_agr_rec.agr_main_rec.attribute4              := c_agr_loop.attribute4;
        p_agr_rec.agr_main_rec.attribute5              := c_agr_loop.attribute5;
        p_agr_rec.agr_main_rec.attribute6              := c_agr_loop.attribute6;
        p_agr_rec.agr_main_rec.attribute7              := c_agr_loop.attribute7;
        p_agr_rec.agr_main_rec.attribute8              := c_agr_loop.attribute8;
        p_agr_rec.agr_main_rec.attribute9              := c_agr_loop.attribute9;
        p_agr_rec.agr_main_rec.attribute10             := c_agr_loop.attribute10;
        p_agr_rec.agr_main_rec.template_flag           := c_agr_loop.template_flag;
        p_agr_rec.agr_main_rec.owning_organization_id  := c_agr_loop.owning_organization_id;
        p_agr_rec.agr_main_rec.agreement_currency_code := c_agr_loop.agreement_currency_code;
        p_agr_rec.agr_main_rec.invoice_limit_flag      := c_agr_loop.invoice_limit_flag;
        p_agr_rec.agr_main_rec.customer_order_number   := c_agr_loop.customer_order_number;
        p_agr_rec.agr_main_rec.advance_required        := c_agr_loop.advance_required;
        --p_agr_rec.agr_main_rec.start_date                := c_agr_loop.start_date;
        date_convert(c_agr_loop.start_date,
                     p_agr_rec.agr_main_rec.start_date);
        p_agr_rec.agr_main_rec.billing_sequence := c_agr_loop.billing_sequence;
        p_agr_rec.agr_main_rec.line_of_account  := c_agr_loop.line_of_account;
        p_agr_rec.agr_main_rec.attribute11      := c_agr_loop.attribute11;
        p_agr_rec.agr_main_rec.attribute12      := c_agr_loop.attribute12;
        p_agr_rec.agr_main_rec.attribute13      := c_agr_loop.attribute13;
        p_agr_rec.agr_main_rec.attribute14      := c_agr_loop.attribute14;
        p_agr_rec.agr_main_rec.attribute15      := c_agr_loop.attribute15;
        p_agr_rec.agr_main_rec.attribute16      := c_agr_loop.attribute16;
        p_agr_rec.agr_main_rec.attribute17      := c_agr_loop.attribute17;
        p_agr_rec.agr_main_rec.attribute18      := c_agr_loop.attribute18;
        p_agr_rec.agr_main_rec.attribute19      := c_agr_loop.attribute19;
        p_agr_rec.agr_main_rec.attribute20      := c_agr_loop.attribute20;
        p_agr_rec.agr_main_rec.attribute21      := c_agr_loop.attribute21;
        p_agr_rec.agr_main_rec.attribute22      := c_agr_loop.attribute22;
        p_agr_rec.agr_main_rec.attribute23      := c_agr_loop.attribute23;
        p_agr_rec.agr_main_rec.attribute24      := c_agr_loop.attribute24;
        p_agr_rec.agr_main_rec.attribute25      := c_agr_loop.attribute25;
        --- Extra Field in Agreement Record Type
        p_agr_rec.agr_extra_rec.pm_product_code          := c_agr_loop.pm_product_code;
        g_agr_pm_product_code                            := c_agr_loop.pm_product_code; --Added for HPQC22755
        g_prj_pm_product_code                            := c_agr_loop.pm_product_code; --Added for HPQC22755
        p_agr_rec.agr_extra_rec.term_name                := c_agr_loop.term_name;
        p_agr_rec.agr_extra_rec.owned_by_person_number   := c_agr_loop.owned_by_person_number;
        p_agr_rec.agr_extra_rec.owning_organization_code := c_agr_loop.owning_organization_code;
        p_agr_rec.agr_extra_rec.owning_organization_name := c_agr_loop.owning_organization_name;
        p_agr_rec.agr_extra_rec.update_agreement_allowed := c_agr_loop.update_agreement_allowed;
        p_agr_rec.agr_extra_rec.ebs_user_name            := c_agr_loop.ebs_user_name; -- Added for Phase 3B

        --Start of Added for CR24105 - Milestone Billing Notes
        FOR c_agr_att_loop IN (SELECT extractvalue(tmp_l.column_value,
                                                   '/ATTACHMENTS/noteType',
                                                   g_namespace) AS NOTETYPE,
                                      extractvalue(tmp_l.column_value,
                                                   '/ATTACHMENTS/notes',
                                                   g_namespace) AS NOTES,
                                      extractvalue(tmp_l.column_value,
                                                   '/ATTACHMENTS/ENTITYNAME',
                                                   g_namespace) AS ENTITYNAME,
                                      extractvalue(tmp_l.column_value,
                                                   '/ATTACHMENTS/SEQNUMBER',
                                                   g_namespace) AS SEQNUMBER,
                                      extractvalue(tmp_l.column_value,
                                                   '/ATTACHMENTS/TITLE',
                                                   g_namespace) AS TITLE,
                                      extractvalue(tmp_l.column_value,
                                                   '/ATTACHMENTS/DESCRIPTION') AS description,
                                      c_agr_loop.agreement_num agreement_num,
                                      NULL Project_num,
                                      NULL task_num,
                                      NULL project_funding_amount,
                                      extract(tmp_l.column_value,
                                              '//G_SRC_ATTRIBUTES',
                                              g_namespace) AS g_src_attributes
                                 FROM TABLE(xmlsequence(c_agr_loop.G_ATTACHMENT.extract('//ATTACHMENTS',
                                                                                        g_namespace))) tmp_l) LOOP
          l_att_count := g_proj_attach_tbl.count;
          g_proj_attach_tbl(l_att_count).noteType := c_agr_att_loop.noteType;
          g_proj_attach_tbl(l_att_count).notes := c_agr_att_loop.notes;
          g_proj_attach_tbl(l_att_count).entityName := c_agr_att_loop.entityName;
          g_proj_attach_tbl(l_att_count).seqNumber := c_agr_att_loop.seqNumber;
          g_proj_attach_tbl(l_att_count).title := c_agr_att_loop.title;
          g_proj_attach_tbl(l_att_count).description := c_agr_att_loop.description;
          g_proj_attach_tbl(l_att_count).agreement_num := c_agr_att_loop.agreement_num;
          g_proj_attach_tbl(l_att_count).project_num := NULL;
          g_proj_attach_tbl(l_att_count).task_num := NULL;
          g_proj_attach_tbl(l_att_count).project_funding_amount := NULL;
        END LOOP;
        --End of Added for CR24105 - Milestone Billing Notes

        gv_poo := 'After Assignment of XML to Agr Record Type';
        gv_poo := 'START Project LOOP';
        FOR c_prj_loop IN (SELECT ROWNUM l_prj_cnt,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PM_PROJECT_REFERENCE',
                                               g_namespace) AS pm_project_reference,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PA_PROJECT_ID',
                                               g_namespace) AS pa_project_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PA_PROJECT_NUMBER',
                                               g_namespace) AS pa_project_number,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_NAME',
                                               g_namespace) AS project_name,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LONG_NAME',
                                               g_namespace) AS long_name,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CREATED_FROM_PROJECT_ID',
                                               g_namespace) AS created_from_project_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CARRYING_OUT_ORGANIZATION_ID',
                                               g_namespace) AS carrying_out_organization_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PUBLIC_SECTOR_FLAG',
                                               g_namespace) AS public_sector_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_STATUS_CODE',
                                               g_namespace) AS project_status_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/DESCRIPTION',
                                               g_namespace) AS description,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/START_DATE',
                                               g_namespace) AS start_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/COMPLETION_DATE',
                                               g_namespace) AS completion_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/DISTRIBUTION_RULE',
                                               g_namespace) AS distribution_rule,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CUSTOMER_ID',
                                               g_namespace) AS customer_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_RELATIONSHIP_CODE',
                                               g_namespace) AS project_relationship_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ACTUAL_START_DATE',
                                               g_namespace) AS actual_start_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ACTUAL_FINISH_DATE',
                                               g_namespace) AS actual_finish_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/EARLY_START_DATE',
                                               g_namespace) AS early_start_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/EARLY_FINISH_DATE',
                                               g_namespace) AS early_finish_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LATE_START_DATE',
                                               g_namespace) AS late_start_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LATE_FINISH_DATE',
                                               g_namespace) AS late_finish_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SCHEDULED_START_DATE',
                                               g_namespace) AS scheduled_start_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SCHEDULED_FINISH_DATE',
                                               g_namespace) AS scheduled_finish_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE_CATEGORY',
                                               g_namespace) AS attribute_category,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE1',
                                               g_namespace) AS attribute1,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE2',
                                               g_namespace) AS attribute2,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE3',
                                               g_namespace) AS attribute3,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE4',
                                               g_namespace) AS attribute4,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE5',
                                               g_namespace) AS attribute5,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE6',
                                               g_namespace) AS attribute6,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE7',
                                               g_namespace) AS attribute7,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE8',
                                               g_namespace) AS attribute8,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE9',
                                               g_namespace) AS attribute9,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ATTRIBUTE10',
                                               g_namespace) AS attribute10,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/OUTPUT_TAX_CODE',
                                               g_namespace) AS output_tax_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/RETENTION_TAX_CODE',
                                               g_namespace) AS retention_tax_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_CURRENCY_CODE',
                                               g_namespace) AS project_currency_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ALLOW_CROSS_CHARGE_FLAG',
                                               g_namespace) AS allow_cross_charge_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_RATE_DATE',
                                               g_namespace) AS project_rate_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_RATE_TYPE',
                                               g_namespace) AS project_rate_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CC_PROCESS_LABOR_FLAG',
                                               g_namespace) AS cc_process_labor_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LABOR_TP_SCHEDULE_ID',
                                               g_namespace) AS labor_tp_schedule_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LABOR_TP_FIXED_DATE',
                                               g_namespace) AS labor_tp_fixed_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CC_PROCESS_NL_FLAG',
                                               g_namespace) AS cc_process_nl_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NL_TP_SCHEDULE_ID',
                                               g_namespace) AS nl_tp_schedule_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NL_TP_FIXED_DATE',
                                               g_namespace) AS nl_tp_fixed_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CC_TAX_TASK_ID',
                                               g_namespace) AS cc_tax_task_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ROLE_LIST_ID',
                                               g_namespace) AS role_list_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/WORK_TYPE_ID',
                                               g_namespace) AS work_type_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CALENDAR_ID',
                                               g_namespace) AS calendar_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LOCATION_ID',
                                               g_namespace) AS location_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROBABILITY_MEMBER_ID',
                                               g_namespace) AS probability_member_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_VALUE',
                                               g_namespace) AS project_value,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/EXPECTED_APPROVAL_DATE',
                                               g_namespace) AS expected_approval_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/COST_JOB_GROUP_ID',
                                               g_namespace) AS cost_job_group_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/BILL_JOB_GROUP_ID',
                                               g_namespace) AS bill_job_group_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/TEAM_TEMPLATE_ID',
                                               g_namespace) AS team_template_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/COUNTRY_CODE',
                                               g_namespace) AS country_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/REGION',
                                               g_namespace) AS region,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CITY',
                                               g_namespace) AS city,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/EMP_BILL_RATE_SCHEDULE_ID',
                                               g_namespace) AS emp_bill_rate_schedule_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/JOB_BILL_RATE_SCHEDULE_ID',
                                               g_namespace) AS job_bill_rate_schedule_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/INVPROC_CURRENCY_TYPE',
                                               g_namespace) AS invproc_currency_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/REVPROC_CURRENCY_CODE',
                                               g_namespace) AS revproc_currency_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_BIL_RATE_DATE_CODE',
                                               g_namespace) AS project_bil_rate_date_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_BIL_RATE_TYPE',
                                               g_namespace) AS project_bil_rate_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_BIL_RATE_DATE',
                                               g_namespace) AS project_bil_rate_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_BIL_EXCHANGE_RATE',
                                               g_namespace) AS project_bil_exchange_rate,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_CURRENCY_CODE',
                                               g_namespace) AS projfunc_currency_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_BIL_RATE_DATE_CODE',
                                               g_namespace) AS projfunc_bil_rate_date_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_BIL_RATE_TYPE',
                                               g_namespace) AS projfunc_bil_rate_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_BIL_RATE_DATE',
                                               g_namespace) AS projfunc_bil_rate_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_BIL_EXCHANGE_RATE',
                                               g_namespace) AS projfunc_bil_exchange_rate,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/FUNDING_RATE_DATE_CODE',
                                               g_namespace) AS funding_rate_date_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/FUNDING_RATE_TYPE',
                                               g_namespace) AS funding_rate_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/FUNDING_RATE_DATE',
                                               g_namespace) AS funding_rate_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/FUNDING_EXCHANGE_RATE',
                                               g_namespace) AS funding_exchange_rate,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/BASELINE_FUNDING_FLAG',
                                               g_namespace) AS baseline_funding_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/MULTI_CURRENCY_BILLING_FLAG',
                                               g_namespace) AS multi_currency_billing_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/COMPETENCE_MATCH_WT',
                                               g_namespace) AS competence_match_wt,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/AVAILABILITY_MATCH_WT',
                                               g_namespace) AS availability_match_wt,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/JOB_LEVEL_MATCH_WT',
                                               g_namespace) AS job_level_match_wt,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ENABLE_AUTOMATED_SEARCH',
                                               g_namespace) AS enable_automated_search,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SEARCH_MIN_AVAILABILITY',
                                               g_namespace) AS search_min_availability,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SEARCH_ORG_HIER_ID',
                                               g_namespace) AS search_org_hier_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SEARCH_STARTING_ORG_ID',
                                               g_namespace) AS search_starting_org_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SEARCH_COUNTRY_ID',
                                               g_namespace) AS search_country_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/MIN_CAND_SCORE_REQD_FOR_NOM',
                                               g_namespace) AS min_cand_score_reqd_for_nom,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/MAX_NUM_OF_SYS_NOM_CAND',
                                               g_namespace) AS max_num_of_sys_nom_cand,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NON_LAB_STD_BILL_RT_SCH_ID',
                                               g_namespace) AS non_lab_std_bill_rt_sch_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SEARCH_COUNTRY_CODE',
                                               g_namespace) AS search_country_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/INV_BY_BILL_TRANS_CURR_FLAG',
                                               g_namespace) AS inv_by_bill_trans_curr_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_COST_RATE_TYPE',
                                               g_namespace) AS projfunc_cost_rate_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_COST_RATE_DATE',
                                               g_namespace) AS projfunc_cost_rate_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ASSIGN_PRECEDES_TASK',
                                               g_namespace) AS assign_precedes_task,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SPLIT_COST_FROM_WORKPLAN_FLAG',
                                               g_namespace) AS split_cost_from_workplan_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SPLIT_COST_FROM_BILL_FLAG',
                                               g_namespace) AS split_cost_from_bill_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ADV_ACTION_SET_ID',
                                               g_namespace) AS adv_action_set_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/START_ADV_ACTION_SET_FLAG',
                                               g_namespace) AS start_adv_action_set_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PRIORITY_CODE',
                                               g_namespace) AS priority_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/RETN_BILLING_INV_FORMAT_ID',
                                               g_namespace) AS retn_billing_inv_format_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/RETN_ACCOUNTING_FLAG',
                                               g_namespace) AS retn_accounting_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/OPP_VALUE_CURRENCY_CODE',
                                               g_namespace) AS opp_value_currency_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/REVALUATE_FUNDING_FLAG',
                                               g_namespace) AS revaluate_funding_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/INCLUDE_GAINS_LOSSES_FLAG',
                                               g_namespace) AS include_gains_losses_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SECURITY_LEVEL',
                                               g_namespace) AS security_level,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LABOR_DISC_REASON_CODE',
                                               g_namespace) AS labor_disc_reason_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NON_LABOR_DISC_REASON_CODE',
                                               g_namespace) AS non_labor_disc_reason_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LABOR_SCHEDULE_FIXED_DATE',
                                               g_namespace) AS labor_schedule_fixed_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LABOR_SCHEDULE_DISCOUNT',
                                               g_namespace) AS labor_schedule_discount,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NON_LABOR_BILL_RATE_ORG_ID',
                                               g_namespace) AS non_labor_bill_rate_org_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NON_LABOR_SCHEDULE_FIXED_DATE',
                                               g_namespace) AS non_labor_schedule_fixed_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NON_LABOR_SCHEDULE_DISCOUNT',
                                               g_namespace) AS non_labor_schedule_discount,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/REV_IND_RATE_SCH_ID',
                                               g_namespace) AS rev_ind_rate_sch_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/INV_IND_RATE_SCH_ID',
                                               g_namespace) AS inv_ind_rate_sch_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/REV_IND_SCH_FIXED_DATE',
                                               g_namespace) AS rev_ind_sch_fixed_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/INV_IND_SCH_FIXED_DATE',
                                               g_namespace) AS inv_ind_sch_fixed_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/LABOR_SCH_TYPE',
                                               g_namespace) AS labor_sch_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/NON_LABOR_SCH_TYPE',
                                               g_namespace) AS non_labor_sch_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ASSET_ALLOCATION_METHOD',
                                               g_namespace) AS asset_allocation_method,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CAPITAL_EVENT_PROCESSING',
                                               g_namespace) AS capital_event_processing,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CINT_RATE_SCH_ID',
                                               g_namespace) AS cint_rate_sch_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CINT_ELIGIBLE_FLAG',
                                               g_namespace) AS cint_eligible_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CINT_STOP_DATE',
                                               g_namespace) AS cint_stop_date,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/BILL_TO_CUSTOMER_ID',
                                               g_namespace) AS bill_to_customer_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SHIP_TO_CUSTOMER_ID',
                                               g_namespace) AS ship_to_customer_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROCESS_MODE',
                                               g_namespace) AS process_mode,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SYS_PROGRAM_FLAG',
                                               g_namespace) AS sys_program_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ALLOW_MULTI_PROGRAM_ROLLUP',
                                               g_namespace) AS allow_multi_program_rollup,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ENABLE_TOP_TASK_CUSTOMER_FLAG',
                                               g_namespace) AS enable_top_task_customer_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/ENABLE_TOP_TASK_INV_MTH_FLAG',
                                               g_namespace) AS enable_top_task_inv_mth_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJFUNC_ATTR_FOR_AR_FLAG',
                                               g_namespace) AS projfunc_attr_for_ar_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/BILL_TO_ADDRESS_ID',
                                               g_namespace) AS bill_to_address_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/SHIP_TO_ADDRESS_ID',
                                               g_namespace) AS ship_to_address_id,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/DATE_EFF_FUNDS_FLAG',
                                               g_namespace) AS date_eff_funds_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/AR_REC_NOTIFY_FLAG',
                                               g_namespace) AS ar_rec_notify_flag,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/AUTO_RELEASE_PWP_INV',
                                               g_namespace) AS auto_release_pwp_inv,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/STATUS_CHANGE_COMMENT',
                                               g_namespace) AS status_change_comment,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CARRYING_OUT_ORGANIZATION_CODE',
                                               g_namespace) AS carrying_out_organization_code,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/CARRYING_OUT_ORGANIZATION_NAME',
                                               g_namespace) AS carrying_out_organization_name,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_TYPE',
                                               g_namespace) AS project_type,
                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                               '/PA_PROJECTS_ALL/PROJECT_TYPE_ORACLE',
                                               g_namespace) AS project_type_oracle,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//G_SRC_ATTRIBUTES',
                                          g_namespace) AS G_SRC_ATTRIBUTES,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//G_PA_PROJECT_CUSTOMERS',
                                          g_namespace) AS g_pa_project_customers,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//G_TASKS',
                                          g_namespace) AS g_tasks,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//G_PA_PROJECT_PLAYERS',
                                          g_namespace) AS g_pa_project_players,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//G_PA_PROJECT_CLASSES',
                                          g_namespace) AS g_pa_project_classes,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//G_PA_CREDIT_RECEIVERS',
                                          g_namespace) AS g_pa_credit_receivers,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//PA_PROJECTS_ALL/G_ATTACHMENT',
                                          g_namespace) AS G_ATTACHMENT,
                                  EXTRACT(tmp_l.COLUMN_VALUE,
                                          '//G_PA_PROJECT_BUDGETS',
                                          g_namespace) AS g_pa_project_budgets -- Added for Phase 3B
                             FROM TABLE(XMLSEQUENCE(c_agr_loop.g_pa_projects_all.EXTRACT('//PA_PROJECTS_ALL',
                                                                                         g_namespace))) tmp_l) LOOP
          -- p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec := NULL;
          gv_poo := 'Assignment of XML to Project Record Type';
          --- Project Record Type
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.pm_project_reference := c_prj_loop.pm_project_reference;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.pa_project_id := c_prj_loop.pa_project_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.pa_project_number := c_prj_loop.pa_project_number;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_name := c_prj_loop.project_name;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.long_name := c_prj_loop.long_name;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.created_from_project_id := c_prj_loop.created_from_project_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.carrying_out_organization_id := c_prj_loop.carrying_out_organization_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.public_sector_flag := c_prj_loop.public_sector_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_status_code := c_prj_loop.project_status_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.description := c_prj_loop.description;
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.start_date                := c_prj_loop.start_date;
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.completion_date           := c_prj_loop.completion_date;
          date_convert(c_prj_loop.start_date,
                       p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt)
                       .prj_main_rec.start_date);
          date_convert(c_prj_loop.completion_date,
                       p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt)
                       .prj_main_rec.completion_date);
             write_into_file('Completion Date : ' || p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.completion_date);

          /*p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.distribution_rule         := c_prj_loop.distribution_rule;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.customer_id               := c_prj_loop.customer_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_relationship_code := c_prj_loop.project_relationship_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.actual_start_date         := c_prj_loop.actual_start_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.actual_finish_date        := c_prj_loop.actual_finish_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.early_start_date          := c_prj_loop.early_start_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.early_finish_date         := c_prj_loop.early_finish_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.late_start_date           := c_prj_loop.late_start_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.late_finish_date          := c_prj_loop.late_finish_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.scheduled_start_date      := c_prj_loop.scheduled_start_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.scheduled_finish_date     := c_prj_loop.scheduled_finish_date;
          */
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute_category := c_prj_loop.attribute_category;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute1 := c_prj_loop.attribute1;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute2 := c_prj_loop.attribute2;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute3 := c_prj_loop.attribute3;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute4 := c_prj_loop.attribute4;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute5 := c_prj_loop.attribute5;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute6 := c_prj_loop.attribute6;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute7 := c_prj_loop.attribute7;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute8 := c_prj_loop.attribute8;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute9 := c_prj_loop.attribute9;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.attribute10 := c_prj_loop.attribute10;
          -- CR25098 - Included Output Tax Code - START
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.output_tax_code := c_prj_loop.output_tax_code;
          write_into_file('Outout Tax Code: '|| p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.output_tax_code);
          -- CR25098 - Included Output Tax Code - START
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.allow_cross_charge_flag   := c_prj_loop.allow_cross_charge_flag; --Added for HPQC30226
          --Commented above line as patch 27706436 was applied to handle this error
          /*
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.output_tax_code           := c_prj_loop.output_tax_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.retention_tax_code        := c_prj_loop.retention_tax_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_currency_code     := c_prj_loop.project_currency_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.allow_cross_charge_flag   := c_prj_loop.allow_cross_charge_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_rate_date         := c_prj_loop.project_rate_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_rate_type         := c_prj_loop.project_rate_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.cc_process_labor_flag     := c_prj_loop.cc_process_labor_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.labor_tp_schedule_id      := c_prj_loop.labor_tp_schedule_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.labor_tp_fixed_date       := c_prj_loop.labor_tp_fixed_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.cc_process_nl_flag        := c_prj_loop.cc_process_nl_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.nl_tp_schedule_id         := c_prj_loop.nl_tp_schedule_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.nl_tp_fixed_date          := c_prj_loop.nl_tp_fixed_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.cc_tax_task_id            := c_prj_loop.cc_tax_task_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.role_list_id              := c_prj_loop.role_list_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.work_type_id              := c_prj_loop.work_type_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.calendar_id               := c_prj_loop.calendar_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.location_id               := c_prj_loop.location_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.probability_member_id     := c_prj_loop.probability_member_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_value             := c_prj_loop.project_value;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.expected_approval_date    := c_prj_loop.expected_approval_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.cost_job_group_id         := c_prj_loop.cost_job_group_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.bill_job_group_id         := c_prj_loop.bill_job_group_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.team_template_id          := c_prj_loop.team_template_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.country_code              := c_prj_loop.country_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.region                    := c_prj_loop.region;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.city                      := c_prj_loop.city;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.emp_bill_rate_schedule_id      := c_prj_loop.emp_bill_rate_schedule_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.job_bill_rate_schedule_id      := c_prj_loop.job_bill_rate_schedule_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.invproc_currency_type      := c_prj_loop.invproc_currency_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.revproc_currency_code      := c_prj_loop.revproc_currency_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_rate_date_code      := c_prj_loop.project_bil_rate_date_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_rate_type      := c_prj_loop.project_bil_rate_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_rate_date      := c_prj_loop.project_bil_rate_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_exchange_rate      := c_prj_loop.project_bil_exchange_rate;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_currency_code      := c_prj_loop.projfunc_currency_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_rate_date_code      := c_prj_loop.projfunc_bil_rate_date_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_rate_type      := c_prj_loop.projfunc_bil_rate_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_rate_date      := c_prj_loop.projfunc_bil_rate_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_exchange_rate      := c_prj_loop.projfunc_bil_exchange_rate;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_rate_date_code      := c_prj_loop.funding_rate_date_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_rate_type      := c_prj_loop.funding_rate_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_rate_date      := c_prj_loop.funding_rate_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_exchange_rate      := c_prj_loop.funding_exchange_rate;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.baseline_funding_flag      := c_prj_loop.baseline_funding_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.multi_currency_billing_flag      := c_prj_loop.multi_currency_billing_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.competence_match_wt      := c_prj_loop.competence_match_wt;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.availability_match_wt      := c_prj_loop.availability_match_wt;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.job_level_match_wt      := c_prj_loop.job_level_match_wt;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.enable_automated_search      := c_prj_loop.enable_automated_search;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.search_min_availability      := c_prj_loop.search_min_availability;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.search_org_hier_id      := c_prj_loop.search_org_hier_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.search_starting_org_id      := c_prj_loop.search_starting_org_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.search_country_id      := c_prj_loop.search_country_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.min_cand_score_reqd_for_nom      := c_prj_loop.min_cand_score_reqd_for_nom;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.max_num_of_sys_nom_cand      := c_prj_loop.max_num_of_sys_nom_cand;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.non_lab_std_bill_rt_sch_id      := c_prj_loop.non_lab_std_bill_rt_sch_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.search_country_code      := c_prj_loop.search_country_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.inv_by_bill_trans_curr_flag      := c_prj_loop.inv_by_bill_trans_curr_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_cost_rate_type      := c_prj_loop.projfunc_cost_rate_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_cost_rate_date      := c_prj_loop.projfunc_cost_rate_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.assign_precedes_task      := c_prj_loop.assign_precedes_task;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.split_cost_from_workplan_flag      := c_prj_loop.split_cost_from_workplan_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.split_cost_from_bill_flag      := c_prj_loop.split_cost_from_bill_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.adv_action_set_id      := c_prj_loop.adv_action_set_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.start_adv_action_set_flag      := c_prj_loop.start_adv_action_set_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.priority_code      := c_prj_loop.priority_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.retn_billing_inv_format_id      := c_prj_loop.retn_billing_inv_format_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.retn_accounting_flag      := c_prj_loop.retn_accounting_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.opp_value_currency_code      := c_prj_loop.opp_value_currency_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.revaluate_funding_flag      := c_prj_loop.revaluate_funding_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.include_gains_losses_flag      := c_prj_loop.include_gains_losses_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.security_level      := c_prj_loop.security_level;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.labor_disc_reason_code      := c_prj_loop.labor_disc_reason_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.non_labor_disc_reason_code      := c_prj_loop.non_labor_disc_reason_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.labor_schedule_fixed_date      := c_prj_loop.labor_schedule_fixed_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.labor_schedule_discount      := c_prj_loop.labor_schedule_discount;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.non_labor_bill_rate_org_id      := c_prj_loop.non_labor_bill_rate_org_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.non_labor_schedule_fixed_date      := c_prj_loop.non_labor_schedule_fixed_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.non_labor_schedule_discount      := c_prj_loop.non_labor_schedule_discount;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.rev_ind_rate_sch_id      := c_prj_loop.rev_ind_rate_sch_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.inv_ind_rate_sch_id      := c_prj_loop.inv_ind_rate_sch_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.rev_ind_sch_fixed_date      := c_prj_loop.rev_ind_sch_fixed_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.inv_ind_sch_fixed_date      := c_prj_loop.inv_ind_sch_fixed_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.labor_sch_type      := c_prj_loop.labor_sch_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.non_labor_sch_type      := c_prj_loop.non_labor_sch_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.asset_allocation_method      := c_prj_loop.asset_allocation_method;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.capital_event_processing      := c_prj_loop.capital_event_processing;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.cint_rate_sch_id      := c_prj_loop.cint_rate_sch_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.cint_eligible_flag      := c_prj_loop.cint_eligible_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.cint_stop_date      := c_prj_loop.cint_stop_date;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.bill_to_customer_id       := c_prj_loop.bill_to_customer_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.ship_to_customer_id       := c_prj_loop.ship_to_customer_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.process_mode      := c_prj_loop.process_mode;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.sys_program_flag      := c_prj_loop.sys_program_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.allow_multi_program_rollup      := c_prj_loop.allow_multi_program_rollup;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.enable_top_task_customer_flag      := c_prj_loop.enable_top_task_customer_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.enable_top_task_inv_mth_flag      := c_prj_loop.enable_top_task_inv_mth_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_attr_for_ar_flag      := c_prj_loop.projfunc_attr_for_ar_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.bill_to_address_id        := c_prj_loop.bill_to_address_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.ship_to_address_id        := c_prj_loop.ship_to_address_id;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.date_eff_funds_flag      := c_prj_loop.date_eff_funds_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.ar_rec_notify_flag      := c_prj_loop.ar_rec_notify_flag;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.auto_release_pwp_inv      := c_prj_loop.auto_release_pwp_inv;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.status_change_comment      := c_prj_loop.status_change_comment;
          */
          --- Extra Field in Project Record Type
		  lv_carrying_out_org_code := c_prj_loop.carrying_out_organization_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_extra_rec.carrying_out_organization_code := c_prj_loop.carrying_out_organization_code;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_extra_rec.carrying_out_organization_name := c_prj_loop.carrying_out_organization_name;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_extra_rec.project_type := c_prj_loop.project_type;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_extra_rec.project_type_oracle := c_prj_loop.project_type_oracle;
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_extra_rec.partner_project_status_code := c_prj_loop.project_status_code;
          /*
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_rate_date           := trunc(sysdate);
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_rate_type           := 'Corporate';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.invproc_currency_type       := 'FUNDING_CURRENCY';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.revproc_currency_code       := 'USD';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_rate_date_code  := 'PA_INVOICE_DATE';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_rate_type       := 'Corporate';
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_rate_date       := trunc(sysdate);
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.project_bil_exchange_rate   := '0.76103500761035';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_currency_code      := 'USD';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_rate_date_code := 'PA_INVOICE_DATE';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_rate_type      := 'Corporate';
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_rate_date      := trunc(sysdate);
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_bil_exchange_rate  := '0.76103500761035';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_rate_date_code      := 'PA_INVOICE_DATE';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_rate_type           := 'Corporate';
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_rate_date      := trunc(sysdate);
          --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.funding_exchange_rate      := '0.76103500761035';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_main_rec.projfunc_cost_rate_type      := 'Corporate';
          */

          gv_revaluate_funding_flag := c_prj_loop.revaluate_funding_flag;     --Added as per CR25148
          gv_include_gains_losses_flag := c_prj_loop.include_gains_losses_flag; --Added as per CR25148
          write_into_file('revaluate_funding_flag passed in the payload: '|| c_prj_loop.revaluate_funding_flag );
          write_into_file('include_gains_losses_flag passed in the payload: '|| c_prj_loop.include_gains_losses_flag );


          gv_poo := 'After Assignment of XML to Agr Record Type';
          gv_poo := 'Start Project SRC Attributes Loop';
          --Changed SRC_ATTRIBUTES to SRC_ATTRIBUTE to keep it in sync with XSD as part of RT7137886
          FOR c_src_attributes_loop IN (SELECT ROWNUM l_prj_cust_cnt,
                                               EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                            '/SRC_ATTRIBUTE/NAME',
                                                            g_namespace) AS attribute_name,
                                               EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                            '/SRC_ATTRIBUTE/VALUE',
                                                            g_namespace) AS attribute_value
                                          FROM TABLE(XMLSEQUENCE(c_prj_loop.G_SRC_ATTRIBUTES.EXTRACT('//SRC_ATTRIBUTE',
                                                                                                     g_namespace))) tmp_l
										   WHERE EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                            '/SRC_ATTRIBUTE/VALUE',
                                                            g_namespace) is not null --Added Where condition for CR25364
										) LOOP
            IF c_src_attributes_loop.attribute_name = 'VERSION_NUMBER' AND
               c_src_attributes_loop.attribute_value IS NOT NULL THEN
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).prj_extra_rec.proj_rev_version_name := c_src_attributes_loop.attribute_value;
            END IF;
          END LOOP;
          --
          --Start of Added for CR24105 - Milestone Billing Notes
          FOR c_prj_att_loop IN (SELECT extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/noteType',
                                                     g_namespace) AS NOTETYPE,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/notes',
                                                     g_namespace) AS NOTES,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/ENTITYNAME',
                                                     g_namespace) AS ENTITYNAME,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/SEQNUMBER',
                                                     g_namespace) AS SEQNUMBER,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/TITLE',
                                                     g_namespace) AS TITLE,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/DESCRIPTION') AS description,
                                        NULL agreement_num,
                                        c_prj_loop.pa_project_number Project_num,
                                        NULL task_num,
                                        extract(tmp_l.column_value,
                                                '//G_SRC_ATTRIBUTES',
                                                g_namespace) AS g_src_attributes
                                   FROM TABLE(xmlsequence(c_prj_loop.G_ATTACHMENT.extract('//ATTACHMENTS',
                                                                                          g_namespace))) tmp_l) LOOP
            l_att_count := g_proj_attach_tbl.count;
            g_proj_attach_tbl(l_att_count).noteType := c_prj_att_loop.noteType;
            g_proj_attach_tbl(l_att_count).notes := c_prj_att_loop.notes;
            g_proj_attach_tbl(l_att_count).entityName := c_prj_att_loop.entityName;
            g_proj_attach_tbl(l_att_count).seqNumber := c_prj_att_loop.seqNumber;
            g_proj_attach_tbl(l_att_count).title := c_prj_att_loop.title;
            g_proj_attach_tbl(l_att_count).description := c_prj_att_loop.description;
            g_proj_attach_tbl(l_att_count).agreement_num := c_prj_att_loop.agreement_num;
            g_proj_attach_tbl(l_att_count).project_num := c_prj_att_loop.project_num;
            g_proj_attach_tbl(l_att_count).task_num := NULL;
            g_proj_attach_tbl(l_att_count).project_funding_amount := NULL;
          END LOOP;
          --End of Added for CR24105 - Milestone Billing Notes

          gv_poo := 'After Assignment of XML to Agr Record Type';
          gv_poo := 'Start Project Customer Loop';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec := NULL;
          -- Project Customer Loop
          FOR c_prj_cust_loop IN (SELECT ROWNUM l_prj_cust_cnt,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/CUSTOMER_ID',
                                                      g_namespace) AS customer_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/PROJECT_RELATIONSHIP_CODE',
                                                      g_namespace) AS project_relationship_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BILL_TO_CUSTOMER_ID',
                                                      g_namespace) AS bill_to_customer_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_CUSTOMER_ID',
                                                      g_namespace) AS ship_to_customer_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BILL_TO_ADDRESS_ID',
                                                      g_namespace) AS bill_to_address_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_ADDRESS_ID',
                                                      g_namespace) AS ship_to_address_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/CUSTOMER_BILL_SPLIT',
                                                      g_namespace) AS customer_bill_split,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/INV_RATE_DATE',
                                                      g_namespace) AS inv_rate_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/INV_RATE_TYPE',
                                                      g_namespace) AS inv_rate_type,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/INV_CURRENCY_CODE',
                                                      g_namespace) AS inv_currency_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/INV_EXCHANGE_RATE',
                                                      g_namespace) AS inv_exchange_rate,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/CUSTOMER_NUMBER',
                                                      g_namespace) AS customer_number,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BILL_TO_CUSTOMER_NUMBER',
                                                      g_namespace) AS bill_to_customer_number,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_CUSTOMER_NUMBER',
                                                      g_namespace) AS ship_to_customer_number,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_ADDRESS_1',
                                                      g_namespace) AS ship_to_address_1,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_ADDRESS_2',
                                                      g_namespace) AS ship_to_address_2,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_ADDRESS_3',
                                                      g_namespace) AS ship_to_address_3,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_ADDRESS_4',
                                                      g_namespace) AS ship_to_address_4,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/CITY',
                                                      g_namespace) AS city,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/STATE',
                                                      g_namespace) AS state,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/COUNTY',
                                                      g_namespace) AS county,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/PROVINCE',
                                                      g_namespace) AS province,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/POSTAL_CODE',
                                                      g_namespace) AS postal_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/COUNTRY',
                                                      g_namespace) AS country,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_PARTY_ID',
                                                      g_namespace) AS ship_to_party_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_PARTY_SITE_ID',
                                                      g_namespace) AS ship_to_party_site_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_PARTY_SITE_NUMBER',
                                                      g_namespace) AS ship_to_party_site_number,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/SHIP_TO_PARTY_SITE_USE_ID',
                                                      g_namespace) AS ship_to_party_site_use_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BUILDING_ID',
                                                      g_namespace) AS building_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BILL_TO_PARTY_ID',
                                                      g_namespace) AS bill_to_party_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BILL_TO_PARTY_SITE_ID',
                                                      g_namespace) AS bill_to_party_site_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BILL_TO_PARTY_SITE_USE_ID',
                                                      g_namespace) AS bill_to_party_site_use_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/PA_PROJECT_CUSTOMERS/BILL_TO_PARTY_SITE_NUMBER',
                                                      g_namespace) AS bill_to_party_site_number,
                                         EXTRACT(tmp_l.COLUMN_VALUE,
                                                 '//PA_PROJECT_CUSTOMERS/G_SRC_ATTRIBUTES',
                                                 g_namespace) AS G_SRC_ATTRIBUTES -- Added by Joydeb as per RT7198253
                                    FROM TABLE(XMLSEQUENCE(c_prj_loop.g_pa_project_customers.EXTRACT('//PA_PROJECT_CUSTOMERS',
                                                                                                     g_namespace))) tmp_l) LOOP
            gv_poo := 'Assignment of XML to Project Customer Record Type';
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).customer_id := c_prj_cust_loop.customer_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).project_relationship_code := c_prj_cust_loop.project_relationship_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).bill_to_customer_id := c_prj_cust_loop.bill_to_customer_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).ship_to_customer_id := c_prj_cust_loop.ship_to_customer_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).bill_to_address_id := c_prj_cust_loop.bill_to_address_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).ship_to_address_id := c_prj_cust_loop.ship_to_address_id;
            ---
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).customer_bill_split := c_prj_cust_loop.customer_bill_split;
            --
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).inv_rate_date      :=  c_prj_cust_loop.inv_rate_date;
            date_convert(c_prj_cust_loop.inv_rate_date,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt)
                         .inv_rate_date);
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).inv_rate_type := c_prj_cust_loop.inv_rate_type;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).inv_currency_code := c_prj_cust_loop.inv_currency_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_tbl(c_prj_cust_loop.l_prj_cust_cnt).inv_exchange_rate := c_prj_cust_loop.inv_exchange_rate;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.customer_number := c_prj_cust_loop.customer_number;
            IF c_prj_cust_loop.customer_number IS NULL THEN
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.customer_number := p_agr_rec.agr_main_rec.customer_num;
            END IF;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.bill_to_customer_number := c_prj_cust_loop.bill_to_customer_number;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_customer_number := c_prj_cust_loop.ship_to_customer_number;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_address_1 := c_prj_cust_loop.ship_to_address_1;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_address_2 := c_prj_cust_loop.ship_to_address_2;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_address_3 := c_prj_cust_loop.ship_to_address_3;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_address_4 := c_prj_cust_loop.ship_to_address_4;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.city := c_prj_cust_loop.city;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.state := c_prj_cust_loop.state;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.province := c_prj_cust_loop.province;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.postal_code := c_prj_cust_loop.postal_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.country := c_prj_cust_loop.country;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.county := c_prj_cust_loop.county;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_party_id := c_prj_cust_loop.ship_to_party_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_party_site_id := c_prj_cust_loop.ship_to_party_site_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id := c_prj_cust_loop.ship_to_party_site_use_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.building_id := c_prj_cust_loop.building_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.bill_to_party_id := c_prj_cust_loop.bill_to_party_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id := c_prj_cust_loop.bill_to_party_site_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_use_id := c_prj_cust_loop.bill_to_party_site_use_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number := c_prj_cust_loop.bill_to_party_site_number;
            --Logic added by Joydeb as per RT7198253 to get the SRC attributes for SIEBEL_SHIP_TO_SITE_ID
            FOR c_src_attributes_loop IN (SELECT ROWNUM l_prj_cust_src_cnt,
                                                 EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                              '/SRC_ATTRIBUTE/NAME',
                                                              g_namespace) AS attribute_name,
                                                 EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                              '/SRC_ATTRIBUTE/VALUE',
                                                              g_namespace) AS attribute_value
                                            FROM TABLE(XMLSEQUENCE(c_prj_cust_loop.G_SRC_ATTRIBUTES.EXTRACT('//SRC_ATTRIBUTE',
                                                                                                            g_namespace))) tmp_l
																											WHERE EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                            '/SRC_ATTRIBUTE/VALUE',
                                                            g_namespace) IS NOT NULL --Added Where condition for CR25364
										  ) LOOP
              IF c_src_attributes_loop.attribute_name =
                 'SIEBEL_SHIP_TO_SITE_ID' AND
                 c_src_attributes_loop.attribute_value IS NOT NULL AND p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt)
                .g_prj_cust_rec.prj_cust_extra.partner_site_id is null THEN
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.partner_site_id := c_src_attributes_loop.attribute_value;
                write_into_file('p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_cust_rec.prj_cust_extra.partner_site_id ' || p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt)
                                .g_prj_cust_rec.prj_cust_extra.partner_site_id);
              END IF;
            END LOOP; -- End of addition by Joydeb as per RT7198253
          END LOOP; -- Project Customer Loop END
          gv_poo := 'After Assignment of XML to Project Customer Record Type';
          gv_poo := 'Start Project Task Loop';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec := NULL;
          --Project Tasks
          g_task_exp_limit_flag := 'N'; -- Added for CR9339
          FOR c_prj_task_loop IN (SELECT ROWNUM l_task_cnt,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PM_TASK_REFERENCE',
                                                      g_namespace) AS pm_task_reference,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PA_TASK_ID',
                                                      g_namespace) AS pa_task_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASK_NAME',
                                                      g_namespace) AS task_name,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LONG_TASK_NAME',
                                                      g_namespace) AS long_task_name,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PA_TASK_NUMBER',
                                                      g_namespace) AS pa_task_number,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASK_DESCRIPTION',
                                                      g_namespace) AS task_description,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASK_START_DATE',
                                                      g_namespace) AS task_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASK_COMPLETION_DATE',
                                                      g_namespace) AS task_completion_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PM_PARENT_TASK_REFERENCE',
                                                      g_namespace) AS pm_parent_task_reference,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PA_PARENT_TASK_ID',
                                                      g_namespace) AS pa_parent_task_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ADDRESS_ID',
                                                      g_namespace) AS address_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CARRYING_OUT_ORGANIZATION_ID',
                                                      g_namespace) AS carrying_out_organization_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SERVICE_TYPE_CODE',
                                                      g_namespace) AS service_type_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASK_MANAGER_PERSON_ID',
                                                      g_namespace) AS task_manager_person_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/BILLABLE_FLAG',
                                                      g_namespace) AS billable_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CHARGEABLE_FLAG',
                                                      g_namespace) AS chargeable_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/READY_TO_BILL_FLAG',
                                                      g_namespace) AS ready_to_bill_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/READY_TO_DISTRIBUTE_FLAG',
                                                      g_namespace) AS ready_to_distribute_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LIMIT_TO_TXN_CONTROLS_FLAG',
                                                      g_namespace) AS limit_to_txn_controls_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_BILL_RATE_ORG_ID',
                                                      g_namespace) AS labor_bill_rate_org_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_STD_BILL_RATE_SCHDL',
                                                      g_namespace) AS labor_std_bill_rate_schdl,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_SCHEDULE_FIXED_DATE',
                                                      g_namespace) AS labor_schedule_fixed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_SCHEDULE_DISCOUNT',
                                                      g_namespace) AS labor_schedule_discount,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NON_LABOR_BILL_RATE_ORG_ID',
                                                      g_namespace) AS non_labor_bill_rate_org_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NON_LABOR_STD_BILL_RATE_SCHDL',
                                                      g_namespace) AS non_labor_std_bill_rate_schdl,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NON_LABOR_SCHEDULE_FIXED_DATE',
                                                      g_namespace) AS non_labor_schedule_fixed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NON_LABOR_SCHEDULE_DISCOUNT',
                                                      g_namespace) AS non_labor_schedule_discount,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_COST_MULTIPLIER_NAME',
                                                      g_namespace) AS labor_cost_multiplier_name,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/COST_IND_RATE_SCH_ID',
                                                      g_namespace) AS cost_ind_rate_sch_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/REV_IND_RATE_SCH_ID',
                                                      g_namespace) AS rev_ind_rate_sch_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/INV_IND_RATE_SCH_ID',
                                                      g_namespace) AS inv_ind_rate_sch_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/COST_IND_SCH_FIXED_DATE',
                                                      g_namespace) AS cost_ind_sch_fixed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/REV_IND_SCH_FIXED_DATE',
                                                      g_namespace) AS rev_ind_sch_fixed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/INV_IND_SCH_FIXED_DATE',
                                                      g_namespace) AS inv_ind_sch_fixed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_SCH_TYPE',
                                                      g_namespace) AS labor_sch_type,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NON_LABOR_SCH_TYPE',
                                                      g_namespace) AS non_labor_sch_type,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ACTUAL_START_DATE',
                                                      g_namespace) AS actual_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ACTUAL_FINISH_DATE',
                                                      g_namespace) AS actual_finish_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/EARLY_START_DATE',
                                                      g_namespace) AS early_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/EARLY_FINISH_DATE',
                                                      g_namespace) AS early_finish_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LATE_START_DATE',
                                                      g_namespace) AS late_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LATE_FINISH_DATE',
                                                      g_namespace) AS late_finish_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SCHEDULED_START_DATE',
                                                      g_namespace) AS scheduled_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SCHEDULED_FINISH_DATE',
                                                      g_namespace) AS scheduled_finish_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASKS_DFF',
                                                      g_namespace) AS tasks_dff,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE_CATEGORY',
                                                      g_namespace) AS attribute_category,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE1',
                                                      g_namespace) AS attribute1,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE2',
                                                      g_namespace) AS attribute2,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE3',
                                                      g_namespace) AS attribute3,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE4',
                                                      g_namespace) AS attribute4,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE5',
                                                      g_namespace) AS attribute5,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE6',
                                                      g_namespace) AS attribute6,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE7',
                                                      g_namespace) AS attribute7,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE8',
                                                      g_namespace) AS attribute8,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE9',
                                                      g_namespace) AS attribute9,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE10',
                                                      g_namespace) AS attribute10,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE11',
                                                      g_namespace) AS attribute11,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE12',
                                                      g_namespace) AS attribute12,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE13',
                                                      g_namespace) AS attribute13,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE14',
                                                      g_namespace) AS attribute14,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ATTRIBUTE15',
                                                      g_namespace) AS attribute15,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ALLOW_CROSS_CHARGE_FLAG',
                                                      g_namespace) AS allow_cross_charge_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PROJECT_RATE_DATE',
                                                      g_namespace) AS project_rate_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PROJECT_RATE_TYPE',
                                                      g_namespace) AS project_rate_type,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CC_PROCESS_LABOR_FLAG',
                                                      g_namespace) AS cc_process_labor_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_TP_SCHEDULE_ID',
                                                      g_namespace) AS labor_tp_schedule_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_TP_FIXED_DATE',
                                                      g_namespace) AS labor_tp_fixed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CC_PROCESS_NL_FLAG',
                                                      g_namespace) AS cc_process_nl_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NL_TP_SCHEDULE_ID',
                                                      g_namespace) AS nl_tp_schedule_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NL_TP_FIXED_DATE',
                                                      g_namespace) AS nl_tp_fixed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/RECEIVE_PROJECT_INVOICE_FLAG',
                                                      g_namespace) AS receive_project_invoice_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/WORK_TYPE_ID',
                                                      g_namespace) AS work_type_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/WORK_TYPE',
                                                      g_namespace) AS work_type,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/EMP_BILL_RATE_SCHEDULE_ID',
                                                      g_namespace) AS emp_bill_rate_schedule_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/JOB_BILL_RATE_SCHEDULE_ID',
                                                      g_namespace) AS job_bill_rate_schedule_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NON_LAB_STD_BILL_RT_SCH_ID',
                                                      g_namespace) AS non_lab_std_bill_rt_sch_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASKFUNC_COST_RATE_TYPE',
                                                      g_namespace) AS taskfunc_cost_rate_type,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASKFUNC_COST_RATE_DATE',
                                                      g_namespace) AS taskfunc_cost_rate_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/DISPLAY_SEQUENCE',
                                                      g_namespace) AS display_sequence,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/WBS_LEVEL',
                                                      g_namespace) AS wbs_level,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/OBLIGATION_START_DATE',
                                                      g_namespace) AS obligation_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/OBLIGATION_FINISH_DATE',
                                                      g_namespace) AS obligation_finish_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ESTIMATED_START_DATE',
                                                      g_namespace) AS estimated_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ESTIMATED_FINISH_DATE',
                                                      g_namespace) AS estimated_finish_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/BASELINE_START_DATE',
                                                      g_namespace) AS baseline_start_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/BASELINE_FINISH_DATE',
                                                      g_namespace) AS baseline_finish_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CLOSED_DATE',
                                                      g_namespace) AS closed_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/WQ_UOM_CODE',
                                                      g_namespace) AS wq_uom_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/WQ_ITEM_CODE',
                                                      g_namespace) AS wq_item_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/STATUS_CODE',
                                                      g_namespace) AS status_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/WF_STATUS_CODE',
                                                      g_namespace) AS wf_status_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PM_SOURCE_CODE',
                                                      g_namespace) AS pm_source_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PRIORITY_CODE',
                                                      g_namespace) AS priority_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/MILESTONE_FLAG',
                                                      g_namespace) AS milestone_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CRITICAL_FLAG',
                                                      g_namespace) AS critical_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/INC_PROJ_PROGRESS_FLAG',
                                                      g_namespace) AS inc_proj_progress_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LINK_TASK_FLAG',
                                                      g_namespace) AS link_task_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CALENDAR_ID',
                                                      g_namespace) AS calendar_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PLANNED_EFFORT',
                                                      g_namespace) AS planned_effort,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/DURATION',
                                                      g_namespace) AS DURATION,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PLANNED_WORK_QUANTITY',
                                                      g_namespace) AS planned_work_quantity,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TASK_TYPE',
                                                      g_namespace) AS task_type,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LABOR_DISC_REASON_CODE',
                                                      g_namespace) AS labor_disc_reason_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/NON_LABOR_DISC_REASON_CODE',
                                                      g_namespace) AS non_labor_disc_reason_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/RETIREMENT_COST_FLAG',
                                                      g_namespace) AS retirement_cost_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CINT_ELIGIBLE_FLAG',
                                                      g_namespace) AS cint_eligible_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CINT_STOP_DATE',
                                                      g_namespace) AS cint_stop_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PRED_STRING',
                                                      g_namespace) AS pred_string,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PRED_DELIMITER',
                                                      g_namespace) AS pred_delimiter,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/BASE_PERCENT_COMP_DERIV_CODE',
                                                      g_namespace) AS base_percent_comp_deriv_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SCH_TOOL_TSK_TYPE_CODE',
                                                      g_namespace) AS sch_tool_tsk_type_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CONSTRAINT_TYPE_CODE',
                                                      g_namespace) AS constraint_type_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CONSTRAINT_DATE',
                                                      g_namespace) AS constraint_date,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/FREE_SLACK',
                                                      g_namespace) AS free_slack,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/TOTAL_SLACK',
                                                      g_namespace) AS total_slack,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/EFFORT_DRIVEN_FLAG',
                                                      g_namespace) AS effort_driven_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/LEVEL_ASSIGNMENTS_FLAG',
                                                      g_namespace) AS level_assignments_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/INVOICE_METHOD',
                                                      g_namespace) AS invoice_method,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CUSTOMER_ID',
                                                      g_namespace) AS customer_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/GEN_ETC_SOURCE_CODE',
                                                      g_namespace) AS gen_etc_source_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/FINANCIAL_TASK_FLAG',
                                                      g_namespace) AS financial_task_flag,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/MAPPED_TASK_ID',
                                                      g_namespace) AS mapped_task_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/MAPPED_TASK_REFERENCE',
                                                      g_namespace) AS mapped_task_reference,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/DELIVERABLE',
                                                      g_namespace) AS deliverable,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/DELIVERABLE_ID',
                                                      g_namespace) AS deliverable_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/EXT_ACT_DURATION',
                                                      g_namespace) AS ext_act_duration,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/EXT_REMAIN_DURATION',
                                                      g_namespace) AS ext_remain_duration,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/EXT_SCH_DURATION',
                                                      g_namespace) AS ext_sch_duration,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/ETC_EFFORT',
                                                      g_namespace) AS etc_effort,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PERCENT_COMPLETE',
                                                      g_namespace) AS percent_complete,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/RESERVE_AMOUNT',
                                                      g_namespace) AS reserve_amount,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_CUSTOMER_ID',
                                                      g_namespace) AS ship_to_customer_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_ADDRESS_ID',
                                                      g_namespace) AS ship_to_address_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_CUSTOMER_NUMBER',
                                                      g_namespace) AS ship_to_customer_number,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_ADDRESS_1',
                                                      g_namespace) AS ship_to_address_1,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_ADDRESS_2',
                                                      g_namespace) AS ship_to_address_2,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_ADDRESS_3',
                                                      g_namespace) AS ship_to_address_3,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_ADDRESS_4',
                                                      g_namespace) AS ship_to_address_4,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/CITY',
                                                      g_namespace) AS city,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/STATE',
                                                      g_namespace) AS state,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/COUNTY',
                                                      g_namespace) AS county,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PROVINCE',
                                                      g_namespace) AS province,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/POSTAL_CODE',
                                                      g_namespace) AS postal_code,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/COUNTRY',
                                                      g_namespace) AS country,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_PARTY_ID',
                                                      g_namespace) AS ship_to_party_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_PARTY_SITE_ID',
                                                      g_namespace) AS ship_to_party_site_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_PARTY_SITE_NUMBER',
                                                      g_namespace) AS ship_to_party_site_number,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/SHIP_TO_PARTY_SITE_USE_ID',
                                                      g_namespace) AS ship_to_party_site_use_id,
                                         EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/BUILDING_ID',
                                                      g_namespace) AS building_id,
                                         EXTRACT(tmp_l.COLUMN_VALUE,
                                                 '//TASKS/G_ATTACHMENT',
                                                 g_namespace) AS G_ATTACHMENT,
                                         EXTRACT(tmp_l.COLUMN_VALUE,
                                                 '//TASKS/G_SRC_ATTRIBUTES',
                                                 g_namespace) AS G_SRC_ATTRIBUTES --Added G_SRC_ATTRIBUTES FOR RT7137886
                                    FROM TABLE(XMLSEQUENCE(c_prj_loop.g_tasks.EXTRACT('//TASKS',
                                                                                      g_namespace))) tmp_l
									--Added order by clause for CR25364--Commented for WSC7534 BugFix
									/*
									ORDER BY EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PA_TASK_NUMBER',
                                                      g_namespace),
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PM_TASK_REFERENCE',
                                                      g_namespace),
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                      '/TASKS/PM_PARENT_TASK_REFERENCE',
                                                      g_namespace)
									*/
									) LOOP
            gv_poo := 'Assignment of XML to Project Task Record Type';
			--replaced c_prj_task_loop.l_task_cnt with lv_task_count for CR25364
			lv_task_count := p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl.count + 1;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pm_task_reference := c_prj_task_loop.pm_task_reference;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pa_task_id := c_prj_task_loop.pa_task_id;
            /*            IF p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt)
            .prj_main_rec.pa_project_id IS NOT NULL AND p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
            .pa_task_id IS NULL THEN
            BEGIN
            SELECT task_id
            INTO p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
            .pa_task_id
            FROM pa_tasks
            WHERE project_id = p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt)
            .prj_main_rec.pa_project_id
            and task_number = c_prj_task_loop.pa_task_number;
            EXCEPTION
            WHEN OTHERS THEN
            write_into_file('Task Number : ' ||
            c_prj_task_loop.pa_task_number);
            END;
            END IF;
            */
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).task_name := c_prj_task_loop.task_name;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).long_task_name := c_prj_task_loop.long_task_name;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pa_task_number := c_prj_task_loop.pa_task_number;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).task_description := c_prj_task_loop.task_description;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).task_start_date      := c_prj_task_loop.task_start_date;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).task_completion_date      := c_prj_task_loop.task_completion_date;
            date_convert(c_prj_task_loop.task_start_date,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                         .task_start_date);
            write_into_file('Task Start Date : ' || p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                            .task_start_date || '-' ||
                            c_prj_task_loop.task_start_date);
              -- Commented by Athilakshmi
                date_convert(c_prj_task_loop.task_completion_date,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                         .task_completion_date);

            write_into_file(': Task Completion Date : '|| p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).task_completion_date || '-' ||c_prj_task_loop.task_completion_date);

            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pm_parent_task_reference := NVL(c_prj_task_loop.pm_parent_task_reference,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR);
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pa_parent_task_id := c_prj_task_loop.pa_parent_task_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).address_id := c_prj_task_loop.address_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).carrying_out_organization_id := c_prj_task_loop.carrying_out_organization_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).service_type_code := c_prj_task_loop.service_type_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).task_manager_person_id := c_prj_task_loop.task_manager_person_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).billable_flag := c_prj_task_loop.billable_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).chargeable_flag := c_prj_task_loop.chargeable_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).ready_to_bill_flag := c_prj_task_loop.ready_to_bill_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).ready_to_distribute_flag := c_prj_task_loop.ready_to_distribute_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).limit_to_txn_controls_flag := c_prj_task_loop.limit_to_txn_controls_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_bill_rate_org_id := c_prj_task_loop.labor_bill_rate_org_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_std_bill_rate_schdl := c_prj_task_loop.labor_std_bill_rate_schdl;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_schedule_fixed_date      := c_prj_task_loop.labor_schedule_fixed_date;
            date_convert(c_prj_task_loop.labor_schedule_fixed_date,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                         .labor_schedule_fixed_date);
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_schedule_discount := c_prj_task_loop.labor_schedule_discount;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).non_labor_bill_rate_org_id := c_prj_task_loop.non_labor_bill_rate_org_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).non_labor_std_bill_rate_schdl := c_prj_task_loop.non_labor_std_bill_rate_schdl;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).non_labor_schedule_fixed_date      := c_prj_task_loop.non_labor_schedule_fixed_date;
            date_convert(c_prj_task_loop.non_labor_schedule_fixed_date,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                         .non_labor_schedule_fixed_date);
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).non_labor_schedule_discount := c_prj_task_loop.non_labor_schedule_discount;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_cost_multiplier_name := c_prj_task_loop.labor_cost_multiplier_name;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).cost_ind_rate_sch_id := c_prj_task_loop.cost_ind_rate_sch_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).rev_ind_rate_sch_id := c_prj_task_loop.rev_ind_rate_sch_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).inv_ind_rate_sch_id := c_prj_task_loop.inv_ind_rate_sch_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).cost_ind_sch_fixed_date := c_prj_task_loop.cost_ind_sch_fixed_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).rev_ind_sch_fixed_date := c_prj_task_loop.rev_ind_sch_fixed_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).inv_ind_sch_fixed_date := c_prj_task_loop.inv_ind_sch_fixed_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_sch_type := c_prj_task_loop.labor_sch_type;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).non_labor_sch_type := c_prj_task_loop.non_labor_sch_type;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).actual_start_date := c_prj_task_loop.actual_start_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).actual_finish_date := c_prj_task_loop.actual_finish_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).early_start_date := c_prj_task_loop.early_start_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).early_finish_date := c_prj_task_loop.early_finish_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).late_start_date := c_prj_task_loop.late_start_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).late_finish_date := c_prj_task_loop.late_finish_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).scheduled_start_date := c_prj_task_loop.scheduled_start_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).scheduled_finish_date := c_prj_task_loop.scheduled_finish_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).tasks_dff := NVL(c_prj_task_loop.tasks_dff,
                                                                                                                               'Y');
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute_category := c_prj_task_loop.attribute_category;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute1 := c_prj_task_loop.attribute1;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute2 := c_prj_task_loop.attribute2;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute3 := c_prj_task_loop.attribute3;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute4 := c_prj_task_loop.attribute4;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute5 := c_prj_task_loop.attribute5;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute6 := c_prj_task_loop.attribute6;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute7 := c_prj_task_loop.attribute7;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute8 := c_prj_task_loop.attribute8;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute9 := c_prj_task_loop.attribute9;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute10 := c_prj_task_loop.attribute10;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute11 := c_prj_task_loop.attribute11;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute12 := c_prj_task_loop.attribute12;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute13 := c_prj_task_loop.attribute13;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute14 := c_prj_task_loop.attribute14;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).attribute15 := c_prj_task_loop.attribute15;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).allow_cross_charge_flag := c_prj_task_loop.allow_cross_charge_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).project_rate_date := c_prj_task_loop.project_rate_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).project_rate_type := c_prj_task_loop.project_rate_type;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).cc_process_labor_flag := c_prj_task_loop.cc_process_labor_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_tp_schedule_id := c_prj_task_loop.labor_tp_schedule_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_tp_fixed_date := c_prj_task_loop.labor_tp_fixed_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).cc_process_nl_flag := c_prj_task_loop.cc_process_nl_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).nl_tp_schedule_id := c_prj_task_loop.nl_tp_schedule_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).nl_tp_fixed_date := c_prj_task_loop.nl_tp_fixed_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).receive_project_invoice_flag := c_prj_task_loop.receive_project_invoice_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).work_type_id := c_prj_task_loop.work_type_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).emp_bill_rate_schedule_id := c_prj_task_loop.emp_bill_rate_schedule_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).job_bill_rate_schedule_id := c_prj_task_loop.job_bill_rate_schedule_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).non_lab_std_bill_rt_sch_id := c_prj_task_loop.non_lab_std_bill_rt_sch_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).taskfunc_cost_rate_type := c_prj_task_loop.taskfunc_cost_rate_type;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).taskfunc_cost_rate_date := c_prj_task_loop.taskfunc_cost_rate_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).display_sequence := c_prj_task_loop.display_sequence;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).wbs_level := c_prj_task_loop.wbs_level;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).obligation_start_date := c_prj_task_loop.obligation_start_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).obligation_finish_date := c_prj_task_loop.obligation_finish_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).estimated_start_date := c_prj_task_loop.estimated_start_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).estimated_finish_date := c_prj_task_loop.estimated_finish_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).baseline_start_date := c_prj_task_loop.baseline_start_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).baseline_finish_date := c_prj_task_loop.baseline_finish_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).closed_date := c_prj_task_loop.closed_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).wq_uom_code := c_prj_task_loop.wq_uom_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).wq_item_code := c_prj_task_loop.wq_item_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).status_code := c_prj_task_loop.status_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).wf_status_code := c_prj_task_loop.wf_status_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pm_source_code := NVL(c_prj_task_loop.pm_source_code,
                                                                                                                                    p_agr_rec.agr_extra_rec.pm_product_code);
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).priority_code := c_prj_task_loop.priority_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).milestone_flag := c_prj_task_loop.milestone_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).critical_flag := c_prj_task_loop.critical_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).inc_proj_progress_flag := c_prj_task_loop.inc_proj_progress_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).link_task_flag := c_prj_task_loop.link_task_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).calendar_id := c_prj_task_loop.calendar_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).planned_effort := c_prj_task_loop.planned_effort;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).DURATION := c_prj_task_loop.DURATION;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).planned_work_quantity := c_prj_task_loop.planned_work_quantity;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).task_type := c_prj_task_loop.task_type;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).labor_disc_reason_code := c_prj_task_loop.labor_disc_reason_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).non_labor_disc_reason_code := c_prj_task_loop.non_labor_disc_reason_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).retirement_cost_flag := c_prj_task_loop.retirement_cost_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).cint_eligible_flag := c_prj_task_loop.cint_eligible_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).cint_stop_date := c_prj_task_loop.cint_stop_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pred_string := c_prj_task_loop.pred_string;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).pred_delimiter := c_prj_task_loop.pred_delimiter;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).base_percent_comp_deriv_code := c_prj_task_loop.base_percent_comp_deriv_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).sch_tool_tsk_type_code := c_prj_task_loop.sch_tool_tsk_type_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).constraint_type_code := c_prj_task_loop.constraint_type_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).constraint_date := c_prj_task_loop.constraint_date;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).free_slack := c_prj_task_loop.free_slack;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).total_slack := c_prj_task_loop.total_slack;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).effort_driven_flag := c_prj_task_loop.effort_driven_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).level_assignments_flag := c_prj_task_loop.level_assignments_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).invoice_method := c_prj_task_loop.invoice_method;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).customer_id := c_prj_task_loop.customer_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).gen_etc_source_code := c_prj_task_loop.gen_etc_source_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).financial_task_flag := c_prj_task_loop.financial_task_flag;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).mapped_task_id := c_prj_task_loop.mapped_task_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).mapped_task_reference := c_prj_task_loop.mapped_task_reference;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).deliverable := c_prj_task_loop.deliverable;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).deliverable_id := c_prj_task_loop.deliverable_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).ext_act_duration := c_prj_task_loop.ext_act_duration;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).ext_remain_duration := c_prj_task_loop.ext_remain_duration;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).ext_sch_duration := c_prj_task_loop.ext_sch_duration;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).etc_effort := c_prj_task_loop.etc_effort;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).percent_complete := c_prj_task_loop.percent_complete;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).reserve_amount := c_prj_task_loop.reserve_amount;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).work_type := c_prj_task_loop.work_type;
            --
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_tbl(1).ship_to_customer_id := c_prj_task_loop.ship_to_customer_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_tbl(1).ship_to_address_id := c_prj_task_loop.ship_to_address_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_customer_number := c_prj_task_loop.ship_to_customer_number;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_address_1 := c_prj_task_loop.ship_to_address_1;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_address_2 := c_prj_task_loop.ship_to_address_2;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_address_3 := c_prj_task_loop.ship_to_address_3;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_address_4 := c_prj_task_loop.ship_to_address_4;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.city := c_prj_task_loop.city;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.state := c_prj_task_loop.state;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.province := c_prj_task_loop.province;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.postal_code := c_prj_task_loop.postal_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.country := c_prj_task_loop.country;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.county := c_prj_task_loop.county;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_party_id := c_prj_task_loop.ship_to_party_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_party_site_id := c_prj_task_loop.ship_to_party_site_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.ship_to_party_site_use_id := c_prj_task_loop.ship_to_party_site_use_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).g_task_cust_rec.prj_cust_extra.building_id := c_prj_task_loop.building_id;
            --Added below G_SRC_ATTRIBUTES Loop FOR RT7137886
            write_into_file('p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).service_type_code ' || p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                            .service_type_code);
            FOR c_src_attributes_loop IN (SELECT ROWNUM l_prj_cust_cnt, EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/SRC_ATTRIBUTE/NAME', g_namespace) AS attribute_name,
												 EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/SRC_ATTRIBUTE/VALUE', g_namespace) AS attribute_value
                                        FROM TABLE(XMLSEQUENCE(c_prj_task_loop.G_SRC_ATTRIBUTES.EXTRACT('//SRC_ATTRIBUTE', g_namespace))) tmp_l
										WHERE EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/SRC_ATTRIBUTE/VALUE', g_namespace) is not null --Added Where condition for CR25364
											)
            LOOP
              -- CR25098 - Read TASK_SALESPERSON SRC Attribute - START
              IF c_src_attributes_loop.attribute_name LIKE 'TASK_SALESPERSON%' AND
                 NVL(c_src_attributes_loop.attribute_value, 'NA') <> 'NA'
              THEN
                ln_prj_src_cnt := ln_prj_src_cnt + 1;
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_crd_rec_split_tbl(ln_prj_src_cnt).salesrep_split := c_src_attributes_loop.attribute_value;
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_crd_rec_split_tbl(ln_prj_src_cnt).pa_task_number := c_prj_task_loop.pa_task_number;
              END IF;
              -- CR25098 - Read TASK_SALESPERSON SRC Attribute - END

              IF c_src_attributes_loop.attribute_name = 'CARRYING_OUT_ORGANIZATION_NAME' AND
--                 'TASK_ORGANIZATION_NAME' AND
                 c_src_attributes_loop.attribute_value IS NOT NULL AND p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count)
                .carrying_out_org_name is null THEN
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).carrying_out_org_name := c_src_attributes_loop.attribute_value;
              END IF;
              IF c_src_attributes_loop.attribute_name = 'SERVICE_TYPE_CODE' AND
                 c_src_attributes_loop.attribute_value IS NOT NULL AND p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                .service_type_code is null THEN
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count).service_type_code := c_src_attributes_loop.attribute_value;
              END IF;
              -- Added for CR9339
              IF c_src_attributes_loop.attribute_name =
                 'TXN_CONTROL_EXP_CATEGORY' AND
                 nvl(c_prj_task_loop.limit_to_txn_controls_flag, 'N') = 'Y' THEN
                g_task_exp_limit_flag := 'Y';
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_task_limit_exp(lv_task_count).project_number := p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt)
                                                                                                                                        .prj_main_rec.pa_project_number;
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_task_limit_exp(lv_task_count).task_number := p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.tasks_in_tbl(lv_task_count)
                                                                                                                                     .pa_task_number;
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_task_limit_exp(lv_task_count).task_exp_category_code := c_src_attributes_loop.attribute_value;
              END IF;
              --End of Added for CR9339
			  --Added for CR25364
			  IF c_src_attributes_loop.attribute_name = 'TASK_MANAGER_EBS_USERNAME' THEN
			    p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).task_mgr_ebs_user_name := c_src_attributes_loop.attribute_value;
              END IF;
			  IF c_src_attributes_loop.attribute_name = 'TASK_MANAGER_EMP_NUMBER' THEN
				p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_task_rec.g_prj_task_extra_tbl(lv_task_count).task_mgr_emp_number := c_src_attributes_loop.attribute_value;
              END IF;
			  --End of Added for CR25364

            END LOOP;

            --Start of Added for CR24105 - Milestone Billing Notes
            FOR c_task_att_loop IN (SELECT extractvalue(tmp_l.column_value,
                                                        '/ATTACHMENTS/noteType',
                                                        g_namespace) AS NOTETYPE,
                                           extractvalue(tmp_l.column_value,
                                                        '/ATTACHMENTS/notes',
                                                        g_namespace) AS NOTES,
                                           extractvalue(tmp_l.column_value,
                                                        '/ATTACHMENTS/ENTITYNAME',
                                                        g_namespace) AS ENTITYNAME,
                                           extractvalue(tmp_l.column_value,
                                                        '/ATTACHMENTS/SEQNUMBER',
                                                        g_namespace) AS SEQNUMBER,
                                           extractvalue(tmp_l.column_value,
                                                        '/ATTACHMENTS/TITLE',
                                                        g_namespace) AS TITLE,
                                           extractvalue(tmp_l.column_value,
                                                        '/ATTACHMENTS/DESCRIPTION') AS description,
                                           NULL agreement_num,
                                           NULL Project_num,
                                           extract(tmp_l.column_value,
                                                   '//G_SRC_ATTRIBUTES',
                                                   g_namespace) AS g_src_attributes
                                      FROM TABLE(xmlsequence(c_prj_task_loop.G_ATTACHMENT.extract('//ATTACHMENTS',
                                                                                                  g_namespace))) tmp_l) LOOP
              l_att_count := g_proj_attach_tbl.count;
              g_proj_attach_tbl(l_att_count).noteType := c_task_att_loop.noteType;
              g_proj_attach_tbl(l_att_count).notes := c_task_att_loop.notes;
              g_proj_attach_tbl(l_att_count).entityName := c_task_att_loop.entityName;
              g_proj_attach_tbl(l_att_count).seqNumber := c_task_att_loop.seqNumber;
              g_proj_attach_tbl(l_att_count).title := c_task_att_loop.title;
              g_proj_attach_tbl(l_att_count).description := c_task_att_loop.description;
              g_proj_attach_tbl(l_att_count).agreement_num := c_agr_loop.agreement_num;
              g_proj_attach_tbl(l_att_count).project_num := c_prj_loop.pa_project_number;
              g_proj_attach_tbl(l_att_count).task_num := c_prj_task_loop.pa_task_number;
              g_proj_attach_tbl(l_att_count).project_funding_amount := NULL;
            END LOOP;
            --End of Added for CR24105 - Milestone Billing Notes

          END LOOP; --Project Tasks END
          gv_poo := 'After Assignment of XML to Project Task Record Type';
          gv_poo := 'Start Project Players Loop';
          p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec := NULL;
          --Project PLAYERS
          FOR c_prj_players_loop IN (SELECT ROWNUM l_player_cnt,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_PLAYERS/PERSON_ID',
                                                         g_namespace) AS person_id,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_PLAYERS/PROJECT_ROLE_TYPE',
                                                         g_namespace) AS project_role_type,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_PLAYERS/PROJECT_ROLE_MEANING',
                                                         g_namespace) AS project_role_meaning,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_PLAYERS/START_DATE',
                                                         g_namespace) AS start_date,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_PLAYERS/END_DATE',
                                                         g_namespace) AS end_date,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_PLAYERS/PRJ_PLAYER_EMP_NO',
                                                         g_namespace) AS prj_player_emp_no,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_PLAYERS/EBS_USER_NAME',
                                                         g_namespace) AS ebs_user_name
                                       FROM TABLE(XMLSEQUENCE(c_prj_loop.g_pa_project_players.EXTRACT('//PA_PROJECT_PLAYERS',
                                                                                                      g_namespace))) tmp_l
                                      ORDER BY EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                            '/PA_PROJECT_PLAYERS/START_DATE',
                                                            g_namespace)) LOOP
            gv_poo := 'Assignment of XML to Project Players Record Type';
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt).person_id := c_prj_players_loop.person_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt).project_role_type := c_prj_players_loop.project_role_type;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt).project_role_meaning := c_prj_players_loop.project_role_meaning;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt).start_date      := c_prj_players_loop.start_date;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt).end_date      := c_prj_players_loop.end_date;
            date_convert(c_prj_players_loop.start_date,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt)
                         .start_date);
            date_convert(c_prj_players_loop.end_date,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt)
                         .end_date);
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_extra_tbl(c_prj_players_loop.l_player_cnt).prj_player_emp_no := c_prj_players_loop.prj_player_emp_no;
            -- Added for Phase 3B
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_extra_tbl(c_prj_players_loop.l_player_cnt).ebs_user_name := c_prj_players_loop.ebs_user_name;
            IF p_agr_rec.agr_extra_rec.owned_by_person_number IS NULL AND
               p_agr_rec.agr_extra_rec.ebs_user_name IS NULL AND
               p_agr_rec.agr_main_rec.owned_by_person_id IS NULL AND p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt)
              .project_role_type = 'PROJECT MANAGER' THEN
              p_agr_rec.agr_main_rec.owned_by_person_id      := p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_main_tbl(c_prj_players_loop.l_player_cnt)
                                                                .person_id;
              p_agr_rec.agr_extra_rec.owned_by_person_number := p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_extra_tbl(c_prj_players_loop.l_player_cnt)
                                                                .prj_player_emp_no;
              p_agr_rec.agr_extra_rec.ebs_user_name          := p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_player_rec.prj_player_extra_tbl(c_prj_players_loop.l_player_cnt)
                                                                .ebs_user_name;
            END IF;
            -- End of Added for Phase 3B
          END LOOP; --Project PLAYERS END
          gv_poo := 'After Assignment of XML to Project Players Record Type';
          gv_poo := 'Start Project Classification Loop';
          --Project Classification
          FOR c_prj_classes_loop IN (SELECT ROWNUM l_class_cnt,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_CLASSES/CLASS_CATEGORY',
                                                         g_namespace) AS class_category,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_CLASSES/CLASS_CODE',
                                                         g_namespace) AS class_code,
                                            EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                         '/PA_PROJECT_CLASSES/CODE_PERCENTAGE',
                                                         g_namespace) AS code_percentage
                                       FROM TABLE(XMLSEQUENCE(c_prj_loop.g_pa_project_classes.EXTRACT('//PA_PROJECT_CLASSES',
                                                                                                      g_namespace))) tmp_l) LOOP
            gv_poo := 'Assignment of XML to Project Classification Record Type';
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_class_categories_tbl(c_prj_classes_loop.l_class_cnt).class_category := c_prj_classes_loop.class_category;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_class_categories_tbl(c_prj_classes_loop.l_class_cnt).class_code := c_prj_classes_loop.class_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_class_categories_tbl(c_prj_classes_loop.l_class_cnt).code_percentage := c_prj_classes_loop.code_percentage;
			--Added for CR25364
			if g_supress_zero_lines_exists = 'Y' AND c_prj_classes_loop.class_category = 'Business Offering' then
                gv_business_offering := c_prj_classes_loop.class_code;
                write_into_file('Suppress Zero Lines : '||gv_supress_zero_lines);

                gv_supress_zero_lines := xxint_event_type_utils.valid_config(p_event_type     => gc_event_type,
                                                      p_key_type       => gc_key_type,
                                                      p_key_type_value => gv_source_system,
                                                      p_key_name       => gc_supress_zero_line_keyname,
                                                      p_key_value      => 'Y',
                                                      p_attribute4     => c_prj_classes_loop.class_code);


            end if;
			--End of Added for CR25364
		  END LOOP; --Project Classification END
          gv_poo := 'After Assignment of XML to Project Classification Record Type';
          gv_poo := 'Start Project Credit Receiver Loop';
          --Project Credit Receiver
          FOR c_prj_crd_recvr_loop IN (SELECT ROWNUM l_crd_recvr_cnt,
                                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                           '/PA_CREDIT_RECEIVERS/PERSON_ID',
                                                           g_namespace) AS person_id,
                                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                           '/PA_CREDIT_RECEIVERS/CREDIT_TYPE_CODE',
                                                           g_namespace) AS credit_type_code,
                                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                           '/PA_CREDIT_RECEIVERS/START_DATE_ACTIVE',
                                                           g_namespace) AS start_date_active,
                                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                           '/PA_CREDIT_RECEIVERS/CREDIT_PERCENTAGE',
                                                           g_namespace) AS credit_percentage,
                                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                           '/PA_CREDIT_RECEIVERS/END_DATE_ACTIVE',
                                                           g_namespace) AS end_date_active,
                                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                           '/PA_CREDIT_RECEIVERS/EMPLOYEE_NUMBER',
                                                           g_namespace) AS employee_number,
                                              EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                           '/PA_CREDIT_RECEIVERS/EBS_USER_NAME',
                                                           g_namespace) AS ebs_user_name
                                         FROM TABLE(XMLSEQUENCE(c_prj_loop.g_pa_credit_receivers.EXTRACT('//PA_CREDIT_RECEIVERS',
                                                                                                         g_namespace))) tmp_l) LOOP
            gv_poo := 'Assignment of XML to Project Credit Receiver Record Type';
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt).person_id := c_prj_crd_recvr_loop.person_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt).credit_type_code := c_prj_crd_recvr_loop.credit_type_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt).credit_percentage := c_prj_crd_recvr_loop.credit_percentage;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt).start_date_active      := c_prj_crd_recvr_loop.start_date_active;
            --p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt).end_date_active      := c_prj_crd_recvr_loop.end_date_active;
            date_convert(c_prj_crd_recvr_loop.start_date_active,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt)
                         .start_date_active);
            date_convert(c_prj_crd_recvr_loop.end_date_active,
                         p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt)
                         .end_date_active);
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt).employee_number := c_prj_crd_recvr_loop.employee_number;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_prj_crd_recver_tbl(c_prj_crd_recvr_loop.l_crd_recvr_cnt).ebs_user_name := c_prj_crd_recvr_loop.ebs_user_name;
          END LOOP; --Project Credit Receiver END
          --Added for Phase 3B Project budget
          FOR c_prj_budget_loop IN (SELECT ROWNUM l_crd_prj_budget_cnt,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/PM_BUDGET_REFERENCE',
                                                        g_namespace) AS pm_budget_reference,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/BUDGET_VERSION_NAME',
                                                        g_namespace) AS budget_version_name,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/BUDGET_TYPE_CODE',
                                                        g_namespace) AS budget_type_code,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/CHANGE_REASON_CODE',
                                                        g_namespace) AS change_reason_code,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/DESCRIPTION',
                                                        g_namespace) AS description,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ENTRY_METHOD_CODE',
                                                        g_namespace) AS entry_method_code,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/RESOURCE_LIST_NAME',
                                                        g_namespace) AS resource_list_name,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/RESOURCE_LIST_ID',
                                                        g_namespace) AS resource_list_id,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE_CATEGORY',
                                                        g_namespace) AS attribute_category,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE1',
                                                        g_namespace) AS attribute1,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE2',
                                                        g_namespace) AS attribute2,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE3',
                                                        g_namespace) AS attribute3,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE4',
                                                        g_namespace) AS attribute4,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE5',
                                                        g_namespace) AS attribute5,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE6',
                                                        g_namespace) AS attribute6,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE7',
                                                        g_namespace) AS attribute7,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE8',
                                                        g_namespace) AS attribute8,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE9',
                                                        g_namespace) AS attribute9,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE1',
                                                        g_namespace) AS attribute10,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE1',
                                                        g_namespace) AS attribute11,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE2',
                                                        g_namespace) AS attribute12,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE3',
                                                        g_namespace) AS attribute13,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE4',
                                                        g_namespace) AS attribute14,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/ATTRIBUTE5',
                                                        g_namespace) AS attribute15,
                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                        '/PA_BUDGET_HDR/BUDGET_UPDATE_FLAG',
                                                        g_namespace) AS budget_update_flag, -- Added for HPQC 19004
                                           EXTRACT(tmp_l.COLUMN_VALUE,
                                                   '//G_PA_BUDGET_LINE',
                                                   g_namespace) AS g_budget_line
                                      FROM TABLE(XMLSEQUENCE(c_prj_loop.g_pa_project_budgets.EXTRACT('//PA_BUDGET_HDR',
                                                                                                     g_namespace))) tmp_l) LOOP
            gv_poo := 'Assignment of XML to Project Credit Receiver Record Type';
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).pm_budget_reference := c_prj_budget_loop.pm_budget_reference;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).budget_version_name := c_prj_budget_loop.budget_version_name;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).budget_type_code := c_prj_budget_loop.budget_type_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).change_reason_code := c_prj_budget_loop.change_reason_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).description := c_prj_budget_loop.description;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).entry_method_code := c_prj_budget_loop.entry_method_code;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).resource_list_name := c_prj_budget_loop.resource_list_name;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).resource_list_id := c_prj_budget_loop.resource_list_id;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute_category := c_prj_budget_loop.attribute_category;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute1 := c_prj_budget_loop.attribute1;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute2 := c_prj_budget_loop.attribute2;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute3 := c_prj_budget_loop.attribute3;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute4 := c_prj_budget_loop.attribute4;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute5 := c_prj_budget_loop.attribute5;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute6 := c_prj_budget_loop.attribute6;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute7 := c_prj_budget_loop.attribute7;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute8 := c_prj_budget_loop.attribute8;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute9 := c_prj_budget_loop.attribute9;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute10 := c_prj_budget_loop.attribute10;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute11 := c_prj_budget_loop.attribute11;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute12 := c_prj_budget_loop.attribute12;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute13 := c_prj_budget_loop.attribute13;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute14 := c_prj_budget_loop.attribute14;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).attribute15 := c_prj_budget_loop.attribute15;
            p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).budget_update_flag := c_prj_budget_loop.budget_update_flag; -- Added for HPQC 19004
            l_prj_budget_line_cnt := 0;
            FOR c_prj_budget_line_loop IN (SELECT --ROWNUM l_prj_budget_line_cnt,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/TASK_NUMBER', g_namespace) AS task_number,
                                                  NVL(EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/RESOURCE_ALIAS', g_namespace),
                                                      (SELECT distinct xint.attribute2 --Added distinct for CR25364
                                                         FROM TABLE(XMLSEQUENCE(c_prj_loop.g_tasks.EXTRACT('//TASKS', g_namespace))) task,
                                                              pa_work_types_vl pwt,
                                                              xxint_event_type_key_vals xint
                                                        WHERE (pwt.work_type_id = EXTRACTVALUE(task.COLUMN_VALUE, '/TASKS/WORK_TYPE_ID', NULL) OR
                                                               pwt.name = EXTRACTVALUE(task.COLUMN_VALUE, '/TASKS/WORK_TYPE', NULL))
                                                          AND xint.event_type = gc_event_type
                                                          AND xint.key_type = gc_key_type
                                                          AND xint.key_type_value = gv_source_system
                                                          AND xint.key_name = 'BUDGET_TYPE_CODE'
                                                          AND xint.key_value = c_prj_budget_loop.budget_type_code
                                                          AND xint.attribute1 = TO_CHAR(pwt.work_type_id)
                                                          AND EXTRACTVALUE(task.COLUMN_VALUE, '/TASKS/PA_TASK_NUMBER', NULL) =
                                                                           EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/TASK_NUMBER', g_namespace))) AS resource_alias,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/BUDGET_START_DATE', g_namespace) AS budget_start_date,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/BUDGET_END_DATE', g_namespace) AS budget_end_date,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PERIOD_NAME', g_namespace) AS period_name,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/DESCRIPTION', g_namespace) AS description,
                                                  SUM(EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/RAW_COST', g_namespace)) AS raw_cost,
                                                  SUM(EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/BURDENED_COST', g_namespace)) AS burdened_cost,
                                                  SUM(EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/REVENUE', g_namespace)) AS revenue,
                                                  SUM(EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/QUANTITY', g_namespace)) AS quantity,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PM_BUDGET_LINE_REFERENCE', g_namespace) AS pm_budget_line_reference,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/TXN_CURRENCY_CODE', g_namespace) AS txn_currency_code,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_RATE_TYPE', g_namespace) AS projfunc_cost_rate_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_RATE_DATE_TYPE', g_namespace) AS projfunc_cost_rate_date_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_RATE_DATE', g_namespace) AS projfunc_cost_rate_date,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_EXCHANGE_RATE', g_namespace) AS projfunc_cost_exchange_rate,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_RATE_TYPE', g_namespace) AS projfunc_rev_rate_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_RATE_DATE_TYPE', g_namespace) AS projfunc_rev_rate_date_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_RATE_DATE', g_namespace) AS projfunc_rev_rate_date,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_EXCHANGE_RATE', g_namespace) AS projfunc_rev_exchange_rate,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_RATE_TYPE', g_namespace) AS project_cost_rate_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_RATE_DATE_TYPE', g_namespace) AS project_cost_rate_date_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_RATE_DATE', g_namespace) AS project_cost_rate_date,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_EXCHANGE_RATE', g_namespace) AS project_cost_exchange_rate,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_RATE_TYPE', g_namespace) AS project_rev_rate_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_RATE_DATE_TYPE', g_namespace) AS project_rev_rate_date_type,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_RATE_DATE', g_namespace) AS project_rev_rate_date,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_EXCHANGE_RATE', g_namespace) AS project_rev_exchange_rate,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE_CATEGORY', g_namespace) AS attribute_category,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE1', g_namespace) AS attribute1,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE2', g_namespace) AS attribute2,
                                                  NVL(SUM(TO_NUMBER(EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE3', g_namespace))),0) AS attribute3,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE4', g_namespace) AS attribute4,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE5', g_namespace) AS attribute5,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE6', g_namespace) AS attribute6,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE7', g_namespace) AS attribute7,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE8', g_namespace) AS attribute8,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE9', g_namespace) AS attribute9,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE10', g_namespace) AS attribute10,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE11', g_namespace) AS attribute11,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE12', g_namespace) AS attribute12,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE13', g_namespace) AS attribute13,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE14', g_namespace) AS attribute14,
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE15', g_namespace) AS attribute15
                                             FROM TABLE(XMLSEQUENCE(c_prj_budget_loop.g_budget_line.EXTRACT('//PA_BUDGET_LINE', g_namespace))) tmp_l
                                         GROUP BY EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/TASK_NUMBER', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/RESOURCE_ALIAS', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/BUDGET_START_DATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/BUDGET_END_DATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PERIOD_NAME', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/DESCRIPTION', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PM_BUDGET_LINE_REFERENCE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/TXN_CURRENCY_CODE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_RATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_RATE_DATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_RATE_DATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_COST_EXCHANGE_RATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_RATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_RATE_DATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_RATE_DATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJFUNC_REV_EXCHANGE_RATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_RATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_RATE_DATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_RATE_DATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_COST_EXCHANGE_RATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_RATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_RATE_DATE_TYPE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_RATE_DATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/PROJECT_REV_EXCHANGE_RATE', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE_CATEGORY', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE1', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE2', g_namespace),
                                                  --EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE3', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE4', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE5', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE6', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE7', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE8', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE9', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE10', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE11', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE12', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE13', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE14', g_namespace),
                                                  EXTRACTVALUE(tmp_l.COLUMN_VALUE, '/PA_BUDGET_LINE/ATTRIBUTE15', g_namespace))
			LOOP
              gv_poo := 'Assignment of XML to Project Credit Receiver Record Type';
              l_prj_budget_line_cnt := l_prj_budget_line_cnt + 1;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_prj_bud_line_extra_t(l_prj_budget_line_cnt).task_number := c_prj_budget_line_loop.task_number;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).resource_alias := c_prj_budget_line_loop.resource_alias;
              date_convert(c_prj_budget_line_loop.budget_start_date,
                           p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt)
                           .budget_start_date);
              date_convert(c_prj_budget_line_loop.budget_end_date,
                           p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt)
                           .budget_end_date);
              /*
              p_agr_rec.g_prj_tbl (c_prj_loop.l_prj_cnt).g_budget_prj_tbl
              (c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl
              (l_prj_budget_line_cnt).budget_start_date :=
              c_prj_budget_line_loop.budget_start_date;
              p_agr_rec.g_prj_tbl (c_prj_loop.l_prj_cnt).g_budget_prj_tbl
              (c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl
              (l_prj_budget_line_cnt).budget_end_date :=
              c_prj_budget_line_loop.budget_end_date;
              */
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).period_name := c_prj_budget_line_loop.period_name;
               begin
               if length(replace(c_prj_budget_line_loop.period_name,'')) > 6 --and g_prj_pm_product_code = 'TSMT'
              then
                p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).period_name := to_char(to_date(replace(c_prj_budget_line_loop.period_name,' '),'Mon-YYYY'),'Mon-YY');
              end if;
              exception
              when others then
              null;
              end;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).description := c_prj_budget_line_loop.description;
              -- CR25098 - Fetch RAW Cost based on txn_currency_code - START
			  write_into_file('txn_currency_code: ' || c_prj_budget_line_loop.txn_currency_code || ' ~ and lv_carrying_out_org_code: ' || lv_carrying_out_org_code);
			  IF c_prj_budget_line_loop.txn_currency_code IS NULL
			  THEN
			    write_into_file('txn_currency_code is NULL. ');
			    p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).raw_cost := c_prj_budget_line_loop.raw_cost;
              ELSE
			    BEGIN
				  SELECT gl.currency_code,
				         pia.default_rate_type
				    INTO lv_func_currency_code,
                         lv_projrate_type
                    FROM org_organization_definitions ood,
                         hr_operating_units hou,
					     pa_implementations_all pia,
                         gl_ledgers gl
                   WHERE ood.organization_code = lv_carrying_out_org_code
                     AND ood.operating_unit = hou.organization_id
			         AND hou.set_of_books_id = gl.ledger_id
				     AND pia.org_id = hou.organization_id;

                  write_into_file('lv_func_currency_code: ' || lv_func_currency_code || ' ~ ' || 'lv_projrate_type: ' || lv_projrate_type);

				  p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).raw_cost :=
			               (c_prj_budget_line_loop.raw_cost * NVL(get_conversion_rate(p_from_currency   => c_prj_budget_line_loop.txn_currency_code,
                                                                                      p_to_currency     => NVL(lv_func_currency_code, c_prj_budget_line_loop.txn_currency_code),
                                                                                      p_conversion_type => NVL(lv_projrate_type, 'Corporate'),
                                                                                      p_conversion_date => SYSDATE),1));
				  write_into_file('Translated Raw Cost: ' || p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).raw_cost);
				EXCEPTION
                  WHEN OTHERS THEN
				    write_into_file('Exception Raised while Fetching Functional Currency and Rate: ' || SQLERRM);
					p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).raw_cost := c_prj_budget_line_loop.raw_cost;
                END;
              END IF;
			  -- CR25098 - Fetch RAW Cost based on txn_currency_code - END
			  p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).burdened_cost := c_prj_budget_line_loop.burdened_cost;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).revenue := c_prj_budget_line_loop.revenue;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).quantity := c_prj_budget_line_loop.quantity;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).pm_budget_line_reference := c_prj_budget_line_loop.pm_budget_line_reference;

              /* p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_cost_rate_type := c_prj_budget_line_loop.projfunc_cost_rate_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).txn_currency_code := c_prj_budget_line_loop.txn_currency_code;
			  p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_cost_rate_date_type := c_prj_budget_line_loop.projfunc_cost_rate_date_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_cost_rate_date := c_prj_budget_line_loop.projfunc_cost_rate_date;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_cost_exchange_rate := c_prj_budget_line_loop.projfunc_cost_exchange_rate;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_rev_rate_type := c_prj_budget_line_loop.projfunc_rev_rate_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_rev_rate_date_type := c_prj_budget_line_loop.projfunc_rev_rate_date_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_rev_rate_date := c_prj_budget_line_loop.projfunc_rev_rate_date;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).projfunc_rev_exchange_rate := c_prj_budget_line_loop.projfunc_rev_exchange_rate;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_cost_rate_type := c_prj_budget_line_loop.project_cost_rate_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_cost_rate_date_type := c_prj_budget_line_loop.project_cost_rate_date_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_cost_rate_date := c_prj_budget_line_loop.project_cost_rate_date;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_cost_exchange_rate := c_prj_budget_line_loop.project_cost_exchange_rate;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_rev_rate_type := c_prj_budget_line_loop.project_rev_rate_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_rev_rate_date_type := c_prj_budget_line_loop.project_rev_rate_date_type;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_rev_rate_date := c_prj_budget_line_loop.project_rev_rate_date;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).project_rev_exchange_rate := c_prj_budget_line_loop.project_rev_exchange_rate;
              */
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute_category := c_prj_budget_line_loop.attribute_category;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute1 := c_prj_budget_line_loop.attribute1;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute2 := c_prj_budget_line_loop.attribute2;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute3 := c_prj_budget_line_loop.attribute3;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute4 := c_prj_budget_line_loop.attribute4;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute5 := c_prj_budget_line_loop.attribute5;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute6 := c_prj_budget_line_loop.attribute6;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute7 := c_prj_budget_line_loop.attribute7;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute8 := c_prj_budget_line_loop.attribute8;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute9 := c_prj_budget_line_loop.attribute9;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute10 := c_prj_budget_line_loop.attribute10;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute11 := c_prj_budget_line_loop.attribute11;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute12 := c_prj_budget_line_loop.attribute12;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute13 := c_prj_budget_line_loop.attribute13;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute14 := c_prj_budget_line_loop.attribute14;
              p_agr_rec.g_prj_tbl(c_prj_loop.l_prj_cnt).g_budget_prj_tbl(c_prj_budget_loop.l_crd_prj_budget_cnt).g_budget_line_in_tbl(l_prj_budget_line_cnt).attribute15 := c_prj_budget_line_loop.attribute15;
            END LOOP; --Project Budget Line END
          END LOOP; --Project Budget END
        END LOOP; -- PROJECT LOOP END;
        gv_poo := 'After All Assignment of XML to Project Record Type';
        gv_poo := 'Start Project Funding Loop';
        -- Project Funding Loop
        FOR c_prj_funding IN (SELECT ROWNUM l_prj_funding_cnt,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PM_FUNDING_REFERENCE',
                                                  g_namespace) AS pm_funding_reference,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJECT_FUNDING_ID',
                                                  g_namespace) AS project_funding_id,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/AGREEMENT_ID',
                                                  g_namespace) AS agreement_id,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJECT_ID',
                                                  g_namespace) AS project_id,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/TASK_ID',
                                                  g_namespace) AS task_id,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ALLOCATED_AMOUNT',
                                                  g_namespace) AS allocated_amount,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/DATE_ALLOCATED',
                                                  g_namespace) AS date_allocated,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/DESC_FLEX_NAME',
                                                  g_namespace) AS desc_flex_name,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE_CATEGORY',
                                                  g_namespace) AS attribute_category,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE1',
                                                  g_namespace) AS attribute1,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE2',
                                                  g_namespace) AS attribute2,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE3',
                                                  g_namespace) AS attribute3,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE4',
                                                  g_namespace) AS attribute4,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE5',
                                                  g_namespace) AS attribute5,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE6',
                                                  g_namespace) AS attribute6,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE7',
                                                  g_namespace) AS attribute7,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE8',
                                                  g_namespace) AS attribute8,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE9',
                                                  g_namespace) AS attribute9,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ATTRIBUTE10',
                                                  g_namespace) AS attribute10,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJECT_RATE_TYPE',
                                                  g_namespace) AS project_rate_type,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJECT_RATE_DATE',
                                                  g_namespace) AS project_rate_date,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJECT_EXCHANGE_RATE',
                                                  g_namespace) AS project_exchange_rate,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJFUNC_RATE_TYPE',
                                                  g_namespace) AS projfunc_rate_type,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJFUNC_RATE_DATE',
                                                  g_namespace) AS projfunc_rate_date,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PROJFUNC_EXCHANGE_RATE',
                                                  g_namespace) AS projfunc_exchange_rate,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/FUNDING_CATEGORY',
                                                  g_namespace) AS funding_category,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PA_PROJECT_NUMBER',
                                                  g_namespace) AS pa_project_number,
                                     EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/PA_TASK_NUMBER',
                                                  g_namespace) AS pa_task_number,
                                     EXTRACT(tmp_l.COLUMN_VALUE,
                                             '//PA_PROJECT_FUNDING/G_ATTACHMENT',
                                             g_namespace) AS G_ATTACHMENT
                                FROM TABLE(XMLSEQUENCE(c_agr_loop.g_pa_project_fundings.EXTRACT('//PA_PROJECT_FUNDING',
                                                                                                g_namespace))) tmp_l
                                WHERE gv_supress_zero_lines = 'N' OR (gv_supress_zero_lines = 'Y' AND NVL(EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                  '/PA_PROJECT_FUNDING/ALLOCATED_AMOUNT',
                                                  g_namespace),0) <> 0) --Added where condition for CR25364
                               ORDER BY EXTRACTVALUE(tmp_l.COLUMN_VALUE,
                                                     '/PA_PROJECT_FUNDING/ALLOCATED_AMOUNT',
                                                     g_namespace) -- Added Order BY class for CR9339 - Performance Improvement
                              ) LOOP
          gv_poo := 'Assignment of XML to Funding Record Type';
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).pm_funding_reference := c_prj_funding.pm_funding_reference;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).project_funding_id := c_prj_funding.project_funding_id;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).agreement_id := c_prj_funding.agreement_id;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).project_id := c_prj_funding.project_id;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).task_id := c_prj_funding.task_id;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).allocated_amount := c_prj_funding.allocated_amount;
          --p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).date_allocated      := c_prj_funding.date_allocated;
          date_convert(c_prj_funding.date_allocated,
                       p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt)
                       .date_allocated);
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).desc_flex_name := c_prj_funding.desc_flex_name;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute_category := c_prj_funding.attribute_category;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute1 := c_prj_funding.attribute1;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute2 := c_prj_funding.attribute2;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute3 := c_prj_funding.attribute3;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute4 := c_prj_funding.attribute4;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute5 := c_prj_funding.attribute5;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute6 := c_prj_funding.attribute6;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute7 := c_prj_funding.attribute7;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute8 := c_prj_funding.attribute8;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute9 := c_prj_funding.attribute9;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).attribute10 := c_prj_funding.attribute10;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).project_rate_type := c_prj_funding.project_rate_type;
          --p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).project_rate_date      := c_prj_funding.project_rate_date;
          date_convert(c_prj_funding.project_rate_date,
                       p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt)
                       .project_rate_date);
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).project_exchange_rate := c_prj_funding.project_exchange_rate;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).projfunc_rate_type := c_prj_funding.projfunc_rate_type;
          --p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).projfunc_rate_date      := c_prj_funding.projfunc_rate_date;
          date_convert(c_prj_funding.projfunc_rate_date,
                       p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt)
                       .projfunc_rate_date);
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).projfunc_exchange_rate := c_prj_funding.projfunc_exchange_rate;
          p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(c_prj_funding.l_prj_funding_cnt).funding_category := c_prj_funding.funding_category;
          p_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(c_prj_funding.l_prj_funding_cnt).pa_project_number := c_prj_funding.pa_project_number;
          p_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(c_prj_funding.l_prj_funding_cnt).pa_task_number := c_prj_funding.pa_task_number;

          --        VISVIS
          --Start of Added for CR24105 - Milestone Billing Notes
          FOR c_prj_fund_att IN (SELECT extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/noteType',
                                                     g_namespace) AS NOTETYPE,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/notes',
                                                     g_namespace) AS NOTES,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/ENTITYNAME',
                                                     g_namespace) AS ENTITYNAME,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/SEQNUMBER',
                                                     g_namespace) AS SEQNUMBER,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/TITLE',
                                                     g_namespace) AS TITLE,
                                        extractvalue(tmp_l.column_value,
                                                     '/ATTACHMENTS/DESCRIPTION') AS description,
                                        c_agr_loop.agreement_num agreement_num,
                                        NULL Project_num,
                                        extract(tmp_l.column_value,
                                                '//G_SRC_ATTRIBUTES',
                                                g_namespace) AS g_src_attributes
                                   FROM TABLE(xmlsequence(c_prj_funding.G_ATTACHMENT.extract('//ATTACHMENTS',
                                                                                             g_namespace))) tmp_l) LOOP
            l_att_count := g_proj_attach_tbl.count;
            g_proj_attach_tbl(l_att_count).noteType := c_prj_fund_att.noteType;
            g_proj_attach_tbl(l_att_count).notes := c_prj_fund_att.notes;
            g_proj_attach_tbl(l_att_count).entityName := c_prj_fund_att.entityName;
            g_proj_attach_tbl(l_att_count).seqNumber := c_prj_fund_att.seqNumber;
            g_proj_attach_tbl(l_att_count).title := c_prj_fund_att.title;
            g_proj_attach_tbl(l_att_count).description := c_prj_fund_att.description;
            g_proj_attach_tbl(l_att_count).agreement_num := c_prj_fund_att.agreement_num;
            g_proj_attach_tbl(l_att_count).project_num := c_prj_funding.pa_project_number;
            g_proj_attach_tbl(l_att_count).task_num := c_prj_funding.pa_task_number;
            g_proj_attach_tbl(l_att_count).project_funding_amount := c_prj_funding.allocated_amount;
          END LOOP;
          --End of Added for CR24105 - Milestone Billing Notes
        --        c_agr_loop.agreement_num

        END LOOP; -- PROJECT FUNDING LOOP END;
        gv_poo := 'After Assignment of XML to Project Funding Record Type';
      END;
    END LOOP; -- Agreement loop ends
    gv_poo := 'After All Assignment Assignment of XML to Agreement Record Type';
    write_into_file(gv_procedure_name || '.' || gv_poo);
  EXCEPTION
    WHEN OTHERS THEN
      x_return_status := gc_error;
      --x_return_message := gv_procedure_name || '.' || gv_poo || '.' ||SQLERRM;-- Commentned for for RT7010726
      --write_into_file(x_return_message);-- Commentned for for RT7010726
      write_into_file(gv_procedure_name || '.' || gv_poo || '.' || SQLERRM);
      x_return_message := 'Error Occured while Parsing XML Payload : ' ||
                          SQLERRM; -- Added for RT7010726
      -- Added by vinod for WRITE, attribute5 of xxint is not being when xml parsing fails
      p_agr_rec.agr_extra_rec.agr_status  := gc_error;
      p_agr_rec.agr_extra_rec.agr_message := x_return_message;
  END parse_transaction;
  /*
  ** Procedure Name  : derive_organization_idcd
  ** Purpose:  For Deriving Organization information
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  */
  PROCEDURE derive_organization_idcd(p_organization_code IN OUT VARCHAR2,
                                     p_organization_name IN OUT VARCHAR2,
                                     p_organization_id   IN OUT NUMBER,
                                     x_return_status     OUT VARCHAR2,
                                     x_return_message    OUT VARCHAR2) IS
  BEGIN
    gv_procedure_name := 'derive_organization_idcd';
    gv_poo            := 'Start';
    IF p_organization_code IS NULL AND p_organization_id IS NULL AND
       p_organization_name IS NULL THEN
      x_return_status  := gc_error;
      x_return_message := ' Organization Code or ID is Mandatory';
	  log_error_clob('Org Derivation Error:'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
    ELSE
      IF p_organization_id IS NOT NULL THEN
        BEGIN
          SELECT haou.organization_id,
                 haou.name,
                 NVL((SELECT organization_code
                       FROM org_organization_definitions
                      WHERE organization_id = haou.organization_id),
                     p_organization_code)
            INTO p_organization_id,
                 p_organization_name,
                 p_organization_code
            FROM hr_all_organization_units   haou,
                 hr_organization_information hoi1,
                 hr_organization_information hoi2
           WHERE haou.organization_id = p_organization_id
             AND hoi1.organization_id = haou.organization_id
             AND upper(hoi1.org_information_context) = 'CLASS'
             AND upper(hoi1.org_information1) = 'PA_EXPENDITURE_ORG'
             AND upper(hoi1.org_information2) = 'Y'
             AND hoi2.organization_id = haou.organization_id
             AND upper(hoi2.org_information_context) =
                 'EXP ORGANIZATION DEFAULTS';
        EXCEPTION
          WHEN OTHERS THEN
            NULL;
        END;
      END IF;
      --Added for QC 21953
      IF p_organization_id IS NOT NULL THEN
        SELECT organization_id, organization_code, organization_name
          INTO p_organization_id, p_organization_code, p_organization_name
          FROM org_organization_definitions
         WHERE organization_id = p_organization_id;
      END IF;
      IF p_organization_id IS NULL AND p_organization_code IS NOT NULL THEN
        SELECT organization_id, organization_code, organization_name
          INTO p_organization_id, p_organization_code, p_organization_name
          FROM org_organization_definitions
         WHERE organization_code = p_organization_code;
      END IF;
      IF p_organization_id IS NULL AND p_organization_code IS NULL AND
         p_organization_name IS NOT NULL THEN
        BEGIN
          SELECT organization_id, organization_code, organization_name
            INTO p_organization_id,
                 p_organization_code,
                 p_organization_name
            FROM org_organization_definitions
           WHERE organization_code =
                 NVL(p_organization_code, organization_code)
             AND organization_name =
                 NVL(p_organization_name, organization_name);
        EXCEPTION
          WHEN no_data_found THEN
            SELECT haou.organization_id
              INTO p_organization_id
              FROM hr_all_organization_units   haou,
                   hr_organization_information hoi1,
                   hr_organization_information hoi2
             WHERE upper(haou.NAME) = UPPER(p_organization_name)
               AND hoi1.organization_id = haou.organization_id
               AND upper(hoi1.org_information_context) = 'CLASS'
               AND upper(hoi1.org_information1) = 'PA_EXPENDITURE_ORG'
               AND upper(hoi1.org_information2) = 'Y'
               AND hoi2.organization_id = haou.organization_id
               AND upper(hoi2.org_information_context) =
                   'EXP ORGANIZATION DEFAULTS';
          WHEN OTHERS THEN
            raise;
        END;
      END IF;
      IF p_organization_id IS NULL AND (p_organization_name IS NOT NULL OR
         p_organization_code IS NOT NULL) THEN
        SELECT organization_id, organization_code, organization_name
          INTO p_organization_id, p_organization_code, p_organization_name
          FROM org_organization_definitions
         WHERE organization_code =
               NVL(p_organization_code, organization_code)
           AND organization_name =
               NVL(p_organization_name, organization_name);
      END IF;
      --End of Added for QC 21953
      /*select organization_id, organization_name, organization_code
      into p_organization_id, p_organization_name, p_organization_code
      from ORG_ORGANIZATION_DEFINITIONS
      WHERE upper(organization_code) = UPPER(NVL(p_organization_code, organization_code))
      AND organization_id = NVL(p_organization_id, organization_id)
      and upper(organization_name) = UPPER(NVL(p_organization_name, organization_name));
      */
      IF p_organization_id IS NULL AND p_organization_code IS NOT NULL THEN
        SELECT organization_id, organization_code
          INTO p_organization_id, p_organization_code
          FROM mtl_parameters
         WHERE organization_code =
               NVL(p_organization_code, organization_code)
           AND organization_id = NVL(p_organization_id, organization_id);
      END IF;
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      --Check the organization definitions table to get the org_id
      BEGIN
        SELECT haou.organization_id
          INTO p_organization_id
          FROM hr_all_organization_units   haou,
               hr_organization_information hoi1,
               hr_organization_information hoi2
         WHERE upper(haou.NAME) = UPPER(p_organization_name)
              --upper(haou.NAME) like UPPER(NVL(p_organization_name, haou.name)) Modified for QC
              --= upper(nvl(g_prj_trx_interface_tbl(i).prj_trx_main_rec.organization_name,l_org_name))
           AND hoi1.organization_id = haou.organization_id
           AND upper(hoi1.org_information_context) = 'CLASS'
           AND upper(hoi1.org_information1) = 'PA_EXPENDITURE_ORG'
           AND upper(hoi1.org_information2) = 'Y'
           AND hoi2.organization_id = haou.organization_id
           AND upper(hoi2.org_information_context) =
               'EXP ORGANIZATION DEFAULTS';
      EXCEPTION
        WHEN no_data_found THEN
          x_return_status  := gc_error;
          x_return_message := ' Organization Code :' || p_organization_code ||
                              ' OR ID ' || p_organization_id ||
                              ' Not found';
          log_error_clob('Org Derivation Error(1) :'||x_return_message);--Added for CR25364
          write_into_file(gv_procedure_name || '.' || x_return_message);
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := ' Unhandeled Exception : Organization Code :' ||
                              p_organization_code || ' OR ID ' ||
                              p_organization_id || ' Not found' || '.' ||
                              SQLERRM;
          log_error_clob('Org Derivation Error(2) :'||x_return_message);--Added for CR25364
          write_into_file(gv_procedure_name || '.' || x_return_message);
      END;
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := ' Unhandeled Exception : Organization Code :' ||
                          p_organization_code || ' OR ID ' ||
                          p_organization_id || ' Not found' || '.' ||
                          SQLERRM;
	  log_error_clob('Org Derivation Error(3) :'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
  END derive_organization_idcd;
  /*
  ** Procedure Name  : derive_missing_role_type
  ** Purpose:  For Deriving Missing Project Role Type
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 03-Sep-14            Vipul Gosai      Created new
  */
  PROCEDURE derive_missing_role_type(p_proj_seq_num   IN NUMBER,
                                     proj_template_id IN NUMBER,
                                     p_start_date     IN DATE,
                                     p_xml_player_cnt IN NUMBER,
                                     x_return_status  OUT VARCHAR2,
                                     x_return_message OUT VARCHAR2) IS
  BEGIN
    gv_procedure_name := 'derive_missing_role_type';
    gv_poo            := 'Start';
    FOR rec IN (SELECT ROWNUM l_rawcnt, project_role_type, person_id
                  FROM pa_project_players ppp, pa_project_copy_overrides ppc
                 WHERE ppp.project_id = proj_template_id
                   AND ppc.field_name = 'KEY_MEMBER'
                   AND ppc.project_id = ppp.project_id
                   AND UPPER(ppc.limiting_value) =
                       UPPER(ppp.project_role_type)
                   AND SYSDATE BETWEEN NVL(ppp.start_date_active, SYSDATE) AND
                       NVL(ppp.end_date_active, SYSDATE + 1)
                   AND UPPER(ppp.project_role_type) NOT IN
                       (SELECT DISTINCT UPPER(NVL((EXTRACTVALUE(x1.COLUMN_VALUE,
                                                                '//PROJECT_ROLE_TYPE')),
                                                  (SELECT project_role_type
                                                     FROM pa_project_role_types
                                                    WHERE UPPER(meaning) =
                                                          UPPER(EXTRACTVALUE(x1.COLUMN_VALUE,
                                                                             '//PROJECT_ROLE_MEANING'))))) pr
                          FROM TABLE(XMLSEQUENCE(XMLTYPE(g_payload)
                                                 .EXTRACT('//G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/G_PA_PROJECTS_ALL[' ||
                                                          p_proj_seq_num ||
                                                          ']/PA_PROJECTS_ALL/G_PA_PROJECT_PLAYERS/PA_PROJECT_PLAYERS'))) x1)) LOOP
      write_into_file('Missing Role Type ' || rec.project_role_type ||
                      '***' || rec.person_id);
      g_agr_rec.g_prj_tbl(p_proj_seq_num).g_prj_player_rec.prj_player_main_tbl(p_xml_player_cnt + rec.l_rawcnt).person_id := rec.person_id;
      g_agr_rec.g_prj_tbl(p_proj_seq_num).g_prj_player_rec.prj_player_main_tbl(p_xml_player_cnt + rec.l_rawcnt).project_role_type := rec.project_role_type;
      --Added for Phase 3B
      IF p_start_date IS NOT NULL THEN
        g_agr_rec.g_prj_tbl(p_proj_seq_num).g_prj_player_rec.prj_player_main_tbl(p_xml_player_cnt + rec.l_rawcnt).start_date := p_start_date;
      END IF;
    END LOOP;
  EXCEPTION
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := ' Error ' || SQLERRM;
	  log_error_clob('Add Missing Role :'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
  END derive_missing_role_type;
  /*
  ** Procedure Name  : derive_employee_idnum
  ** Purpose:  For Deriving Organization information
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  */
  PROCEDURE derive_employee_idnum(p_employee_no    IN OUT VARCHAR2,
                                  p_person_id      IN OUT NUMBER,
                                  p_ebs_user_name  IN VARCHAR2, --Added as part of Phase 3B
                                  x_return_status  OUT VARCHAR2,
                                  x_return_message OUT VARCHAR2) IS
  BEGIN
    gv_procedure_name := 'derive_employee_idnum';
    gv_poo            := 'Start';

    write_into_file('Start : derive_employee_idnum');
    write_into_file('p_employee_no : '||p_employee_no||': p_person_id - '||p_person_id);
    IF p_employee_no IS NULL AND p_person_id IS NULL THEN
      /*Added as part of Phase 3B*/
      --            x_return_status := gc_error;
      --            x_return_message := ' Employee Number or ID is Mandatory';
      --            write_into_file (gv_procedure_name || '.' || x_return_message);
      IF p_ebs_user_name IS NULL THEN
        x_return_status  := gc_error;
        x_return_message := ' Employee Number or ID is Mandatory';
		log_error_clob('Derive Emp Num Error(1):'||x_return_message);--Added for CR25364
        write_into_file(gv_procedure_name || '.' || x_return_message);
      ELSE
        BEGIN
          SELECT person_id, employee_number
            INTO p_person_id, p_employee_no
            FROM fnd_user fnd,
			     per_all_people_f pf
           WHERE upper(fnd.user_name) = upper(trim(p_ebs_user_name))
             AND pf.party_id = fnd.person_party_id
             AND SYSDATE BETWEEN effective_start_date AND
                 NVL(effective_end_date, SYSDATE);
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            x_return_status  := gc_error;
            x_return_message := 'User Name doesnt match to get Employee Number or ID which is Mandatory';
			log_error_clob('Derive Emp Num Error(2):'||x_return_message);--Added for CR25364
            write_into_file(gv_procedure_name || '.' || x_return_message);
        END;
      END IF;
      /*Added as part of Phase 3B*/
    ELSE
      SELECT person_id, employee_number
        INTO p_person_id, p_employee_no
        FROM per_all_people_f
       WHERE employee_number = NVL(p_employee_no, employee_number)
         AND person_id = NVL(p_person_id, person_id)
         AND SYSDATE BETWEEN effective_start_date AND
             NVL(effective_end_date, SYSDATE);
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      x_return_status  := gc_error;
      x_return_message := ' Employee Number :' || p_employee_no ||
                          'OR ID :' || p_person_id ||
                          ' Not found OR Inactive';
	  log_error_clob('Derive Emp Num Error(3):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := ' Unhandeled Exception :  Employee Number :' ||
                          p_employee_no || 'OR ID :' || p_person_id ||
                          ' Not found. ' || SQLERRM;
	  log_error_clob('Derive Emp Num Error(4):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.Test' || x_return_message);
  END derive_employee_idnum;
  /*
  ** Procedure Name  : derive_project_type
  ** Purpose:  For Deriving Oracle Project Type
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  */
  PROCEDURE derive_project_type(p_project_type_partner         IN VARCHAR2,
                                p_project_type_oracle          OUT VARCHAR2,
                                p_partner_project_status_code  IN OUT VARCHAR2,
                                p_rev_budget_entry_method_cd   OUT VARCHAR2, -- Added as part of Phase 3B
                                p_rev_budget_resource_list_id  OUT NUMBER, -- Added as part of Phase 3B
                                p_cost_budget_entry_method_cd  OUT VARCHAR2, -- Added as part of Phase 3B
                                p_cost_budget_resource_list_id OUT NUMBER, -- Added as part of Phase 3B
                                p_prj_type_def_status_code     OUT VARCHAR2,
                                p_enable_project_wf_flag       OUT VARCHAR2,
                                x_return_status                OUT VARCHAR2,
                                x_return_message               OUT VARCHAR2) IS
    l_project_type_description VARCHAR2(2000);
  BEGIN
    gv_procedure_name := 'derive_project_type';
    gv_poo            := 'Start';
    SELECT project_type,
           def_start_proj_status_code,
           rev_budget_entry_method_code, -- Added as part of Phase 3B
           enable_project_wf_flag,
           cost_budget_entry_method_code, -- Added as part of Phase 3B
           rev_budget_resource_list_id, -- Added as part of Phase 3B
           cost_budget_resource_list_id, -- Added as part of Phase 3B
           description
      INTO p_project_type_oracle,
           p_prj_type_def_status_code,
           p_rev_budget_entry_method_cd, -- Added as part of Phase 3B
           p_enable_project_wf_flag,
           p_cost_budget_entry_method_cd, -- Added as part of Phase 3B
           p_rev_budget_resource_list_id, -- Added as part of Phase 3B
           p_cost_budget_resource_list_id, -- Added as part of Phase 3B
           l_project_type_description
      FROM pa_project_types
     WHERE UPPER(project_type) = UPPER(p_project_type_partner);
    IF p_partner_project_status_code IS NULL THEN
      p_partner_project_status_code := p_prj_type_def_status_code;
      --ELSE
      -- Write a special logic to derive the project status code if the partner status code is different then oracle
      --    p_def_project_status_code := p_def_project_status_code;
    END IF;
    -- Special Logic to get the project status code
    -- If Project is enabled for WF and Partner is sending the project status different from project status at project type
    -- then create the project with project status at project type level, create rest of the entities like agreement, funding, budget etc
    -- if everything create sucessfully then only update the project status as per Partner project status
    -- if project is not enabled for WF then create the project with partner status code.
    -- Reason : If Project is WF enabled and partner is sending SUBMITTED status(different from Project status at project type)
    -- then if there is any failure either at agreement, funding, budget or budget base line, its rolling back
    -- the project becasue project is already trigger for WF.
    IF p_enable_project_wf_flag = 'Y' AND
       p_partner_project_status_code <> p_prj_type_def_status_code THEN
      -- Assign Project type Project status to Partner Project status
      p_partner_project_status_code := p_prj_type_def_status_code;
    END IF;
    write_into_file(gv_procedure_name || '.' || gv_poo ||
                    '.Project Type and status : ' || p_project_type_oracle ||
                    '***' || p_partner_project_status_code);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      x_return_status  := gc_error;
      x_return_message := ' Project Type :' || p_project_type_partner ||
                          ' Not found';
	  log_error_clob('Derive Project type (1):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := 'Unhandeled Exception Oracle Project Type Not found.' ||
                          SQLERRM;
      log_error_clob('Derive Project type (2):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
  END derive_project_type;
  /*
  ** Procedure Name  : derive_template_name
  ** Purpose:  For Deriving Oracle template_name
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  */
  PROCEDURE derive_template_name(p_template_name_partner   IN VARCHAR2,
                                 p_project_type_oracle     IN VARCHAR2,
                                 p_template_name_oracle    OUT VARCHAR2,
                                 p_created_from_project_id OUT VARCHAR2,
                                 x_return_status           OUT VARCHAR2,
                                 x_return_message          OUT VARCHAR2) IS
  BEGIN
    gv_procedure_name := 'derive_template_name';
    gv_poo            := 'Start';
    SELECT segment1, project_id
      INTO p_template_name_oracle, p_created_from_project_id
      FROM pa_projects
     WHERE UPPER(project_type) = UPPER(p_project_type_oracle)
       AND template_flag = 'Y'
       AND TRUNC(SYSDATE) BETWEEN
           TRUNC(NVL(template_start_date_active, SYSDATE)) AND
           TRUNC(NVL(template_end_date_active, SYSDATE + 1));
    write_into_file(gv_procedure_name || '.' || gv_poo ||
                    '.Project Template and ID : ' ||
                    p_template_name_oracle || '***' ||
                    p_created_from_project_id);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      x_return_status  := gc_error;
      x_return_message := ' Oracle Template Name Not found ' ||
                          p_project_type_oracle;
      log_error_clob('Derive Project Template (1):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := 'Unhandeled Exception Oracle Template Name Not found. ' ||
                          p_project_type_oracle || '.' || SQLERRM;
      log_error_clob('Derive Project Template (2):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
  END derive_template_name;
  /*
  ** Procedure Name  : derive_cust_idnum
  ** Purpose:  For Deriving Oracle Customer ID and Number
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai       Created new
  ** 06-Jan-15         Jyotsana Kandpal   Changed data type of 1st parameter to prevent Invalid Number error in implicit conversion
  */
  PROCEDURE derive_cust_idnum(p_customer_number IN OUT VARCHAR2
                              -- changed from number to VARCHAR2 on 6-Jan-2015 by Jyotsana Kandpal Invalid Number error during implicit conversion
                             ,
                              p_customer_id    IN OUT NUMBER,
                              x_return_status  OUT VARCHAR2,
                              x_return_message OUT VARCHAR2) IS
    l_cust_s VARCHAR2(1);
  BEGIN
    gv_procedure_name := 'derive_cust_idnum';
    gv_poo            := 'Start';
    IF p_customer_id IS NULL AND p_customer_number IS NULL THEN
      x_return_status  := gc_error;
      x_return_message := gv_procedure_name ||
                          '. Customer Number or ID is Mandatory';
      write_into_file(x_return_message);
    ELSE
      SELECT cust_account_id, account_number, status
        INTO p_customer_id, p_customer_number, l_cust_s
        FROM hz_cust_accounts
       WHERE cust_account_id = NVL(p_customer_id, cust_account_id)
         AND account_number = NVL(p_customer_number, account_number)
      --AND status = 'A'
      ;
      IF l_cust_s <> 'A' THEN
        x_return_status  := gc_error;
        x_return_message := ' Customer Number :' || p_customer_number ||
                            ' OR ID ' || p_customer_id || ' Is Inacive';
		log_error_clob('Derive Customer Num(1):'||x_return_message);--Added for CR25364
      END IF;
      write_into_file(gv_procedure_name || '.' || gv_poo ||
                      '.Customer Number and  ID : ' || p_customer_number ||
                      '***' || p_customer_id);
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      x_return_status  := gc_error;
      x_return_message := ' Customer Number :' || p_customer_number ||
                          ' OR ID ' || p_customer_id || ' Not found';
	  log_error_clob('Derive Customer Num(2):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := 'Unhandled Exception Customer Number :' ||
                          p_customer_number || ' OR ID ' || p_customer_id ||
                          ' Not found' || '.' || SQLERRM;
	  log_error_clob('Derive Customer Num(3):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
  END derive_cust_idnum;
  /*
  ** Procedure Name  : create_shipto_site
  ** Purpose:  For Deriving Oracle site use id ID
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 24-Sep-14            Vipul Gosai      Created new
  */
  PROCEDURE create_shipto_site(p_site_code                 IN VARCHAR2,
                               p_execution_mode            IN VARCHAR2,
                               p_prj_cust_rec              IN g_prj_cust_rec_in,
                               x_create_cust_site_rec_type IN OUT xxont_validate_create_site.create_cust_site_rec_type,
                               x_cust_site_use_rec         IN OUT hz_cust_account_site_v2pub.cust_site_use_rec_type) IS
    p_create_cust_site_rec_type xxont_validate_create_site.create_cust_site_rec_type;
    p_location_rec_type         hz_location_v2pub.location_rec_type;
    x_location_rec_type         hz_location_v2pub.location_rec_type;
    p_cust_acct_site_rec        hz_cust_account_site_v2pub.cust_acct_site_rec_type;
    p_cust_site_use_rec         hz_cust_account_site_v2pub.cust_site_use_rec_type;
    e_invalid_country EXCEPTION; -- Added by Joydeb as per RT7188466
    /* Cursor to get the site ownership */
    CURSOR cur_site_onrshp(p_partner_name IN VARCHAR2) IS
      SELECT description
        FROM oe_lookups
       WHERE lookup_type = 'XXONT_SOURCE_SITE_OWNERSHIP'
         AND lookup_code = UPPER(p_partner_name);
  BEGIN
    gv_procedure_name := 'create_shipto_site';
    gv_poo            := 'Start';
    write_into_file(p_site_code || '***' ||
                    p_prj_cust_rec.prj_cust_extra.customer_number || '***' ||
                    p_prj_cust_rec.prj_cust_tbl.COUNT);
    p_create_cust_site_rec_type.p_cust_account_id := NVL(p_prj_cust_rec.prj_cust_tbl(1)
                                                         .ship_to_customer_id,
                                                         p_prj_cust_rec.prj_cust_tbl(1)
                                                         .customer_id);
    p_create_cust_site_rec_type.p_called_from     := 'DB';
    p_create_cust_site_rec_type.p_execution_mode  := p_execution_mode;
    --Logic added by Joydeb as per RT7188466. This is to derive the country code from country name
    IF p_prj_cust_rec.prj_cust_extra.country IS NOT NULL THEN
      BEGIN
        SELECT geography_code
          INTO p_location_rec_type.country
          FROM HZ_GEOGRAPHIES
         WHERE GEOGRAPHY_TYPE = 'COUNTRY'
           AND (geography_code = p_prj_cust_rec.prj_cust_extra.country OR
               UPPER(geography_name) =
               UPPER(p_prj_cust_rec.prj_cust_extra.country));
      EXCEPTION
        WHEN OTHERS THEN
          p_create_cust_site_rec_type.x_ret_code    := fnd_api.g_ret_sts_error;
          p_create_cust_site_rec_type.x_ret_message := 'Invalid Country provided as part of Ship to Address .' ||
                                                       SQLERRM;
          RAISE e_invalid_country;
      END;
    ELSE
      p_location_rec_type.country := p_prj_cust_rec.prj_cust_extra.country;
    END IF;
    --End of addition by Joydeb as per RT7188466.
    --'MATCH_CREATE';
    p_location_rec_type.address1    := p_prj_cust_rec.prj_cust_extra.ship_to_address_1;
    p_location_rec_type.address2    := p_prj_cust_rec.prj_cust_extra.ship_to_address_2;
    p_location_rec_type.address3    := p_prj_cust_rec.prj_cust_extra.ship_to_address_3;
    p_location_rec_type.address4    := p_prj_cust_rec.prj_cust_extra.ship_to_address_4;
    p_location_rec_type.city        := p_prj_cust_rec.prj_cust_extra.city;
    p_location_rec_type.state       := p_prj_cust_rec.prj_cust_extra.state;
    p_location_rec_type.province    := p_prj_cust_rec.prj_cust_extra.province;
    p_location_rec_type.postal_code := p_prj_cust_rec.prj_cust_extra.postal_code;
    --p_location_rec_type.country           := p_prj_cust_rec.prj_cust_extra.country; -- Commented by Joydeb as per RT7188466
    p_location_rec_type.county            := p_prj_cust_rec.prj_cust_extra.county;
    p_cust_site_use_rec.site_use_code     := p_site_code;
    p_cust_site_use_rec.org_id            := g_org_id;
    p_cust_site_use_rec.attribute4        := p_prj_cust_rec.prj_cust_extra.building_id;
    p_location_rec_type.created_by_module := 'CUST_INTERFACE';
    p_create_cust_site_rec_type.p_debug   := 'Y';
    -- Site Ownesrship
    OPEN cur_site_onrshp(p_partner_name => gv_source_system);
    LOOP
      FETCH cur_site_onrshp
        INTO p_cust_acct_site_rec.attribute1;
      EXIT WHEN cur_site_onrshp%NOTFOUND;
    END LOOP;
    CLOSE cur_site_onrshp;
    --Added by Joydeb as per RT7198253
    --Call the below mapping logic only when the site will be created i.e. execution_mode is MATCH_CREATE.
    IF p_execution_mode = 'MATCH_CREATE' THEN
      IF p_prj_cust_rec.prj_cust_extra.partner_site_id IS NOT NULL THEN
        p_cust_site_use_rec.attribute1            := p_prj_cust_rec.prj_cust_extra.partner_site_id;
        p_cust_site_use_rec.orig_system_reference := p_prj_cust_rec.prj_cust_extra.partner_site_id;
        p_location_rec_type.orig_system_reference := p_prj_cust_rec.prj_cust_extra.partner_site_id;
      END IF;
    END IF;
    xxont_validate_create_site.xxont_valid_create_site_main(p_create_cust_site_rec_type,
                                                            p_location_rec_type,
                                                            x_location_rec_type,
                                                            p_cust_acct_site_rec,
                                                            p_cust_site_use_rec);
    write_into_file(' SITE_USE_ID ' || p_cust_site_use_rec.site_use_id ||
                    chr(10) || ' cust_acct_site_id ' ||
                    p_cust_acct_site_rec.cust_acct_site_id || chr(10) ||
                    ' X_RET_CODE ' ||
                    p_create_cust_site_rec_type.x_ret_code || chr(10) ||
                    ' X_PROCESSING_STATUS ' ||
                    p_create_cust_site_rec_type.x_processing_status);
    write_into_file(' X_RET_MESSAGE ' ||
                    p_create_cust_site_rec_type.x_ret_message);
    x_cust_site_use_rec         := p_cust_site_use_rec;
    x_create_cust_site_rec_type := p_create_cust_site_rec_type;
  EXCEPTION
    --Added by Joydeb as per RT7188466
    WHEN e_invalid_country THEN
      x_cust_site_use_rec         := p_cust_site_use_rec;
      x_create_cust_site_rec_type := p_create_cust_site_rec_type;
	  log_error_clob('Create Ship To Error(1):'||p_create_cust_site_rec_type.x_ret_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' ||
                      p_create_cust_site_rec_type.x_ret_message);
    WHEN OTHERS THEN
      p_create_cust_site_rec_type.x_ret_code    := fnd_api.g_ret_sts_error;
      p_create_cust_site_rec_type.x_ret_message := 'Unhandeled Exception in create_shipto_site .' ||
                                                   SQLERRM;
	  log_error_clob('Create Ship To Error(2):'||p_create_cust_site_rec_type.x_ret_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' ||
                      p_create_cust_site_rec_type.x_ret_message);
  END create_shipto_site;
  /*
  ** Procedure Name  : derive_cust_site_use_id
  ** Purpose:  For Deriving Oracle site use id ID
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  */
  PROCEDURE derive_cust_siteuse_id(p_customer_number   IN OUT VARCHAR2,
                                   p_customer_id       IN OUT NUMBER,
                                   p_cust_acct_site_id IN OUT NUMBER,
                                   p_party_id          IN OUT NUMBER,
                                   p_party_site_id     IN OUT NUMBER,
                                   p_party_site_number IN OUT VARCHAR2,
                                   p_site_code         IN OUT VARCHAR2,
                                   p_site_use_id       IN OUT NUMBER,
                                   p_building_id       IN OUT VARCHAR2,
                                   p_address_line_1    IN VARCHAR2, --RT 6496912 Added Address Line 1 and 4 to derive ship to address
                                   p_address_line_4    IN VARCHAR2, --RT 6496912 Added Address Line 1 and 4 to derive ship to address
                                   x_return_status     OUT VARCHAR2,
                                   x_return_message    OUT VARCHAR2) IS
    l_query_base  VARCHAR2(4000);
    l_query_amend VARCHAR2(4000);
    l_cust_dtl_v  xxont_cust_dtl_v%ROWTYPE;
  BEGIN
    gv_procedure_name := 'derive_cust_siteuse_id';
    gv_poo            := 'Start';
    write_into_file('Before Passing ' || p_site_code || ' p_customer_id :' ||
                    p_customer_id || ' p_customer_number :' ||
                    p_customer_number || ' p_cust_acct_site_id :' ||
                    p_cust_acct_site_id || ' p_party_site_id :' ||
                    p_party_site_id || ' p_site_use_id :' || p_site_use_id);
    IF p_cust_acct_site_id IS NULL AND p_party_site_id IS NULL AND
       p_party_site_number IS NULL AND p_site_use_id IS NULL AND
       p_building_id IS NULL THEN
      write_into_file('SITE USE ID can not derive as p_cust_acct_site_id , p_party_site_id,p_party_site_number, p_site_use_id and buiilding id is null');
    ELSE
      /* Commented for RT 6496912
      l_query_base:=   'SELECT *
      FROM xxont_cust_dtl_v
      WHERE party_id            = NVL(:p_party_id, party_id)
      AND cust_account_id      = NVL(:p_customer_id, cust_account_id)
      AND account_number       = NVL(:p_customer_number , account_number)
      AND cust_acct_site_id    = NVL(:p_cust_acct_site_id, cust_acct_site_id)
      AND party_site_id        = NVL(:p_party_site_id, party_site_id)
      AND party_site_number    = NVL(:p_party_site_number,party_site_number)
      AND site_use_code        = NVL(:p_site_code,site_use_code)
      AND site_use_id          = NVL(:p_site_use_id, site_use_id)
      AND su_org_id            = '||g_org_id;
      End of Commented for RT 6496912*/
      -- Modified l_query_base to include Address Line 1 and 4
      l_query_base := 'SELECT *
  FROM xxont_cust_dtl_v
  WHERE party_id            = NVL(:p_party_id, party_id)
  AND cust_account_id      = NVL(:p_customer_id, cust_account_id)
  AND account_number       = NVL(:p_customer_number , account_number)
  AND cust_acct_site_id    = NVL(:p_cust_acct_site_id, cust_acct_site_id)
  AND party_site_id        = NVL(:p_party_site_id, party_site_id)
  AND party_site_number    = NVL(:p_party_site_number,party_site_number)
  AND site_use_code        = NVL(:p_site_code,site_use_code)
  AND site_use_id          = NVL(:p_site_use_id, site_use_id)
  AND UPPER(address1)      = UPPER(NVL(TRIM(:p_address_line_1),address1))
  AND UPPER(NVL(address4,''XX''))      = UPPER(NVL(TRIM(:p_address_line_4),NVL(address4,''XX'')))
  AND su_org_id            = ' || g_org_id;
      --RT 6496912 Added Address Line 1 and 4 to derive ship to address
      BEGIN

        CASE
          WHEN p_building_id IS NOT NULL THEN
            l_query_amend := l_query_base ||
                             ' AND NVL(su_attribute4,''-999'') = NVL(:p_building_id, NVL(su_attribute4,''-999'') )';
            EXECUTE IMMEDIATE l_query_amend
              INTO l_cust_dtl_v
              USING p_party_id, p_customer_id, p_customer_number, p_cust_acct_site_id, p_party_site_id, p_party_site_number, p_site_code, p_site_use_id, p_address_line_1, p_address_line_4, p_building_id; -- Added Address line 1 and 4 for RT 6496912
          ELSE
            EXECUTE IMMEDIATE l_query_base
              INTO l_cust_dtl_v
              USING p_party_id, p_customer_id, p_customer_number, p_cust_acct_site_id, p_party_site_id, p_party_site_number, p_site_code, p_site_use_id, p_address_line_1, p_address_line_4; -- Added Address line 1 and 4 for RT 6496912
        END CASE;
        p_party_id          := l_cust_dtl_v.party_id;
        p_customer_id       := l_cust_dtl_v.cust_account_id;
        p_customer_number   := l_cust_dtl_v.account_number;
        p_cust_acct_site_id := l_cust_dtl_v.cust_acct_site_id;
        p_party_site_id     := l_cust_dtl_v.party_site_id;
        p_party_site_number := l_cust_dtl_v.party_site_number;
        p_site_use_id       := l_cust_dtl_v.site_use_id;
        p_building_id       := l_cust_dtl_v.su_attribute4;
        IF l_cust_dtl_v.account_status <> 'A' THEN
          x_return_message := ' ' || p_site_code ||
                              ' Customer Account is Inactive p_customer_number :' ||
                              p_customer_number;
          x_return_status  := gc_error;
        END IF;
        IF l_cust_dtl_v.cs_status <> 'A' THEN
          x_return_message := ' ' || p_site_code ||
                              ' Party Site is Inactive p_customer_number :' ||
                              p_customer_number || ' Party Site Number :' ||
                              p_party_site_number;
          x_return_status  := gc_error;
        END IF;
        IF l_cust_dtl_v.su_status <> 'A' THEN
          x_return_message := ' ' || p_site_code ||
                              ' Customer Site Uses is Inactive p_customer_number :' ||
                              p_customer_number || ' Party Site Number :' ||
                              p_party_site_number;
          x_return_status  := gc_error;
        END IF;
        write_into_file(gv_procedure_name || '.' || gv_poo ||
                        x_return_message);
        write_into_file('After Passing ' || p_site_code ||
                        ' p_customer_id :' || p_customer_id ||
                        ' p_customer_number :' || p_customer_number ||
                        ' p_cust_acct_site_id :' || p_cust_acct_site_id ||
                        ' p_party_site_id :' || p_party_site_id ||
                        ' p_site_use_id :' || p_site_use_id);
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          IF p_building_id IS NOT NULL AND
             (p_cust_acct_site_id IS NOT NULL OR
             p_party_site_id IS NOT NULL OR
             p_party_site_number IS NOT NULL OR p_site_use_id IS NOT NULL) THEN
            write_into_file('No Data Found at first time by passing building id...check without building id...');
            --Execute query without passing building id to make sure customer info exists.
            BEGIN
              EXECUTE IMMEDIATE l_query_base
                INTO l_cust_dtl_v
                USING p_party_id, p_customer_id, p_customer_number, p_cust_acct_site_id, p_party_site_id, p_party_site_number, p_site_code, p_site_use_id, p_address_line_1, p_address_line_4; -- Added Address line 1 and 4 missed for RT 6496912
            EXCEPTION
              WHEN NO_DATA_FOUND THEN
                x_return_status  := gc_error;
                x_return_message := ' ' || p_site_code ||
                                    ' Customer Site not found with details p_customer_id :' ||
                                    p_customer_id || ' p_customer_number :' ||
                                    p_customer_number ||
                                    ' p_cust_acct_site_id :' ||
                                    p_cust_acct_site_id ||
                                    ' p_party_site_id :' || p_party_site_id ||
                                    ' p_site_use_id :' || p_site_use_id;
				log_error_clob('Derive Address Error(1):'||x_return_message);--Added for CR25364
                write_into_file(gv_procedure_name || '.' ||
                                x_return_message);
              WHEN TOO_MANY_ROWS THEN
                x_return_status := gc_error;
                --There should be case where passing Oracle ID, will return more than one rows
                x_return_message := ' ' || p_site_code ||
                                    ' Too Many Customer Site found with details p_customer_id :' ||
                                    p_customer_id || ' p_customer_number :' ||
                                    p_customer_number ||
                                    ' p_cust_acct_site_id :' ||
                                    p_cust_acct_site_id ||
                                    ' p_party_site_id :' || p_party_site_id ||
                                    ' p_site_use_id :' || p_site_use_id;
				log_error_clob('Derive Address Error(2):'||x_return_message);--Added for CR25364
                write_into_file(p_site_code || '*' || p_customer_id || '*' ||
                                p_customer_number || '*' ||
                                p_cust_acct_site_id || '*' ||
                                p_party_site_id || '*' || p_site_use_id ||
                                '***' || SQLERRM);
                write_into_file(gv_procedure_name || '.' ||
                                x_return_message);
              WHEN OTHERS THEN
                x_return_status  := gc_error;
                x_return_message := 'Unhandeled Exception ' || p_site_code ||
                                    ' Customer Site not found with details p_customer_id :' ||
                                    p_customer_id || ' p_customer_number :' ||
                                    p_customer_number ||
                                    ' p_cust_acct_site_id :' ||
                                    p_cust_acct_site_id ||
                                    ' p_party_site_id :' || p_party_site_id ||
                                    ' p_site_use_id' || p_party_site_id || '.' ||
                                    SQLERRM;
				log_error_clob('Derive Address Error(3):'||x_return_message);--Added for CR25364
                write_into_file(gv_procedure_name || '.' ||
                                x_return_message);
            END;
          ELSIF p_building_id IS NOT NULL AND
                (p_cust_acct_site_id IS NULL AND p_party_site_id IS NULL AND
                p_party_site_number IS NULL AND p_site_use_id IS NULL) THEN
            write_into_file('No Data Found at first time by passing building id... Check with Address Creation...');
          ELSIF p_cust_acct_site_id IS NOT NULL OR
                p_party_site_id IS NOT NULL OR
                p_party_site_number IS NOT NULL OR
                p_site_use_id IS NOT NULL THEN
            x_return_status  := gc_error;
            x_return_message := ' Customer ' || p_site_code ||
                                ' Site not found with details p_customer_id :' ||
                                p_customer_id || ' p_customer_number :' ||
                                p_customer_number ||
                                ' p_cust_acct_site_id :' ||
                                p_cust_acct_site_id || ' p_party_site_id :' ||
                                p_party_site_id || ' p_site_use_id :' ||
                                p_site_use_id;
			log_error_clob('Derive Address Error(4):'||x_return_message);--Added for CR25364
            write_into_file(gv_procedure_name || '.' || x_return_message);
          END IF; --IF p_building_id IS NOT NULL THEN
        WHEN TOO_MANY_ROWS THEN
               -- Added IF condition for BILL_TO site for primary flag for INC0433625
              IF xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                           p_key_type       => gc_key_type,
                                                           p_key_type_value => gv_source_system,
                                                           p_name           => gc_derive_bill_to) = 'Y' THEN
                IF p_site_code = 'BILL_TO' THEN
                    l_query_base := l_query_base || ' and su_primary_flag=''Y''';
                ELSE
                    l_query_base := l_query_base || ' and rownum=1';
                END IF;
             END IF;

        BEGIN
              EXECUTE IMMEDIATE l_query_base
                INTO l_cust_dtl_v
                USING p_party_id, p_customer_id, p_customer_number, p_cust_acct_site_id, p_party_site_id, p_party_site_number, p_site_code, p_site_use_id, p_address_line_1, p_address_line_4;
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
              x_return_status := gc_error;
          --Mark Error as there should not be multiple records for same building ID
              x_return_message := ' No Data Found for Customer ' || p_site_code ||
                                  ' Site found with details p_customer_id :' ||
                                  p_customer_id || ' p_customer_number :' ||
                                  p_customer_number || ' p_cust_acct_site_id :' ||
                                  p_cust_acct_site_id || ' p_party_site_id :' ||
                                  p_party_site_id || ' p_site_use_id :' ||
                                  p_site_use_id || ' Building ID :' ||
                                  p_building_id;
			 log_error_clob('Derive Address Error(5):'||x_return_message);--Added for CR25364
              write_into_file(gv_procedure_name || '.' || x_return_message);

            WHEN OTHERS THEN
              x_return_status := gc_error;
          --Mark Error as due to exception
              x_return_message := ' Error for Customer ' || p_site_code ||
                                  ' Site found with details p_customer_id :' ||
                                  p_customer_id || ' p_customer_number :' ||
                                  p_customer_number || ' p_cust_acct_site_id :' ||
                                  p_cust_acct_site_id || ' p_party_site_id :' ||
                                  p_party_site_id || ' p_site_use_id :' ||
                                  p_site_use_id || ' Building ID :' ||
                                  p_building_id;
			  log_error_clob('Derive Address Error(6):'||x_return_message);--Added for CR25364
              write_into_file(gv_procedure_name || '.' || x_return_message);

            END ;
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := 'Unhandeled Exception. Customer ' ||
                              p_site_code ||
                              ' Site not found with details p_customer_id :' ||
                              p_customer_id || ' p_customer_number :' ||
                              p_customer_number || ' p_cust_acct_site_id :' ||
                              p_cust_acct_site_id || ' p_party_site_id :' ||
                              p_party_site_id || ' p_site_use_id' ||
                              p_party_site_id || '.' || SQLERRM;
		  log_error_clob('Derive Address Error(7):'||x_return_message);--Added for CR25364
          write_into_file(gv_procedure_name || '.' || x_return_message);
      END;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := 'Unhandeled Exception ' || p_site_code ||
                          ' Customer Site not found with details p_customer_id :' ||
                          p_customer_id || ' p_customer_number :' ||
                          p_customer_number || ' p_cust_acct_site_id :' ||
                          p_cust_acct_site_id || ' p_party_site_id :' ||
                          p_party_site_id || ' p_site_use_id' ||
                          p_party_site_id || '.' || SQLERRM;
		  log_error_clob('Derive Address Error(7):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
  END derive_cust_siteuse_id;
  /*
  ** Procedure Name  : derive_cust_shipto_id
  ** Purpose:  For Deriving Oracle Ship To site use ID
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 24-Sep-14            Vipul Gosai      Created new
  */
  PROCEDURE derive_cust_shipto_id(p_customer_number IN OUT VARCHAR2,
                                  p_customer_id     IN OUT NUMBER,
                                  p_site_code       IN OUT VARCHAR2,
                                  p_prj_cust_rec    IN OUT g_prj_cust_rec_in,
                                  x_return_status   OUT VARCHAR2,
                                  x_return_message  OUT VARCHAR2) IS
    l_building_id               hz_cust_site_uses.attribute4%TYPE;
    x_cust_site_use_rec         hz_cust_account_site_v2pub.cust_site_use_rec_type;
    x_create_cust_site_rec_type xxont_validate_create_site.create_cust_site_rec_type;
    l_db_attribute4             hz_cust_site_uses.attribute4%TYPE;
  BEGIN
    gv_procedure_name := 'derive_cust_shipto_id';
    gv_poo            := 'Start';
    x_return_status   := NULL;
    x_return_message  := NULL;
    l_building_id     := p_prj_cust_rec.prj_cust_extra.building_id;
    BEGIN
      write_into_file(' Before passing Ids to derive the site use id for Ship To');
      derive_cust_siteuse_id(p_customer_number   => p_customer_number,
                             p_customer_id       => p_customer_id,
                             p_cust_acct_site_id => p_prj_cust_rec.prj_cust_tbl(1)
                                                    .ship_to_address_id,
                             p_party_id          => p_prj_cust_rec.prj_cust_extra.ship_to_party_id,
                             p_party_site_id     => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_id,
                             p_party_site_number => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_number,
                             p_site_code         => p_site_code,
                             p_site_use_id       => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id,
                             p_building_id       => l_building_id, -- Pass Building ID for Ship To
                             p_address_line_1    => NULL, -- Added for RT6496912
                             p_address_line_4    => NULL, -- Added for RT6496912
                             x_return_status     => x_return_status,
                             x_return_message    => x_return_message);
      write_into_file(' After  passing Ids to derive the site use id for Ship To :' ||
                      p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id ||
                      '***' || x_return_status);
      /* Added for QC23454 */
      IF NVL(x_return_status, 'XX') = gc_error AND
         p_prj_cust_rec.prj_cust_extra.ship_to_address_4 IS NOT NULL THEN
        x_return_status  := NULL;
        x_return_message := NULL;
        write_into_file(' Before passing Ids and address4 to derive the site use id for Ship To');
        derive_cust_siteuse_id(p_customer_number   => p_customer_number,
                               p_customer_id       => p_customer_id,
                               p_cust_acct_site_id => p_prj_cust_rec.prj_cust_tbl(1)
                                                      .ship_to_address_id,
                               p_party_id          => p_prj_cust_rec.prj_cust_extra.ship_to_party_id,
                               p_party_site_id     => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_id,
                               p_party_site_number => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_number,
                               p_site_code         => p_site_code,
                               p_site_use_id       => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id,
                               p_building_id       => l_building_id, -- Pass Building ID for Ship To
                               p_address_line_1    => NULL, -- Added for RT6496912
                               p_address_line_4    => p_prj_cust_rec.prj_cust_extra.ship_to_address_4, -- Added for RT6496912
                               x_return_status     => x_return_status,
                               x_return_message    => x_return_message);
        write_into_file(' After  passing Ids to derive the site use id for Ship To :' ||
                        p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id ||
                        '***' || x_return_status);
      END IF;
      IF NVL(x_return_status, 'XX') = gc_error AND
         p_prj_cust_rec.prj_cust_extra.ship_to_address_1 IS NOT NULL THEN
        x_return_status  := NULL;
        x_return_message := NULL;
        write_into_file(' Before passing Ids, address1 and address 4 to derive the site use id for Ship To');
        derive_cust_siteuse_id(p_customer_number   => p_customer_number,
                               p_customer_id       => p_customer_id,
                               p_cust_acct_site_id => p_prj_cust_rec.prj_cust_tbl(1)
                                                      .ship_to_address_id,
                               p_party_id          => p_prj_cust_rec.prj_cust_extra.ship_to_party_id,
                               p_party_site_id     => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_id,
                               p_party_site_number => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_number,
                               p_site_code         => p_site_code,
                               p_site_use_id       => p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id,
                               p_building_id       => l_building_id, -- Pass Building ID for Ship To
                               p_address_line_1    => p_prj_cust_rec.prj_cust_extra.ship_to_address_1, -- Added for RT6496912
                               p_address_line_4    => p_prj_cust_rec.prj_cust_extra.ship_to_address_4, -- Added for RT6496912
                               x_return_status     => x_return_status,
                               x_return_message    => x_return_message);
        write_into_file(' After  passing Ids to derive the site use id for Ship To :' ||
                        p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id ||
                        '***' || x_return_status);
      END IF;
      /* End of Added for QC23454 */
      p_prj_cust_rec.prj_cust_tbl(1).ship_to_customer_id := p_customer_id;
    EXCEPTION
      WHEN OTHERS THEN
        x_return_status  := gc_error;
        x_return_message := 'Unhandeled Exception while deriving Site Use ID : ' ||
                            SQLERRM;
        write_into_file(gv_procedure_name || '.' || x_return_message);
    END;
    IF NVL(x_return_status, 'XX') <> gc_error THEN
      IF p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id IS NULL THEN
        IF p_prj_cust_rec.prj_cust_extra.ship_to_address_1 IS NULL AND
           p_prj_cust_rec.prj_cust_extra.ship_to_address_2 IS NULL AND
           p_prj_cust_rec.prj_cust_extra.ship_to_address_3 IS NULL AND
           p_prj_cust_rec.prj_cust_extra.city IS NULL AND
           p_prj_cust_rec.prj_cust_extra.state IS NULL AND
           p_prj_cust_rec.prj_cust_extra.province IS NULL AND
           p_prj_cust_rec.prj_cust_extra.postal_code IS NULL AND
           p_prj_cust_rec.prj_cust_extra.country IS NULL AND
           p_prj_cust_rec.prj_cust_extra.county IS NULL
        --p_prj_cust_rec.prj_cust_extra.building_id        IS NULL
         THEN
          ---Default Ship To address as per defaulting rule
          x_return_status  := gc_success;
          x_return_message := NULL;
          write_into_file(' Use Default Ship to as per defaulting rule');
        ELSE
          --Did not find address information from IDs/Number
          --Create the ship to by passing address info
          write_into_file(' As shipto site use not found so passing addresses for creation');
          BEGIN
            create_shipto_site(p_site_code                 => p_site_code,
                               p_execution_mode            => 'MATCH_CREATE',
                               p_prj_cust_rec              => p_prj_cust_rec,
                               x_create_cust_site_rec_type => x_create_cust_site_rec_type,
                               x_cust_site_use_rec         => x_cust_site_use_rec
                               -- x_return_status             =>  x_return_status,
                               -- x_return_message            =>  x_return_message
                               );
          EXCEPTION
            WHEN OTHERS THEN
              x_return_status  := gc_error;
              x_return_message := 'Unhandeled Exception while creating Ship To Site : ' ||
                                  SQLERRM;
              write_into_file(gv_procedure_name || '.' || x_return_message);
          END;
          write_into_file(' After SHip to creation:' ||
                          x_create_cust_site_rec_type.x_ret_code);
          IF x_create_cust_site_rec_type.x_ret_code =
             fnd_api.g_ret_sts_success THEN
            IF x_create_cust_site_rec_type.x_processing_status =
               'SUCCESS_LOCATION_FOUND'
            --AND p_prj_cust_rec.prj_cust_extra.building_id IS NOT NULL
             THEN
              -- SHIP TO address is already created but building id not updated so update the building id on site use level
              -- write a code to update site use with building id
              IF p_prj_cust_rec.prj_cust_extra.building_id IS NOT NULL THEN
                SELECT attribute4
                  INTO l_db_attribute4
                  FROM hz_cust_site_uses
                 WHERE site_use_id = x_cust_site_use_rec.site_use_id;
                write_into_file('Partner has passed Building ID : ' ||
                                p_prj_cust_rec.prj_cust_extra.building_id);
                write_into_file('Database has Building ID : ' ||
                                l_db_attribute4);
                IF p_prj_cust_rec.prj_cust_extra.building_id <>
                   l_db_attribute4 AND l_db_attribute4 IS NOT NULL THEN
                  x_return_status  := gc_error;
                  x_return_message := 'Mismatch in Building ID. Oracle R12 BuildingID:' ||
                                      l_db_attribute4 ||
                                      ' and Partner Building ID :' ||
                                      p_prj_cust_rec.prj_cust_extra.building_id;
                ELSE
                  UPDATE hz_cust_site_uses
                     SET attribute4 = p_prj_cust_rec.prj_cust_extra.building_id
                   WHERE site_use_id = x_cust_site_use_rec.site_use_id;
                  /*                        begin
                  select cust_account_id into  p_prj_cust_rec.prj_cust_tbl (1).ship_to_customer_id
                  from hz_cust_acct_sites_all where cust_acct_site_id = x_cust_site_use_rec.cust_acct_site_id;
                  exception
                  when others then
                  null;
                  end;
                  */
                  p_prj_cust_rec.prj_cust_tbl(1).ship_to_address_id := x_cust_site_use_rec.cust_acct_site_id;
                  p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id := x_cust_site_use_rec.site_use_id;
                  --g_agr_rec.g_prj_tbl(1).g_prj_cust_rec.prj_cust_extra.ship_to_party_site_id      := x_cust_site_use_rec.party_site_id;
                  x_return_status  := gc_success;
                  x_return_message := NULL;
                  COMMIT;
                  write_into_file('Write a code to update the building ID in attribute 4');
                END IF;
                --IF p_prj_cust_rec.prj_cust_extra.building_id <> l_db_attribute4 AND l_db_attribute4 IS NOT NULL
              ELSE
                /*
                begin
                select cust_account_id into  p_prj_cust_rec.prj_cust_tbl (1).ship_to_customer_id
                from hz_cust_acct_sites_all where cust_acct_site_id = x_cust_site_use_rec.cust_acct_site_id;
                exception
                when others then
                null;
                end;
                */
                p_prj_cust_rec.prj_cust_tbl(1).ship_to_address_id := x_cust_site_use_rec.cust_acct_site_id;
                p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id := x_cust_site_use_rec.site_use_id;
                x_return_status := gc_success;
                x_return_message := NULL;
              END IF;
              --IF p_prj_cust_rec.prj_cust_extra.building_id IS NOT NULL THEN
            ELSE
              --In case new Ship to created
              /*
              begin
              select cust_account_id into  p_prj_cust_rec.prj_cust_tbl (1).ship_to_customer_id
              from hz_cust_acct_sites_all where cust_acct_site_id = x_cust_site_use_rec.cust_acct_site_id;
              exception
              when others then
              null;
              end;
              */
              p_prj_cust_rec.prj_cust_tbl(1).ship_to_address_id := x_cust_site_use_rec.cust_acct_site_id;
              p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id := x_cust_site_use_rec.site_use_id;
              x_return_status := gc_success;
              x_return_message := NULL;
            END IF;
            --IF x_create_cust_site_rec_type.x_processing_status = 'SUCCESS_LOCATION_FOUND'
          ELSE
            write_into_file('There might be some issue in Ship to Creation/Match');
            write_into_file('Global SHip to error ' ||
                            x_create_cust_site_rec_type.x_processing_status);
            x_return_status  := gc_error;
            x_return_message := x_create_cust_site_rec_type.x_ret_message;
          END IF;
          --IF x_create_cust_site_rec_type.x_ret_code = FND_API.G_RET_STS_SUCCESS THEN
        END IF;
        write_into_file(' AFTER create_shipto_site status/msg ' ||
                        x_return_status || '***' || x_return_message);
      ELSE
        --IF p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id IS NULL THEN
        --Means ship to site use Found by passing ids/number
        -- Check the passing ship to address in XML if passed Vs. Oracle Ship to Address
        write_into_file(' Shipto site use FOUND....Still checking address information');
        IF NVL(g_address_validation, 'N') = 'Y' AND
           (p_prj_cust_rec.prj_cust_extra.ship_to_address_1 IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.ship_to_address_2 IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.ship_to_address_3 IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.city IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.state IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.province IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.postal_code IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.country IS NOT NULL OR
            p_prj_cust_rec.prj_cust_extra.county IS NOT NULL) THEN
          write_into_file(' Now calling global ship to procedure to check if passing address is same or differnt from oracle');
          BEGIN
            create_shipto_site(p_site_code                 => p_site_code,
                               p_execution_mode            => 'MATCH_ONLY',
                               p_prj_cust_rec              => p_prj_cust_rec,
                               x_create_cust_site_rec_type => x_create_cust_site_rec_type,
                               x_cust_site_use_rec         => x_cust_site_use_rec);
          EXCEPTION
            WHEN OTHERS THEN
              x_return_status  := gc_error;
              x_return_message := 'Unhandle Exception in create_shipto_site' ||
                                  SQLERRM;
          END;
          write_into_file(' AFTER calling global ship to procedure to check if passing is same or differnt' ||
                          x_cust_site_use_rec.site_use_id || '***' ||
                          x_create_cust_site_rec_type.x_ret_code || '***' ||
                          x_create_cust_site_rec_type.x_processing_status);
          IF x_create_cust_site_rec_type.x_ret_code =
             fnd_api.g_ret_sts_success AND x_create_cust_site_rec_type.x_processing_status =
             'SUCCESS_LOCATION_FOUND' THEN
            -- SHIP TO address is already created as per partner ship to address
            -- Check if SIte Use ID is same for ship to address Vs ID
            --x_cust_site_use_rec.site_use_id -> by passing ship to address
            --p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id -> by passing id
            IF x_cust_site_use_rec.site_use_id =
               p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id THEN
              -- Both ID same means good to go with site use id
              x_return_status  := gc_success;
              x_return_message := NULL;
            ELSE
              -- Passing SHip to address is different then derived from Oracle using id
              x_return_status  := gc_error;
              x_return_message := 'Partner Ship-To Address is different than Oracle R12 Address....';
            END IF;
          ELSE
            -- Passing SHip to address is different then derived from Oracle using building id
            x_return_status  := gc_error;
            x_return_message := 'Partner Ship-To Address not found in Oracle R12 Address....';
          END IF;
          --IF x_create_cust_site_rec_type.x_ret_code = FND_API.G_RET_STS_SUCCESS AND x_create_cust_site_rec_type.x_processing_status = 'SUCCESS_LOCATION_FOUND' THEN
        ELSE
          --No need to check the address information as partner is passing Ids only
          write_into_file(' Shipto site use FOUND with IDs....No need to check address');
          x_return_status  := gc_success;
          x_return_message := NULL;
        END IF;
        --IF NVL(p_prj_cust_rec.prj_cust_extra.ship_to_address_1, p_prj_cust_rec.prj_cust_extra.ship_to_address_2) IS NOT NULL
      END IF;
      --IF p_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id IS NULL THEN
    END IF; --IF NVL(x_return_status,'XX') <> gc_error
    write_into_file('derive_cust_shipto_id Final Status : ' ||
                    x_return_status || '---------' || x_return_message);
  EXCEPTION
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := 'Unhandeled Exception .' || SQLERRM;
	  log_error_clob('Ship To Address Error(7):'||x_return_message);--Added for CR25364
      write_into_file(gv_procedure_name || '.' || x_return_message);
  END derive_cust_shipto_id;
  /*
  ** Procedure Name  : init_apps
  ** Purpose:  For Initliaze the Apps variable
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  */
  PROCEDURE init_apps(p_organization_id IN NUMBER,
                      p_org_id          OUT NUMBER,
                      x_return_status   OUT VARCHAR2,
                      x_return_message  OUT VARCHAR2) IS
    l_user_id           fnd_user.user_id%TYPE;
    l_responsibility_id fnd_responsibility_vl.responsibility_id%TYPE;
    l_application_id    fnd_responsibility_vl.application_id%TYPE;
    l_return_status     VARCHAR2(100);
    l_msg_data          VARCHAR2(4000);
    ln_count            NUMBER;
  BEGIN
    gv_procedure_name := 'init_apps';
    gv_poo            := 'Start';
    x_return_status   := 'SUCCESS';
    write_into_file(gv_procedure_name || '.' || gv_poo);
    write_into_file('Organization_id : ' || p_organization_id);
    IF p_organization_id IS NULL THEN
      x_return_message := 'Organization ID Must pass to get Apps Init ';
	  log_error_clob('Initialize Session(1):'||x_return_message);--Added for CR25364
      gv_poo           := x_return_message;
      x_return_status  := gc_error;
    ELSE
      BEGIN
        SELECT org.operating_unit
          INTO p_org_id
          FROM org_organization_definitions org
         WHERE org.organization_id = p_organization_id;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          SELECT hoi2.org_information1
            INTO p_org_id
            FROM hr_all_organization_units   haou,
                 hr_organization_information hoi1,
                 hr_organization_information hoi2
           WHERE haou.organization_id = p_organization_id
             AND hoi1.organization_id = haou.organization_id
             AND upper(hoi1.org_information_context) = 'CLASS'
             AND upper(hoi1.org_information1) = 'PA_EXPENDITURE_ORG'
             AND upper(hoi1.org_information2) = 'Y'
             AND hoi2.organization_id = haou.organization_id
             AND upper(hoi2.org_information_context) =
                 'EXP ORGANIZATION DEFAULTS';
        WHEN OTHERS THEN
          NULL;
      END;
      gv_poo := 'Deriving Responsibility';
      xxont_common_utility_pkg.xx_get_apps_init_params(p_rice_id             => gc_interface_name,
                                                       p_user_id             => l_user_id,
                                                       p_responsibility_id   => l_responsibility_id,
                                                       p_resp_application_id => l_application_id,
                                                       p_process_flag        => l_return_status,
                                                       p_error_message       => x_return_message);
      IF (l_responsibility_id IS NULL) THEN
        x_return_message := 'Responsibility Not Found ' || x_return_message;
		log_error_clob('Initialize Session(2):'||x_return_message);--Added for CR25364
        gv_poo           := x_return_message;
        x_return_status  := gc_error;
      ELSE
        gv_poo := 'Initialize the Apps Variable';
        write_into_file('User Init :' || l_user_id || '.' ||
                        l_responsibility_id || '.' || l_application_id || '.' ||
                        p_org_id);
        --Initializing the Apps environment
        FND_GLOBAL.APPS_INITIALIZE(l_user_id,
                                   l_responsibility_id,
                                   l_application_id);
        MO_GLOBAL.INIT('PA');
        MO_GLOBAL.SET_POLICY_CONTEXT('S', p_org_id);
        pa_interface_utils_pub.set_global_info(p_api_version_number     => gc_api_version_number,
                                               p_responsibility_id      => l_responsibility_id,
                                               p_user_id                => l_user_id,
                                               p_resp_appl_id           => l_application_id,
                                               p_advanced_proj_sec_flag => 'N',
                                               p_calling_mode           => 'AMG',
                                               p_operating_unit_id      => p_org_id,
                                               p_msg_count              => ln_count,
                                               p_msg_data               => l_msg_data,
                                               p_return_status          => l_return_status);
        write_into_file('User Init Status :' || l_user_id || '.' ||
                        l_responsibility_id || '.' || l_application_id || '.' ||
                        l_return_status);
        write_into_file('Org ID Profile :' || fnd_profile.value('ORG_ID'));

        write_into_file('Global Org ID Profile :' || fnd_global.ORG_ID);
      END IF;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := gv_procedure_name || '.' || gv_poo || '.' ||
                          SQLERRM;
	  log_error_clob('Initialize Session(3):'||SQLERRM);--Added for CR25364
      write_into_file(x_return_message);
  END init_apps;
  /*
  ** Procedure Name  : derive_values
  ** Purpose:  For Deriving the  values and validation
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  ** 09-Sep-14            Vipul Gosai      CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
  ** 30-Oct-14            Vipul Gosai      HPQC:14659
  */
  PROCEDURE derive_values(x_return_status  OUT VARCHAR2,
                          x_return_message OUT VARCHAR2) IS
    e_dervation_err EXCEPTION;
    l_bill_to        VARCHAR2(100) := 'BILL_TO';
    l_ship_to        VARCHAR2(100) := 'SHIP_TO';
    l_agr_err        VARCHAR(4000);
    l_prj_err        VARCHAR(4000);
    l_err_flag       VARCHAR2(1) := 'N';
    l_prj_err_flag   VARCHAR2(1) := 'N';
    l_proj_role_type pa_proj_role_types_v.project_role_type%TYPE;
    --CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
    l_proj_role_type_c VARCHAR(4000);
    --CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
    l_customer_id                  hz_cust_accounts.cust_account_id%TYPE;
    l_customer_num                 hz_cust_accounts.account_number%TYPE;
    l_dummy_buiding_id             VARCHAR2(100);
    l_term_id                      NUMBER;
    l_cost_budget_resource_list_id NUMBER; -- Added as part of Phase 3B
    l_rev_budget_resource_list_id  NUMBER; -- Added as part of Phase 3B
    l_cost_budget_entry_code       VARCHAR2(200); -- Added as part of Phase 3B
    l_rev_budget_entry_code        VARCHAR2(200); -- Added as part of Phase 3B
    l_task_customer_id             NUMBER; -- Added as part of Phase 3B
    l_task_address_id              NUMBER; -- Added as part of Phase 3B
    l_business_class_category      pa_project_classes.class_category%type := 'Business Offering';
    l_business_offering            pa_project_classes.class_code%type;
    l_count                        number := 0; --Added for CR9339
  BEGIN
    gv_procedure_name := 'derive_values';
    gv_poo            := 'Start';
    l_agr_err         := 'Agreement# :' ||g_agr_rec.agr_main_rec.agreement_num || ' Error :';
    x_return_status   := NULL;
    write_into_file('Start Derive Values ');
    ---**************Start Derivation at Agreement Level***************----
    gv_poo := 'Derive details from Agreement level if already exists';
    BEGIN
      SELECT NVL(g_agr_rec.agr_main_rec.agreement_id, pa.agreement_id),
             DECODE(g_agr_rec.agr_extra_rec.pm_product_code,
                    pa.pm_product_code,
                    NULL,
                    pa.owning_organization_id),
             decode(g_allow_soldto_cust_change, 'Y', NULL, pa.customer_id),
             --owned_by_person_id,-- Commented for QC 19004
             pa.term_id,
             pa.agreement_type,
             pa.revenue_limit_flag, -- Added for HPQC19180
             pa.invoice_limit_flag, -- Added for HPQC19180
             NVL(pa.pm_product_code,
                 g_agr_rec.agr_extra_rec.pm_product_code) -- Added nvl condition for RT6754084
        INTO g_agr_rec.agr_main_rec.agreement_id,
             g_agr_rec.agr_main_rec.owning_organization_id,
             g_agr_rec.agr_main_rec.customer_id,
             --g_agr_rec.agr_main_rec.owned_by_person_id,-- Commented for QC 19004
             g_agr_rec.agr_main_rec.term_id,
             g_agr_rec.agr_main_rec.agreement_type,
             g_agr_rec.agr_main_rec.revenue_limit_flag, -- Added for HPQC19180
             g_agr_rec.agr_main_rec.invoice_limit_flag, -- Added for HPQC19180
             g_agr_pm_product_code --Added for HPQC22755
      --g_agr_rec.agr_extra_rec.pm_product_code -- Added for CR22926
        FROM pa_agreements_all pa --,hz_cust_accounts hca --Commented by RT7358717
       WHERE pa.agreement_num = g_agr_rec.agr_main_rec.agreement_num;
      /*AND pa.agreement_type = NVL(g_agr_rec.agr_main_rec.agreement_type,pa.agreement_type)
      AND hca.cust_account_id = pa.customer_id
      AND hca.account_number = NVL(g_agr_rec.agr_main_rec.customer_num,hca.account_number); --Modified by Joydeb as per RT7196623. agreement type and customer number condition added.*/ --Commented by Joydeb as per RT7358717
      write_into_file('Agreement Owner Person Id :' ||
                      g_agr_rec.agr_main_rec.owned_by_person_id);
      g_agr_rec.agr_extra_rec.pm_product_code := g_agr_pm_product_code;
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        write_into_file('New Agreement : ' ||
                        g_agr_rec.agr_main_rec.agreement_num);
      WHEN OTHERS THEN
        x_return_message := 'Exception in Existing Agreement Information :' ||
                            g_agr_rec.agr_main_rec.agreement_num || '.' ||
                            SQLERRM;
		log_error_clob('Derive Values(1):'||x_return_message);--Added for CR25364
        x_return_status  := gc_error;
    END;

    IF NVL(x_return_status, 'XX') = gc_error THEN
      l_agr_err  := l_agr_err || CHR(13) || '.' || x_return_message;
      l_err_flag := 'Y';
      --raise e_dervation_err;
    END IF;
    gv_poo := 'Derive Organization ID from Organization code at Agreement level';
    -- Derive Organization_id
    x_return_status := NULL;
    write_into_file('Derive Organization Id-Code ' ||
                    g_agr_rec.agr_main_rec.owning_organization_id || '-' ||
                    g_agr_rec.agr_extra_rec.owning_organization_code);
    BEGIN
      IF g_agr_rec.agr_main_rec.agreement_id IS NULL OR g_partner_proj_update_allow = 'Y' OR g_agr_rec.agr_main_rec.owning_organization_id IS NULL THEN
        -- HPQC:14659 Don't check for existing agreement. Ignore Partner value
        derive_organization_idcd(p_organization_code => g_agr_rec.agr_extra_rec.owning_organization_code,
                                 p_organization_name => g_agr_rec.agr_extra_rec.owning_organization_name,
                                 p_organization_id   => g_agr_rec.agr_main_rec.owning_organization_id,
                                 x_return_status     => x_return_status,
                                 x_return_message    => x_return_message);
        -- Added for RT7010726
        IF x_return_status = gc_error THEN
          x_return_message := 'Agreement Organization Derivation Error : ' ||
                              x_return_message;
        END IF;
        --End of added for RT7010726
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        x_return_message := 'Exception Agreement Organization Derivation :' ||
                            SQLERRM;
		log_error_clob('Derive Values(2):'||x_return_message);--Added for CR25364
        x_return_status  := gc_error;
    END;
    IF NVL(x_return_status, 'XX') = gc_error THEN
      l_agr_err  := l_agr_err || CHR(13) || '.' || x_return_message;
      l_err_flag := 'Y';
      --raise e_dervation_err;
    END IF;
    -- Derive customer id
    x_return_status := NULL;
    BEGIN
      IF g_agr_rec.agr_main_rec.agreement_id IS NULL OR
         g_partner_proj_update_allow = 'Y' THEN
        -- HPQC:14659 Don't check for existing agreement. Ignore Partner value
        derive_cust_idnum(p_customer_number => g_agr_rec.agr_main_rec.customer_num,
                          p_customer_id     => g_agr_rec.agr_main_rec.customer_id,
                          x_return_status   => x_return_status,
                          x_return_message  => x_return_message);
        -- Added for RT7010726
        IF x_return_status = gc_error THEN
          x_return_message := 'Agreement Customer Derivation Error : ' ||
                              x_return_message;
        END IF;
        --End of added for RT7010726
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        x_return_message := 'Exception Agreement Customer Derivation :' ||
                            SQLERRM;
		log_error_clob('Derive Values(3):'||x_return_message);--Added for CR25364
        x_return_status  := gc_error;
    END;
    IF NVL(x_return_status, 'XX') = gc_error THEN
      l_agr_err  := l_agr_err || CHR(13) || '.' || x_return_message;
      l_err_flag := 'Y';
      --raise e_dervation_err;
    END IF;
    -- Initliaze the Apps variable, so that OU specific values can be derived
    x_return_status := NULL;
    BEGIN
      gv_poo := 'Apps Initliazation';
      init_apps(p_organization_id => g_agr_rec.agr_main_rec.owning_organization_id,
                p_org_id          => g_org_id,
                x_return_status   => x_return_status,
                x_return_message  => x_return_message);
      write_into_file('In Loop apps init status ' || g_org_id ||
                      x_return_status);
      -- Added for RT7010726
      IF x_return_status = gc_error THEN
        x_return_message := 'Apps Session Initialization Error : ' ||
                            x_return_message;
      END IF;
      --End of added for RT7010726
    EXCEPTION
      WHEN OTHERS THEN
        x_return_message := 'Exception Apps Session Initialization : ' ||
                            SQLERRM;
		log_error_clob('Derive Values(4):'||x_return_message);--Added for CR25364
        x_return_status  := gc_error;
    END;
    IF NVL(x_return_status, 'XX') = gc_error THEN
      l_agr_err  := l_agr_err || CHR(13) || '.' || x_return_message;
      l_err_flag := 'Y';
      --raise e_dervation_err;
    END IF;
    gv_poo          := 'Derive Employee ID from Employee Number At Agreement Level';
    x_return_status := NULL;

    write_into_file('Test g_agr_rec.agr_main_rec.agreement_id :' ||g_agr_rec.agr_main_rec.agreement_id||': g_partner_proj_update_allow - '||g_partner_proj_update_allow);
    BEGIN
      IF g_agr_rec.agr_main_rec.agreement_id IS NULL OR
         g_partner_proj_update_allow = 'Y' THEN
        -- HPQC:14659 Don't check for existing agreement. Ignore Partner value
        derive_employee_idnum(p_employee_no    => g_agr_rec.agr_extra_rec.owned_by_person_number,
                              p_person_id      => g_agr_rec.agr_main_rec.owned_by_person_id,
                              p_ebs_user_name  => g_agr_rec.agr_extra_rec.ebs_user_name, -- Added as part of Phase 3B
                              x_return_status  => x_return_status,
                              x_return_message => x_return_message);
        write_into_file('In Derive Agreement Owner Person Id :' ||
                        g_agr_rec.agr_main_rec.owned_by_person_id||' : x_return_message - '||x_return_message||':'||x_return_status);
        -- Added for RT7010726
        IF x_return_status = gc_error THEN
          x_return_message := 'Agreement Owner Derivation Error : ' ||
                              x_return_message;
        END IF;
        --End of added for RT7010726
        -- Added for HPQC 19004
      ELSE
        BEGIN
          SELECT owned_by_person_id
            INTO g_agr_rec.agr_main_rec.owned_by_person_id
            FROM pa_agreements_all
           WHERE agreement_id = g_agr_rec.agr_main_rec.agreement_id; --g_agr_rec.agr_main_rec.agreement_num; --Replaced agreement_num with agreement_id by Joydeb as per RT7196623
        EXCEPTION
          WHEN OTHERS THEN
            write_into_file('Exception while deriving Owned by person ID :' ||
                            SQLERRM);
        END;
        -- End of Added for HPQC 19004
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        x_return_message := 'Exception derive_employee_idnum :' || SQLERRM;
        x_return_status  := gc_error;
    END;
    IF NVL(x_return_status, 'XX') = gc_error THEN
      l_agr_err  := l_agr_err || CHR(13) || '.' || x_return_message;
      l_err_flag := 'Y';
      --raise e_dervation_err;
    END IF;
    gv_poo          := 'Derive Payment Term ID';
    x_return_status := NULL;
    write_into_file('Term Id Before Update : ' ||
                    g_agr_rec.agr_main_rec.term_id || chr(10) ||
                    'Project Partner Update Flag : ' ||
                    g_partner_proj_update_allow);
    IF g_agr_rec.agr_main_rec.agreement_id IS NULL OR
       g_partner_proj_update_allow = 'Y' THEN
      write_into_file('Payment Term Name : ' ||
                      g_agr_rec.agr_extra_rec.term_name || chr(10) ||
                      'Payment Term Id : ' ||
                      g_agr_rec.agr_main_rec.term_id);
      IF g_partner_proj_update_allow = 'Y' AND
         g_agr_rec.agr_extra_rec.term_name IS NOT NULL THEN
        BEGIN
          SELECT term_id
            INTO g_agr_rec.agr_main_rec.term_id
            FROM ra_terms
           WHERE UPPER(NAME) = UPPER(g_agr_rec.agr_extra_rec.term_name)
             AND SYSDATE BETWEEN start_date_active AND
                 NVL(end_date_active, SYSDATE + 1); -- Added by Joydeb during Change done for CR7680
        EXCEPTION
          WHEN OTHERS THEN
            x_return_message := 'Exception Payment Term not found for Term :' ||
                                g_agr_rec.agr_extra_rec.term_name ||
                                SQLERRM;
            x_return_status  := gc_error;
        END;
      ELSE
        -- HPQC:14659 Don't check for existing agreement. Ignore Partner value
        IF g_agr_rec.agr_extra_rec.term_name IS NOT NULL AND
           g_agr_rec.agr_main_rec.term_id IS NULL THEN
          BEGIN
            SELECT term_id
              INTO g_agr_rec.agr_main_rec.term_id
              FROM ra_terms
             WHERE UPPER(NAME) = UPPER(g_agr_rec.agr_extra_rec.term_name)
               AND SYSDATE BETWEEN start_date_active AND
                   NVL(end_date_active, SYSDATE + 1); -- Added by Joydeb during Change done for CR7680
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              x_return_message := 'Payment Term not found for Term Name :' ||
                                  g_agr_rec.agr_extra_rec.term_name;
			  log_error_clob('Derive Values(5):'||x_return_message);--Added for CR25364
              x_return_status  := gc_error;
              --raise e_dervation_err;
            WHEN OTHERS THEN
              x_return_message := 'Exception Payment Term not found for Term :' ||
                                  g_agr_rec.agr_extra_rec.term_name ||
                                  SQLERRM;
			  log_error_clob('Derive Values(6):'||x_return_message);--Added for CR25364
              x_return_status  := gc_error;
              --raise e_dervation_err;
          END;
        ELSIF g_agr_rec.agr_extra_rec.term_name IS NULL AND
              g_agr_rec.agr_main_rec.term_id IS NULL THEN
          x_return_message := 'Payment Term is Mandatory At Agreement Level';
          x_return_status  := gc_error;
		  log_error_clob('Derive Values(7):'||x_return_message);--Added for CR25364
        END IF; --IF p_agr_rec.agr_extra_rec.term_name IS NOT NULL THEN
      END IF;
    ELSE
      write_into_file('Payment Term Name : ' ||
                      g_agr_rec.agr_extra_rec.term_name);
      IF g_agr_rec.agr_extra_rec.term_name IS NOT NULL THEN
        BEGIN
          SELECT term_id
            INTO l_term_id
            FROM ra_terms
           WHERE UPPER(NAME) = UPPER(g_agr_rec.agr_extra_rec.term_name)
             AND SYSDATE BETWEEN start_date_active AND
                 NVL(end_date_active, SYSDATE + 1); -- Added by Joydeb during Change done for CR7680
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            x_return_message := 'Payment Term not found for Term Name :' ||
                                g_agr_rec.agr_extra_rec.term_name;
			log_error_clob('Derive Values(8):'||x_return_message);--Added for CR25364
            x_return_status  := gc_error;
          WHEN OTHERS THEN
            x_return_message := 'Exception Payment Term not found for Term :' ||
                                g_agr_rec.agr_extra_rec.term_name ||
                                SQLERRM;
			log_error_clob('Derive Values(9):'||x_return_message);--Added for CR25364
            x_return_status  := gc_error;
        END;
        IF l_term_id <> g_agr_rec.agr_main_rec.term_id THEN
          g_agr_rec.agr_main_rec.term_id := l_term_id;
        END IF;
      END IF;
    END IF;
    --END IF;
    write_into_file('Term Id After Update : ' ||
                    g_agr_rec.agr_main_rec.term_id);
    IF NVL(x_return_status, 'XX') = gc_error THEN
      l_agr_err  := l_agr_err || CHR(13) || '.' || x_return_message;
      l_err_flag := 'Y';
      --raise e_dervation_err;
    END IF;
    gv_poo          := 'Fetching invoice_limit_flag, revenue_limit_flag from Agreement Type';
    x_return_status := NULL;
    IF g_agr_rec.agr_main_rec.agreement_id IS NULL OR
       g_partner_proj_update_allow = 'Y' THEN
      -- HPQC:14659 Don't check for existing agreement. Ignore Partner value
      IF g_agr_rec.agr_main_rec.agreement_type IS NOT NULL AND
         g_agr_rec.agr_main_rec.agreement_id IS NULL -- Added for HPQC19180
       THEN
        /* Added for HPQC21731*/
        BEGIN
          SELECT NVL(g_agr_rec.agr_main_rec.invoice_limit_flag,
                     invoice_limit_flag),
                 NVL(g_agr_rec.agr_main_rec.revenue_limit_flag,
                     revenue_limit_flag)
            INTO g_agr_rec.agr_main_rec.invoice_limit_flag,
                 g_agr_rec.agr_main_rec.revenue_limit_flag
            FROM pa_agreements
           WHERE UPPER(agreement_type) =
                 UPPER(g_agr_rec.agr_main_rec.agreement_type)
             AND template_flag = 'Y'
             AND sysdate BETWEEN NVL(start_date, sysdate - 1) AND
                 NVL(expiration_date, sysdate + 1);
          /* End of Added for HPQC21731*/
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            BEGIN
              SELECT NVL(g_agr_rec.agr_main_rec.invoice_limit_flag,
                         revenue_limit_flag), --Added for HPQC19004
                     NVL(g_agr_rec.agr_main_rec.revenue_limit_flag,
                         revenue_limit_flag) --Added for HPQC19004
                INTO g_agr_rec.agr_main_rec.invoice_limit_flag,
                     g_agr_rec.agr_main_rec.revenue_limit_flag
                FROM pa_agreement_types
               WHERE UPPER(agreement_type) =
                     UPPER(g_agr_rec.agr_main_rec.agreement_type);
            EXCEPTION
              WHEN NO_DATA_FOUND THEN
                x_return_message := 'Imvoice Limit Not Found from Agreement Type:' ||
                                    g_agr_rec.agr_main_rec.agreement_type ||
                                    SQLERRM;
				log_error_clob('Derive Values(10):'||x_return_message);--Added for CR25364
                x_return_status  := gc_error;
              WHEN OTHERS THEN
                x_return_message := 'Exception Imvoice Limit Not Found from Agreement Type:' ||
                                    g_agr_rec.agr_main_rec.agreement_type ||SQLERRM;
                log_error_clob('Derive Values(11):'||x_return_message);--Added for CR25364

                x_return_status  := gc_error;
            END;
          WHEN OTHERS THEN
            x_return_message := 'Exception Imvoice Limit Not Found from Agreement Type:' ||
                                g_agr_rec.agr_main_rec.agreement_type ||
                                SQLERRM;
            x_return_status  := gc_error;
        END;
      END IF;
    END IF;
    IF NVL(x_return_status, 'XX') = gc_error THEN
      l_agr_err  := l_agr_err || CHR(13) || '.' || x_return_message;
      l_err_flag := 'Y';
      --raise e_dervation_err;
    END IF;
    ---**************Start Derivation at Project Level***************----
    IF g_agr_rec.g_prj_tbl.COUNT > 0 THEN

      --Project Loop Starts
      FOR p IN 1 .. g_agr_rec.g_prj_tbl.COUNT LOOP
        l_prj_err_flag  := 'N';
        x_return_status := NULL;
        l_prj_err       := CHR(13) || 'Project# ' || g_agr_rec.g_prj_tbl(p)
                          .prj_main_rec.pa_project_number || ' Error :';
        gv_poo          := 'Derive Carrying out Organization ID from Organization code at Project level';
        write_into_file('**************************************Start of New Project : ' ||
                        l_prj_err);
        -- Derive Project ID
        BEGIN
          SELECT project_id,
                 --project_status_code, -- commented by vinod
                 DECODE(g_proj_status_udpate,
                        'Y',
                        NVL(g_agr_rec.g_prj_tbl(p)
                            .prj_main_rec.project_status_code,
                            project_status_code),
                        project_status_code), -- added by vinod
                 NVL(g_agr_rec.g_prj_tbl(p).prj_main_rec.start_date,
                     start_date),
                 NVL(g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date,
                     completion_date),
                 DECODE(g_agr_rec.agr_extra_rec.pm_product_code,
                        pm_product_code,
                        NULL,
                        carrying_out_organization_id),
                 project_status_code
            INTO g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id,
                 g_agr_rec.g_prj_tbl(p).prj_main_rec.project_status_code,
                 g_agr_rec.g_prj_tbl(p).prj_main_rec.start_date,
                 g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date,
                 g_agr_rec.g_prj_tbl(p)
                 .prj_main_rec.carrying_out_organization_id,
                 gv_orig_project_status
            FROM pa_projects_all
           WHERE segment1 = g_agr_rec.g_prj_tbl(p)
                .prj_main_rec.pa_project_number;
          g_prj_pm_product_code := g_agr_pm_product_code; --Added for HPQC22755
          write_into_file('Project Exists - File is for update or duplicate');
          g_process_mode := 'UPDATE';
          write_into_file('Project Number          : ' || g_agr_rec.g_prj_tbl(p)
                          .prj_main_rec.pa_project_number);
          write_into_file('Project Id              : ' || g_agr_rec.g_prj_tbl(p)
                          .prj_main_rec.pa_project_id);
          write_into_file('Project Start Date      : ' || g_agr_rec.g_prj_tbl(p)
                          .prj_main_rec.start_date);
          write_into_file('Test Project Completion Date : ' || g_agr_rec.g_prj_tbl(p)
                          .prj_main_rec.completion_date);
        EXCEPTION
          WHEN TOO_MANY_ROWS THEN
            write_into_file('Project Number should be unique');
            l_prj_err_flag   := 'Y';
            x_return_message := 'Exception Project ID derivation : Project Number should be unique';
            x_return_status  := gc_error;
          WHEN NO_DATA_FOUND THEN
            write_into_file('Project does not exist. Create Project');
            g_process_mode := 'CREATE';
          WHEN OTHERS THEN
            write_into_file('Project does not exist. Create Project');
            g_process_mode := 'CREATE';
        END;
        -- Default Customer ID from Agreement if customer id/number is not passed in the project xml
        IF g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id IS NOT NULL THEN
          BEGIN
            SELECT customer_id
              INTO g_agr_rec.g_prj_tbl(p).prj_main_rec.customer_id
              FROM pa_project_customers
             WHERE project_id = g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id;
          EXCEPTION
            WHEN OTHERS THEN
              write_into_file(' Exception in retrieving Customer id ' ||
                              SQLERRM);
          END;
        END IF;
        IF g_agr_rec.g_prj_tbl(p).prj_main_rec.customer_id IS NULL THEN
          g_agr_rec.g_prj_tbl(p).prj_main_rec.customer_id := g_agr_rec.agr_main_rec.customer_id;
        END IF;
        -- Derive Organization_id
        BEGIN
          write_into_file('Before Derive Org ID : ' || x_return_status);
          derive_organization_idcd(p_organization_code => g_agr_rec.g_prj_tbl(p)
                                                          .prj_extra_rec.carrying_out_organization_code,
                                   p_organization_name => g_agr_rec.g_prj_tbl(p)
                                                          .prj_extra_rec.carrying_out_organization_name,
                                   p_organization_id   => g_agr_rec.g_prj_tbl(p)
                                                          .prj_main_rec.carrying_out_organization_id,
                                   x_return_status     => x_return_status,
                                   x_return_message    => x_return_message);
          write_into_file('After Derive Org ID : ' || x_return_status);
          -- Added for RT7010726
          IF x_return_status = gc_error THEN
            x_return_message := 'Project Organization Derivation Error : ' ||
                                x_return_message;
          END IF;
          --End of added for RT7010726
        EXCEPTION
          WHEN OTHERS THEN
            x_return_message := 'Exception Project Organization Derivation :' ||
                                SQLERRM;
			log_error_clob('Derive Values(13):'||x_return_message);--Added for CR25364
            x_return_status  := gc_error;
            --raise e_dervation_err;
        END;
        IF NVL(x_return_status, 'XX') = gc_error THEN
          l_prj_err       := l_prj_err || CHR(13) || '..' ||
                             x_return_message;
          l_err_flag      := 'Y';
          l_prj_err_flag  := 'Y';
          x_return_status := NULL;
          --raise e_dervation_err;
        END IF;
        gv_poo          := 'Derive Project Type';
        x_return_status := NULL;
        IF g_agr_rec.g_prj_tbl(p)
         .prj_extra_rec.project_type IS NOT NULL AND g_agr_rec.g_prj_tbl(p)
           .prj_extra_rec.project_type_oracle IS NULL THEN
          BEGIN
            derive_project_type(p_project_type_partner         => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.project_type,
                                p_project_type_oracle          => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.project_type_oracle,
                                p_partner_project_status_code  => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_main_rec.project_status_code,
                                p_rev_budget_entry_method_cd   => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.rev_budget_entry_method_cd,
                                p_rev_budget_resource_list_id  => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.rev_budget_resource_list_id,
                                p_cost_budget_entry_method_cd  => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.cost_budget_entry_method_cd,
                                p_cost_budget_resource_list_id => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.cost_budget_resource_list_id,
                                p_prj_type_def_status_code     => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.prj_type_def_status_code,
                                p_enable_project_wf_flag       => g_agr_rec.g_prj_tbl(p)
                                                                  .prj_extra_rec.enable_project_wf_flag,
                                x_return_status                => x_return_status,
                                x_return_message               => x_return_message);
            l_cost_budget_resource_list_id := g_agr_rec.g_prj_tbl(p)
                                              .prj_extra_rec.cost_budget_resource_list_id;
            l_rev_budget_resource_list_id  := g_agr_rec.g_prj_tbl(p)
                                              .prj_extra_rec.rev_budget_resource_list_id;
            l_cost_budget_entry_code       := g_agr_rec.g_prj_tbl(p)
                                              .prj_extra_rec.cost_budget_entry_method_cd;
            l_rev_budget_entry_code        := g_agr_rec.g_prj_tbl(p)
                                              .prj_extra_rec.rev_budget_entry_method_cd;
            write_into_file('after derive_project_type : ' ||
                            x_return_status);
            -- Added for RT7010726
            IF x_return_status = gc_error THEN
              x_return_message := 'Project Template Default Derivation Error : ' ||
                                  x_return_message;
            END IF;
            --End of added for RT7010726
            IF g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id IS NULL THEN
              SELECT baseline_funding_flag
                INTO g_agr_rec.g_prj_tbl(p)
                     .prj_main_rec.baseline_funding_flag
                FROM pa_project_types
               WHERE UPPER(project_type) =
                     UPPER(g_agr_rec.g_prj_tbl(p).prj_extra_rec.project_type);
              write_into_file('Derivation Baseline Funding Flag : ' || g_agr_rec.g_prj_tbl(p)
                              .prj_main_rec.baseline_funding_flag);
            ELSE
              SELECT baseline_funding_flag
                INTO g_agr_rec.g_prj_tbl(p)
                     .prj_main_rec.baseline_funding_flag
                FROM pa_projects
               WHERE project_id = g_agr_rec.g_prj_tbl(p)
                    .prj_main_rec.pa_project_id; --UPPER(project_type) = UPPER(g_agr_rec.g_prj_tbl(p).prj_extra_rec.project_type);
              write_into_file('Derivation Baseline Funding Flag : ' || g_agr_rec.g_prj_tbl(p)
                              .prj_main_rec.baseline_funding_flag);
            END IF;
          EXCEPTION
            WHEN OTHERS THEN
              x_return_message := 'Exception Derive Object Type :' ||
                                  SQLERRM;
			  log_error_clob('Derive Values(14):'||x_return_message);--Added for CR25364
              x_return_status  := gc_error;
          END;
        END IF;
        -- p_agr_rec.g_prj_tbl(p).prj_extra.project_type_partner IS NOT NULL
        IF NVL(x_return_status, 'XX') = gc_error THEN
          l_prj_err       := l_prj_err || CHR(13) || '..' ||
                             x_return_message;
          l_err_flag      := 'Y';
          l_prj_err_flag  := 'Y';
          x_return_status := NULL;
          --raise e_dervation_err;
        END IF;
        gv_poo          := 'Derive Template Name';
        x_return_status := NULL;
        IF g_agr_rec.g_prj_tbl(p)
         .prj_extra_rec.project_type_oracle IS NOT NULL THEN
          BEGIN
            derive_template_name(p_template_name_partner   => g_agr_rec.g_prj_tbl(p)
                                                              .prj_extra_rec.template_name,
                                 p_project_type_oracle     => g_agr_rec.g_prj_tbl(p)
                                                              .prj_extra_rec.project_type_oracle,
                                 p_template_name_oracle    => g_agr_rec.g_prj_tbl(p)
                                                              .prj_extra_rec.template_name_oracle,
                                 p_created_from_project_id => g_agr_rec.g_prj_tbl(p)
                                                              .prj_main_rec.created_from_project_id,
                                 x_return_status           => x_return_status,
                                 x_return_message          => x_return_message);
            write_into_file('After derive_template_name : ' ||
                            x_return_status);
            -- Added for RT7010726
            IF x_return_status = gc_error THEN
              x_return_message := 'Project Template Derivation Error : ' ||
                                  x_return_message;
            END IF;
            --End of added for RT7010726
            IF g_agr_rec.g_prj_tbl(p)
             .prj_main_rec.created_from_project_id IS NOT NULL THEN
              write_into_file('Project Template ID : ' || g_agr_rec.g_prj_tbl(p)
                              .prj_main_rec.created_from_project_id);
              /*select baseline_funding_flag
              into g_agr_rec.g_prj_tbl(p).prj_main_rec.baseline_funding_flag
              from pa_projects
              where project_id = g_agr_rec.g_prj_tbl(p).prj_main_rec.created_from_project_id;
              */
            END IF;
          EXCEPTION
            WHEN OTHERS THEN
              x_return_message := 'Exception Project Template Name Derivation:' ||
                                  SQLERRM;
			  log_error_clob('Derive Values(15):'||x_return_message);--Added for CR25364
              x_return_status  := gc_error;
          END;
        END IF;
        --p_agr_rec.g_prj_tbl(p).prj_extra.project_type_oracle IS NOT NULL
        IF NVL(x_return_status, 'XX') = gc_error THEN
          l_prj_err       := l_prj_err || CHR(13) || '..' ||
                             x_return_message;
          l_err_flag      := 'Y';
          l_prj_err_flag  := 'Y';
          x_return_status := NULL;
          --raise e_dervation_err;
        END IF;
        ---**************Start Derivation at Project Customer Level***************----
        IF g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl.COUNT > 0 THEN
          --Project Loop Starts
          FOR c IN 1 .. g_agr_rec.g_prj_tbl(p)
                        .g_prj_cust_rec.prj_cust_tbl.COUNT LOOP
            --Phase 3B
            -- Derive customer id
            x_return_status := NULL;
            IF g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
             .customer_id IS NULL THEN
              BEGIN
                --Defaulting Customer Number from
                g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_extra.customer_number := NVL(g_agr_rec.g_prj_tbl(p)
                                                                                            .g_prj_cust_rec.prj_cust_extra.customer_number,
                                                                                            g_agr_rec.agr_main_rec.customer_num);
                IF g_agr_rec.g_prj_tbl(p)
                 .g_prj_cust_rec.prj_cust_extra.customer_number IS NULL THEN
                  g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c).customer_id := NVL(g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                                                                           .customer_id,
                                                                                           g_agr_rec.agr_main_rec.customer_id);
                END IF;
                derive_cust_idnum(p_customer_number => g_agr_rec.g_prj_tbl(p)
                                                       .g_prj_cust_rec.prj_cust_extra.customer_number,
                                  p_customer_id     => g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                                       .customer_id,
                                  x_return_status   => x_return_status,
                                  x_return_message  => x_return_message);
                -- Added for RT7010726
                IF x_return_status = gc_error THEN
                  x_return_message := 'Project Customer Derivation Error : ' ||
                                      x_return_message;
                END IF;
                --End of added for RT7010726
              EXCEPTION
                WHEN OTHERS THEN
                  x_return_message := 'Exception Project Customer Derivation :' ||
                                      SQLERRM;
				  log_error_clob('Derive Values(16):'||x_return_message);--Added for CR25364
                  x_return_status  := gc_error;
              END;
              IF NVL(x_return_status, 'XX') = gc_error THEN
                l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                   x_return_message;
                l_err_flag      := 'Y';
                l_prj_err_flag  := 'Y';
                x_return_status := NULL;
                --raise e_dervation_err;
              END IF;
            END IF;
            --End of Phase 3B
            gv_poo             := 'Derive BILL To Customer Details';
            x_return_status    := NULL;
            l_customer_id      := NULL;
            l_customer_num     := NULL;
            l_dummy_buiding_id := NULL;
            BEGIN

              IF g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number IS NULL AND g_agr_rec.g_prj_tbl(p)
                 .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id IS NULL AND g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                 .bill_to_address_id IS NULL THEN
                l_customer_id  := NVL(g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .bill_to_customer_id,
                                      g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .customer_id);
                l_customer_num := NVL(g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.bill_to_customer_number,
                                      g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.customer_number);
              END IF;
              derive_cust_siteuse_id(p_customer_number   => l_customer_num,
                                     p_customer_id       => l_customer_id,
                                     p_cust_acct_site_id => g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                                            .bill_to_address_id,
                                     p_party_id          => g_agr_rec.g_prj_tbl(p)
                                                            .g_prj_cust_rec.prj_cust_extra.bill_to_party_id,
                                     p_party_site_id     => g_agr_rec.g_prj_tbl(p)
                                                            .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id,
                                     p_party_site_number => g_agr_rec.g_prj_tbl(p)
                                                            .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number,
                                     p_site_code         => l_bill_to,
                                     p_site_use_id       => g_agr_rec.g_prj_tbl(p)
                                                            .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_use_id,
                                     p_building_id       => l_dummy_buiding_id, -- no need to pass the building id for BillTo
                                     p_address_line_1    => NULL, -- Added for RT6496912
                                     p_address_line_4    => NULL, -- Added for RT6496912
                                     x_return_status     => x_return_status,
                                     x_return_message    => x_return_message);
              write_into_file('After derive_cust_siteuse_id : ' ||
                              x_return_status || chr(10) ||
                              'l_customer_id ' || l_customer_id || chr(10) ||
                              'l_customer_num ' || l_customer_num);
              write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number ' || g_agr_rec.g_prj_tbl(p)
                              .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number);
              write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id ' || g_agr_rec.g_prj_tbl(p)
                              .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id);
              write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_tbl(c).bill_to_address_id ' || g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                              .bill_to_address_id);
              /* Added for QC23454 */
              IF NVL(x_return_status, 'XX') = gc_error AND
                 l_customer_id IS NULL AND l_customer_num IS NULL THEN
                l_customer_id  := NVL(g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .bill_to_customer_id,
                                      g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .customer_id);
                l_customer_num := NVL(g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.bill_to_customer_number,
                                      g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.customer_number);
                derive_cust_siteuse_id(p_customer_number   => l_customer_num,
                                       p_customer_id       => l_customer_id,
                                       p_cust_acct_site_id => g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                                              .bill_to_address_id,
                                       p_party_id          => g_agr_rec.g_prj_tbl(p)
                                                              .g_prj_cust_rec.prj_cust_extra.bill_to_party_id,
                                       p_party_site_id     => g_agr_rec.g_prj_tbl(p)
                                                              .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id,
                                       p_party_site_number => g_agr_rec.g_prj_tbl(p)
                                                              .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number,
                                       p_site_code         => l_bill_to,
                                       p_site_use_id       => g_agr_rec.g_prj_tbl(p)
                                                              .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_use_id,
                                       p_building_id       => l_dummy_buiding_id, -- no need to pass the building id for BillTo
                                       p_address_line_1    => NULL, -- Added for RT6496912
                                       p_address_line_4    => NULL, -- Added for RT6496912
                                       x_return_status     => x_return_status,
                                       x_return_message    => x_return_message);
                write_into_file('After derive_cust_siteuse_id : ' ||
                                x_return_status || chr(10) ||
                                'l_customer_id ' || l_customer_id ||
                                chr(10) || 'l_customer_num ' ||
                                l_customer_num);
                write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number ' || g_agr_rec.g_prj_tbl(p)
                                .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_number);
                write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id ' || g_agr_rec.g_prj_tbl(p)
                                .g_prj_cust_rec.prj_cust_extra.bill_to_party_site_id);
                write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_tbl(c).bill_to_address_id ' || g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                .bill_to_address_id);
              END IF;
              /* End of Added for QC23454 */
            EXCEPTION
              WHEN OTHERS THEN
                x_return_message := 'Exception derive_cust_siteuse_id ' ||
                                    gv_poo || '.' || SQLERRM;
				log_error_clob('Derive Values(17):'||x_return_message);--Added for CR25364
                x_return_status  := gc_error;
            END;
            IF NVL(x_return_status, 'XX') = gc_error THEN
              l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                 x_return_message;
              l_err_flag      := 'Y';
              l_prj_err_flag  := 'Y';
              x_return_status := NULL;
              --raise e_dervation_err;
            END IF;
            -- Default few values at project customer level
            g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_extra.bill_to_customer_number := l_customer_num;
            --g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_extra.customer_number := l_customer_num;
            --Commented as part of Phase 3B
            g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c).bill_to_customer_id := NVL(l_customer_id,
                                                                                             g_agr_rec.agr_main_rec.customer_id);
            --g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_tbl(c).customer_id := NVL (l_customer_id, g_agr_rec.agr_main_rec.customer_id);
            --Commented as part of Phase 3B
            g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c).project_relationship_code := NVL(g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                                                                                   .project_relationship_code,
                                                                                                   'PRIMARY');
            g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c).customer_bill_split := NVL(g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                                                                             .customer_bill_split,
                                                                                             100);
            --Assignment of Customer ID and Relationship Code at Project level from Project Customer Level
            --g_agr_rec.g_prj_tbl (p).prj_main_rec.customer_id := g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_tbl (c).customer_id;
            g_agr_rec.g_prj_tbl(p).prj_main_rec.project_relationship_code := NVL(g_agr_rec.g_prj_tbl(p)
                                                                                 .prj_main_rec.project_relationship_code,
                                                                                 'PRIMARY');
            gv_poo := 'Derive Ship To Customer Details';
            x_return_status := NULL;
            --                        IF g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_extra.ship_to_customer_number IS NULL AND
            --                           g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c).ship_to_address_id IS NULL AND
            --                           g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_extra.ship_to_party_site_id IS NULL AND
            --                           g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_extra.ship_to_party_site_use_id IS NULL THEN
            --                             -- Ship To does not exists in Oracle. Create New Ship To
            --                             NULL;
            --
            --                        ELSE -- Derive the Ship To information from passing values
            BEGIN
              l_customer_id  := NULL;
              l_customer_num := NULL;
              write_into_file('Ship To Customer ID : ' || g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                              .ship_to_customer_id);
              write_into_file('Ship To Customer Number : ' || g_agr_rec.g_prj_tbl(p)
                              .g_prj_cust_rec.prj_cust_extra.ship_to_customer_number);
              write_into_file('' || g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                              .ship_to_customer_id);
              IF g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
               .SHIP_TO_ADDRESS_ID IS NULL AND g_agr_rec.g_prj_tbl(p)
                 .g_prj_cust_rec.prj_cust_extra.ship_to_customer_number IS NULL AND g_agr_rec.g_prj_tbl(p)
                 .g_prj_cust_rec.prj_cust_extra.ship_to_party_id IS NULL AND g_agr_rec.g_prj_tbl(p)
                 .g_prj_cust_rec.prj_cust_extra.SHIP_TO_PARTY_SITE_ID IS NULL AND g_agr_rec.g_prj_tbl(p)
                 .g_prj_cust_rec.prj_cust_extra.SHIP_TO_PARTY_SITE_USE_ID IS NULL AND g_agr_rec.g_prj_tbl(p)
                 .g_prj_cust_rec.prj_cust_extra.SHIP_TO_PARTY_SITE_NUMBER IS NULL THEN
                l_customer_id  := NVL(g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .bill_to_customer_id,
                                      g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .customer_id);
                l_customer_num := NVL(g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.ship_to_customer_number,
                                      g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.customer_number);
              END IF;
              write_into_file('Before derive_cust_siteuse_id  : ' ||
                              x_return_status);
              IF l_customer_id IS NULL AND l_customer_num IS NULL THEN
                l_customer_id  := NVL(g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .customer_id,
                                      g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                      .ship_to_customer_id);
                l_customer_num := NVL(g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.customer_number,
                                      g_agr_rec.g_prj_tbl(p)
                                      .g_prj_cust_rec.prj_cust_extra.ship_to_customer_number);
              END IF;
              derive_cust_shipto_id(p_customer_number => l_customer_num,
                                    p_customer_id     => l_customer_id,
                                    p_site_code       => l_ship_to,
                                    p_prj_cust_rec    => g_agr_rec.g_prj_tbl(p)
                                                         .g_prj_cust_rec,
                                    x_return_status   => x_return_status,
                                    x_return_message  => x_return_message);
              write_into_file('l_customer_id ' || l_customer_id || chr(10) ||
                              'l_customer_num ' || l_customer_num);
              write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_tbl(c).ship_to_customer_id ' || g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                              .ship_to_customer_id);
              write_into_file('g_agr_rec.g_prj_tbl (p).g_prj_cust_rec.prj_cust_tbl(c).ship_to_address_id ' || g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                              .ship_to_address_id);
              l_task_customer_id := g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                    .ship_to_customer_id;
              l_task_address_id  := g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl(c)
                                    .ship_to_address_id;

              write_into_file('After derive_cust_siteuse_id  : ' ||
                              x_return_status || '***' || x_return_message);

            EXCEPTION
              WHEN OTHERS THEN
                x_return_message := 'Exception Ship to derive_cust_siteuse_id ' ||
                                    gv_poo || '.' || SQLERRM;
				log_error_clob('Derive Values(18):'||x_return_message);--Added for CR25364
                x_return_status  := gc_error;
            END;
            --        END IF;
            IF NVL(x_return_status, 'XX') = gc_error THEN
              l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                 x_return_message;
              l_err_flag      := 'Y';
              l_prj_err_flag  := 'Y';
              x_return_status := NULL;
              --raise e_dervation_err;
            END IF;
          END LOOP;
          --p_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl.COUNT LOOP
        END IF;
        --p_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl.COUNT > 0 THEN
        IF g_agr_rec.g_prj_tbl(p).g_class_categories_tbl.COUNT > 0 AND g_agr_rec.g_prj_tbl(p)
           .prj_main_rec.pa_project_id IS NULL THEN
          FOR class_count IN 1 .. g_agr_rec.g_prj_tbl(p)
                                  .g_class_categories_tbl.COUNT LOOP
            IF g_agr_rec.g_prj_tbl(p).g_class_categories_tbl(class_count)
             .class_category = l_business_class_category THEN
              l_business_offering := g_agr_rec.g_prj_tbl(p).g_class_categories_tbl(class_count)
                                     .class_code;
              EXIT;
            END IF;
          END LOOP;
        END IF;

        ---**************Start Derivation at Project Key Member Level***************----
        IF g_agr_rec.g_prj_tbl(p)
         .g_prj_player_rec.prj_player_main_tbl.COUNT > 0 THEN
          --Project Key Member Starts
          write_into_file('Derive Employee ID from Employee Number At Project Keymember Level Count ' || g_agr_rec.g_prj_tbl(p)
                          .g_prj_player_rec.prj_player_main_tbl.COUNT);
          FOR k IN 1 .. g_agr_rec.g_prj_tbl(p)
                        .g_prj_player_rec.prj_player_main_tbl.COUNT LOOP
            --Start CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
            IF g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
             .project_role_type IS NULL AND g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
               .project_role_meaning IS NOT NULL THEN
              gv_poo          := 'Derive Project Role Type from Project Role Meaning';
              x_return_status := NULL;
              BEGIN
                SELECT project_role_type
                  INTO g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
                       .project_role_type
                  FROM pa_proj_role_types_v
                 WHERE UPPER(meaning) =
                       UPPER(g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
                             .project_role_meaning);
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                  x_return_status  := gc_error;
                  x_return_message := ' Project Role Meaning :' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
                                     .project_role_meaning || ' Not found ';
                	log_error_clob('Derive Values(19):'||x_return_message);--Added for CR25364
				  write_into_file(gv_poo || '.' || x_return_message);
                WHEN OTHERS THEN
                  x_return_message := ' Exception while deriving Project Role Type ' ||
                                      SQLERRM;
                  log_error_clob('Derive Values(20):'||x_return_message);--Added for CR25364
                  x_return_status  := gc_error;
              END;
              -- Write derivation for Role TYpe if required
              IF NVL(x_return_status, 'XX') = gc_error THEN
                l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                   x_return_message;
                l_err_flag      := 'Y';
                l_prj_err_flag  := 'Y';
                x_return_status := NULL;
                --raise e_dervation_err;
              END IF;
            END IF;
            --IF g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k).project_role_type IS NULL
            --End CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
            gv_poo          := 'Derive Employee ID from Employee Number At Project Keymember Level';
            x_return_status := NULL;
            BEGIN
              write_into_file('Before derive_employee_idnum : ' ||
                              x_return_status || '-' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
                              .project_role_type || '-' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k)
                              .prj_player_emp_no || '-' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k)
                              .ebs_user_name);
              derive_employee_idnum(p_employee_no    => g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k)
                                                        .prj_player_emp_no,
                                    p_person_id      => g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
                                                        .person_id,
                                    p_ebs_user_name  => g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k)
                                                        .ebs_user_name, --Added as part of Phase 3B
                                    x_return_status  => x_return_status,
                                    x_return_message => x_return_message);
              write_into_file('After derive_employee_idnum : ' ||
                              x_return_status || '-' || x_return_message || '-' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
                              .project_role_type || '-' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k)
                              .prj_player_emp_no || '-' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k)
                              .ebs_user_name);
            EXCEPTION
              WHEN OTHERS THEN
                x_return_message := 'Exception derive_employee_idnum at Keyplaers ' ||
                                    gv_poo || '.' || SQLERRM;
                log_error_clob('Derive Values(21):'||x_return_message);--Added for CR25364
				x_return_status  := gc_error;
            END;
            write_into_file('Derive Employee ID from Employee Number ' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k)
                            .prj_player_emp_no || '****' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k)
                            .person_id);
            -- Write derivation for Role TYpe if required
            IF NVL(x_return_status, 'XX') = gc_error THEN
              l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                 x_return_message;
              l_err_flag      := 'Y';
              l_prj_err_flag  := 'Y';
              x_return_status := NULL;
              --raise e_dervation_err;
            END IF;
            --Start CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
          /*gv_poo := 'Assign Role type to Temp Variable';
                                                                                                                                                                                                                                                                                                IF l_proj_role_type_c IS NULL THEN
                                                                                                                                                                                                                                                                                                l_str := ''''||rec.PROJECT_ROLE_TYPE||'''';
                                                                                                                                                                                                                                                                                                l_proj_role_type_c := ''''||g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k).project_role_type||'''';
                                                                                                                                                                                                                                                                                                ELSE
                                                                                                                                                                                                                                                                                                l_proj_role_type_c := l_proj_role_type_c || ','''||g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_extra_tbl(k).project_role_type||'''';
                                                                                                                                                                                                                                                                                                END IF;
                                                                                                                                                                                                                                                                                                */
          --End CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
          END LOOP;
          --p_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl.COUNT LOOP
        END IF;
        --g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl.COUNT > 0
        --Start CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
        IF g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id IS NULL -- Added as part of Phase 3B
         THEN
          gv_poo          := 'Derive Missing Project Role Type as per Template Setup';
          x_return_status := NULL;
          write_into_file('Project Players count before Deriving Missing role type' || g_agr_rec.g_prj_tbl(p)
                          .g_prj_player_rec.prj_player_main_tbl.COUNT);
          BEGIN
            derive_missing_role_type(p_proj_seq_num   => p,
                                     proj_template_id => g_agr_rec.g_prj_tbl(p)
                                                         .prj_main_rec.created_from_project_id,
                                     p_xml_player_cnt => g_agr_rec.g_prj_tbl(p)
                                                         .g_prj_player_rec.prj_player_main_tbl.COUNT,
                                     p_start_date     => g_agr_rec.g_prj_tbl(p)
                                                         .prj_main_rec.start_date,
                                     x_return_status  => x_return_status,
                                     x_return_message => x_return_message);
            write_into_file('Status after Deriving remaing Role Types : ' ||
                            x_return_status);
            write_into_file('Project Players count after Deriving Missing role type' || g_agr_rec.g_prj_tbl(p)
                            .g_prj_player_rec.prj_player_main_tbl.COUNT);
            -- Added for RT7010726
            IF x_return_status = gc_error THEN
              x_return_message := 'Missing Role Derivation Error : ' ||
                                  x_return_message;
            END IF;
            --End of added for RT7010726
          EXCEPTION
            WHEN OTHERS THEN
              x_return_message := 'Exception Missing Role Derivation : ' ||
                                  SQLERRM;
              log_error_clob('Derive Values(22):'||x_return_message);--Added for CR25364
			  x_return_status  := gc_error;
          END;
          -- Write derivation for Role TYpe if required
          IF NVL(x_return_status, 'XX') = gc_error THEN
            l_prj_err       := l_prj_err || CHR(13) || '..' ||
                               x_return_message;
            l_err_flag      := 'Y';
            l_prj_err_flag  := 'Y';
            x_return_status := NULL;
            --raise e_dervation_err;
          END IF;
        END IF;

         -- CR24148 Moved task validation after project key members
         -- Check If Task is Provided or not
        IF g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl.COUNT = 0 AND g_agr_rec.g_prj_tbl(p)
           .prj_main_rec.pa_project_id IS NULL -- Added by Vinod for WRITE
         THEN
          x_return_message := 'Project must have Task Lines';
          l_prj_err        := l_prj_err || CHR(13) || '..' ||
                              x_return_message;
          l_err_flag       := 'Y';
          l_prj_err_flag   := 'Y';
        ELSE
          FOR task_count IN 1 .. g_agr_rec.g_prj_tbl(p)
                                 .g_prj_task_rec.tasks_in_tbl.COUNT LOOP
            g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).attribute9 := NVL(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                                                                             .attribute9,
                                                                                             l_business_offering);
            if g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
             .carrying_out_organization_id is null and g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
               .carrying_out_org_name is not null then
              derive_organization_idcd(p_organization_code => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
                                                              .carrying_out_org_code,
                                       p_organization_name => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
                                                              .carrying_out_org_name,
                                       p_organization_id   => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                                              .carrying_out_organization_id,
                                       x_return_status     => x_return_status,
                                       x_return_message    => x_return_message);

            end if;

			--Added for CR25364
			IF g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_manager_person_id IS NULL AND
			   (g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).task_mgr_ebs_user_name IS NOT NULL OR
			   g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).task_mgr_emp_number IS NOT NULL
			   ) THEN

			   write_into_file('Derivation for Task manager('||g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).pa_task_number||') :'||g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).task_mgr_emp_number||'-'||g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).task_mgr_ebs_user_name);

			   derive_employee_idnum(p_employee_no    => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).task_mgr_emp_number,
                                    p_person_id      => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_manager_person_id,
                                    p_ebs_user_name  => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).task_mgr_ebs_user_name,
                                    x_return_status  => x_return_status,
                                    x_return_message => x_return_message);
			   write_into_file('Task Manager Person ID :'||g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_manager_person_id);
			END IF;
			--End of Added for CR25364

            -------CR24148: Start Default Task PM-------
            IF NVL(g_default_task_pm,'N') = 'Y' AND g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_manager_person_id IS NULL AND g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl.COUNT > 0 THEN
               write_into_file('Default Project PM ID as Task PM' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl.COUNT);
               FOR k IN 1 .. g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl.COUNT LOOP
                  IF g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k).project_role_type = 'PROJECT MANAGER' THEN
                        g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_manager_person_id := g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k).person_id;
                         write_into_file('Default Project PM ID as Task PM - Person ID' || g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl(k).person_id);
                     write_into_file('Default Project PM ID as Task PM -Task Mgr ID' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_manager_person_id);

                  END IF;
               END LOOP;
            END IF;
            -------End Default Task PM-------

            IF g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
             .attribute8 IS NOT NULL THEN
              BEGIN
                SELECT b.flex_value
                  INTO g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                       .attribute8
                  FROM fnd_flex_value_sets a, FND_FLEX_VALUES_VL b
                 WHERE flex_value_set_name = 'XXPA_TASK_STATUS'
                   AND b.flex_value_set_id = a.flex_value_set_id
                   AND b.enabled_flag = 'Y'
                   AND sysdate BETWEEN start_date_active AND
                       NVL(end_date_active, sysdate + 1)
                   AND upper(b.flex_value) =
                       upper(NVL(trim(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                      .attribute8),
                                 g_agr_rec.g_prj_tbl(p)
                                 .prj_main_rec.project_status_code));
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
				  l_err_flag      := 'Y';
				  l_prj_err_flag  := 'Y';
				  x_return_message := 'Exception in Task Status : ' || SQLERRM;
				  log_error_clob('Task Status :'||x_return_message);--Added for CR25364

				WHEN OTHERS THEN
                  write_into_file('Exception in Task Status : ' || SQLERRM);
              END;
            END IF;
            IF g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id IS NOT NULL THEN
              BEGIN
                SELECT task_id
                  INTO g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                       .pa_task_id
                  FROM pa_tasks
                 WHERE task_number = g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                      .pa_task_number
                   AND project_id = g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id;
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                  write_into_file('Task doenst exist New Task : ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                  .pa_task_number);
                WHEN OTHERS THEN
                  write_into_file('Task doenst exist New Task : ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                  .pa_task_number);
              END;
            END IF;
            write_into_file('Work Type : ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
                            .work_type);
            IF g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
             .work_type IS NOT NULL AND g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
               .work_type_id IS NULL THEN
              BEGIN
                SELECT work_type_id,
                       NVL(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                           .billable_flag,
                           billable_capitalizable_flag)
                  INTO g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                       .work_type_id,
                       g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                       .billable_flag
                  FROM PA_WORK_TYPES_V
                 WHERE upper(name) = upper(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
                                           .work_type);
                write_into_file('Work Type : ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
                                .work_type || '*' || 'Work Type ID : ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                .work_type_id);
              EXCEPTION
			  	WHEN NO_DATA_FOUND THEN
				  l_err_flag      := 'Y';--Added for CR25364
				  l_prj_err_flag  := 'Y';--Added for CR25364
				  x_return_message := 'Invalid Task Work Type';--Added for CR25364
				  log_error_clob('Task Status :'||x_return_message);--Added for CR25364
                WHEN OTHERS THEN
                  write_into_file('Task Work Type Not found. Work Type would be "Default"');
              END;
            END IF;

			write_into_file('Before validation Attribute9 : ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).attribute9);

			IF g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
             .attribute9 IS NOT NULL THEN
              BEGIN
                SELECT b.flex_value
                  INTO g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                       .attribute9
                  FROM fnd_flex_value_sets a, FND_FLEX_VALUES_VL b
                 WHERE flex_value_set_name = 'XXPA_BUSINESS_OFFERING'
                   AND b.flex_value_set_id = a.flex_value_set_id
                   AND b.enabled_flag = 'Y'
                   AND sysdate BETWEEN NVL(start_date_active,SYSDATE) AND
                       NVL(end_date_active, sysdate + 1)
                   AND upper(b.flex_value) =
                       upper(trim(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                      .attribute9));
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
				  l_err_flag      := 'Y';
				  l_prj_err_flag  := 'Y';
				  x_return_message := 'Exception in Task Attribute9 Validation : ' || SQLERRM;
				  log_error_clob('ATTRIBUTE9 Validation Err :'||x_return_message);--Added for CR25364

				WHEN OTHERS THEN
                  write_into_file('ATTRIBUTE9 Validation Err :' || SQLERRM);
              END;
            END IF;

			write_into_file('After validation Attribute9 : ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).attribute9);

            g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_start_date := NVL(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                                                                                  .task_start_date,
                                                                                                  g_agr_rec.g_prj_tbl(p)
                                                                                                  .prj_main_rec.start_date);

            --Added for CR22926
            write_into_file('Test Agreement Dates : '||g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date || '-' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                            .task_completion_date);

             --Added as per CR25148 for handling funding flags revaluate_funding_flag and include_gains_losses_flag for selected partners in UPDATE mode
            IF g_process_mode= 'UPDATE' THEN

                IF NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                p_key_type       => gc_key_type,
                                                                                p_key_type_value => gv_source_system,
                                                                                p_name           => gc_revaluate_funding_flag),
                                      'N')= 'Y' THEN

                  g_agr_rec.g_prj_tbl(p).prj_main_rec.revaluate_funding_flag := gv_revaluate_funding_flag;
                  write_into_file('revaluate_funding_flag after setting value from kvp: '|| g_agr_rec.g_prj_tbl(p).prj_main_rec.revaluate_funding_flag );
               END IF;

               IF NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                p_key_type       => gc_key_type,
                                                                                p_key_type_value => gv_source_system,
                                                                                p_name           => gc_include_gain_loss_flag),
                                      'N') = 'Y' THEN

                    g_agr_rec.g_prj_tbl(p).prj_main_rec.include_gains_losses_flag := gv_include_gains_losses_flag;
                    write_into_file('include_gains_losses_flag after setting value from kvp : '|| g_agr_rec.g_prj_tbl(p).prj_main_rec.include_gains_losses_flag );
              END IF;

          END IF;
            --End of handling flags change

            --Added as part of CR25148 for setting completion date to SYSDATE+5years for selected partners
             IF g_proj_completion_dt_extn > 0  THEN
                IF g_process_mode= 'CREATE' THEN
				  --date_convert(to_char(ADD_MONTHS(SYSDATE,g_proj_completion_dt_extn),'DD-MON-YYYY'),g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date);
                  date_convert(to_char(GREATEST(ADD_MONTHS(SYSDATE,g_proj_completion_dt_extn),
												nvl(g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date,sysdate)),'DD-MON-YYYY'),
							   g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date);
                  g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_completion_date  := g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date;
                  write_into_file('Project Completion Date:'||g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date);

                ELSE

                   BEGIN
                    select completion_date
                    into g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date
                    from pa_projects_all
                    where project_id=g_agr_rec.g_prj_tbl(p).prj_main_rec.pa_project_id;
                    EXCEPTION WHEN OTHERS THEN
                      NULL;
                    END;
                    g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).task_completion_date:=g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date;
                END IF;
             ELSE
                    IF g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date IS NOT NULL AND g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                   .task_completion_date IS NOT NULL THEN

                    g_agr_rec.g_prj_tbl(p).prj_main_rec.completion_date := GREATEST(g_agr_rec.g_prj_tbl(p)
                                                                                  .prj_main_rec.completion_date,
                                                                                  g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                                                                  .task_completion_date);
                    END IF;
             END IF;

            write_into_file('Task Address Add Flag ' ||
                            g_task_addr_update_allow);
            IF NVL(g_task_addr_update_allow, 'N') = 'Y' THEN
              gv_poo          := 'Derive Ship To Customer Details';
              x_return_status := NULL;
              BEGIN
                l_customer_id  := NULL;
                l_customer_num := NULL;
                write_into_file('Before derive_cust_siteuse_id  : ' ||
                                x_return_status);
                l_customer_id := l_task_customer_id;
                g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).g_task_cust_rec.prj_cust_tbl(task_count).ship_to_customer_id := l_task_customer_id;
                write_into_file('Before Task Customer Id' || l_customer_id ||
                                chr(10) || 'Before Task Address Id ' ||
                                l_task_address_id);
                derive_cust_shipto_id(p_customer_number => l_customer_num,
                                      p_customer_id     => l_customer_id,
                                      p_site_code       => l_ship_to,
                                      p_prj_cust_rec    => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count)
                                                           .g_task_cust_rec,
                                      x_return_status   => x_return_status,
                                      x_return_message  => x_return_message);
                write_into_file('After Task Customer Id ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).g_task_cust_rec.prj_cust_tbl(1)
                                .ship_to_customer_id || chr(10) ||
                                'After Task Address ID ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).g_task_cust_rec.prj_cust_tbl(1)
                                .ship_to_address_id);
                write_into_file('After derive_cust_siteuse_id  : ' ||
                                x_return_status || '***' ||
                                x_return_message);
                IF g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).g_task_cust_rec.prj_cust_tbl(1)
                 .ship_to_address_id IS NULL THEN
                  g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).address_id := l_task_address_id;
                ELSE
                  g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count).address_id := g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(task_count).g_task_cust_rec.prj_cust_tbl(1)
                                                                                               .ship_to_address_id;
                END IF;
                write_into_file('Final Task Address Id ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl(task_count)
                                .address_id);
              EXCEPTION
                WHEN OTHERS THEN
                  x_return_message := 'Exception Ship to derive_cust_siteuse_id ' ||
                                      gv_poo || '.' || SQLERRM;
                  x_return_status  := gc_error;
              END;
            END IF;
            IF NVL(x_return_status, 'XX') = gc_error THEN
              l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                 x_return_message;
              l_err_flag      := 'Y';
              l_prj_err_flag  := 'Y';
              x_return_status := NULL;
              --raise e_dervation_err;
            END IF;
            --end of added for CR22926
          END LOOP;
          --Added for CR9339
          IF g_task_exp_limit_flag = 'Y' THEN
            FOR task_exp_count in g_agr_rec.g_prj_tbl(p)
                                  .g_prj_task_rec.g_task_limit_exp.FIRST .. g_agr_rec.g_prj_tbl(p)
                                                                            .g_prj_task_rec.g_task_limit_exp.LAST loop
              begin
                --Validate EXP Category
                select count(1)
                  into l_count
                  from PA_EXPENDITURE_CATEGORIES
                 where upper(expenditure_category) =
                       upper(trim(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp(task_exp_count)
                                  .task_exp_category_code));
                if l_count = 0 then
                  l_prj_err       := l_prj_err || CHR(13) ||
                                     'Invalid Expenditure Category for Task Number ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp(task_exp_count)
                                    .task_number || gv_poo || '.' ||
                                     SQLERRM;
                  l_err_flag      := 'Y';
                  l_prj_err_flag  := 'Y';
                  x_return_status := gc_error;
                  write_into_file('Invalid Expenditure Category for Task Number ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp(task_exp_count)
                                  .task_number);
                end if;
                --Validate if Task Exp is available for Update
                SELECT COUNT(1)
                  INTO l_count
                  FROM pa_projects_all         ppa,
                       pa_tasks                pt,
                       pa_transaction_controls ptc
                 WHERE ppa.template_flag = 'N'
                   AND pt.project_id = ppa.project_id
                   AND ppa.project_status_code <> 'CLOSED'
                   AND SYSDATE BETWEEN ppa.start_date AND
                       nvl(ppa.completion_date, SYSDATE + 1)
                   AND (ppa.limit_to_txn_controls_flag = 'Y' OR
                       pt.limit_to_txn_controls_flag = 'Y')
                   AND ptc.project_id = pt.project_id
                   AND ptc.task_id = pt.task_id
                   AND upper(ptc.expenditure_category) =
                       upper(trim(g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp(task_exp_count)
                                  .task_exp_category_code))
                   AND ppa.segment1 = g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp(task_exp_count)
                      .project_number
                   AND pt.task_number = g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp(task_exp_count)
                      .task_number;

                if l_count > 0 then
                  write_into_file('Expenditure Already Exists for ' || g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp(task_exp_count)
                                  .task_number);
                  g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_task_limit_exp.delete(task_exp_count);
                end if;
              exception
                when others then
                  l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                     'x_return_message';
                  l_err_flag      := 'Y';
                  l_prj_err_flag  := 'Y';
                  x_return_status := NULL;
              end;

            end loop;

          END IF;
          --End of Added for CR9339
        END IF;


        write_into_file('Project Budget Table Count : ' || g_agr_rec.g_prj_tbl(p)
                        .g_budget_prj_tbl.COUNT);
        --Added as part of Phase 3B
        IF g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl.COUNT > 0 THEN
          FOR bud_count IN 1 .. g_agr_rec.g_prj_tbl(p)
                                .g_budget_prj_tbl.COUNT LOOP
            IF g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count)
             .entry_method_code IS NULL THEN
              IF NVL(g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count)
                     .budget_type_code,
                     'XX') IN ('AR', 'FR', 'Estimated Revenue Budget') THEN
                g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count).entry_method_code := l_rev_budget_entry_code;
              ELSE
                g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count).entry_method_code := l_cost_budget_entry_code;
              END IF;
            END IF;
            IF g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count)
             .resource_list_id IS NULL THEN
              IF NVL(g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count)
                     .budget_type_code,
                     'XX') IN ('AR', 'FR', 'Estimated Revenue Budget') THEN
                g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count).resource_list_id := l_rev_budget_resource_list_id;
              ELSE
                g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl(bud_count).resource_list_id := l_cost_budget_resource_list_id;
              END IF;
            END IF;
          END LOOP;
        END IF;
        --End of added as part of Phase 3B
        --End CR22230 - RID:9180 Create ship to site on the fly through DFSD-Oracle R12 Interface
        ---**************Start Derivation at Project Credit Receiver Level***************----
        IF g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl.COUNT > 0 THEN
          --Project Credit Receiver Starts
          FOR cr IN 1 .. g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl.COUNT LOOP
            gv_poo          := 'Derive Employee ID from Employee Number At Project Credit Receiver Level';
            x_return_status := NULL;
            BEGIN
              write_into_file('Before Credit Receiver derive_employee_idnum : ' ||
                              x_return_status);
              derive_employee_idnum(p_employee_no    => g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
                                                        .employee_number,
                                    p_person_id      => g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
                                                        .person_id,
                                    p_ebs_user_name  => g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
                                                        .ebs_user_name,
                                    x_return_status  => x_return_status,
                                    x_return_message => x_return_message);
              write_into_file('After Credit Receiver  derive_employee_idnum : ' ||
                              x_return_status || g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
                              .person_id);
            EXCEPTION
              WHEN OTHERS THEN
                x_return_message := 'Exception derive_employee_idnum at Credit Receiver ' ||
                                    gv_poo || '.' || SQLERRM;
                x_return_status  := gc_error;
            END;
            -- Derive Sales Person for given Employee
            gv_poo := 'Derive Sales Person ID from Employee ID At Project Credit Receiver Level';
            IF g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
             .salesrep_id IS NULL AND g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
               .person_id IS NOT NULL THEN
              -- Derive SalesPerson for entered Employee
              x_return_status := NULL;
              BEGIN
                SELECT salesrep_id
                  INTO g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
                       .salesrep_id
                  FROM ra_salesreps_all
                 WHERE person_id = g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
                      .person_id
                   AND org_id = g_org_id;
              EXCEPTION
                WHEN NO_DATA_FOUND THEN
                  x_return_message := 'Employee is not defined as sales person';
                  x_return_status  := gc_error;
                WHEN OTHERS THEN
                  x_return_message := 'Unhandle Exception Employee is not defined as sales person' ||
                                      SQLERRM;
                  x_return_status  := gc_error;
              END;
            END IF;
            --g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr).salesrep_id IS NULL THEN
            -- Write derivation for Role TYpe if required
            IF NVL(x_return_status, 'XX') = gc_error THEN
              l_prj_err       := l_prj_err || CHR(13) || '..' ||
                                 x_return_message;
              l_err_flag      := 'Y';
              l_prj_err_flag  := 'Y';
              x_return_status := NULL;
              --raise e_dervation_err;
            END IF;
            -- Default the value for transfer to ar flag
            g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr).transfer_to_ar_flag := NVL(g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl(cr)
                                                                                       .transfer_to_ar_flag,
                                                                                       'N');
          END LOOP;
          --g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl.count LOOP
        END IF; --g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl.count > 0
        -- Assign Project level error to Agreement Level error variable
        IF l_prj_err_flag = 'Y' THEN
          x_return_status := gc_error;
        END IF;
        l_agr_err := l_agr_err || '.' || l_prj_err;
        g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := x_return_status;
        g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
      END LOOP; --End of p_agr_rec.g_prj_tbl.COUNT
    END IF; -- IF p_agr_rec.g_prj_tbl.COUNT > 0 THEN
    IF l_err_flag = 'Y' THEN
      RAISE e_dervation_err;
    END IF;
  EXCEPTION
    WHEN e_dervation_err THEN
      x_return_status                     := gc_error;
      x_return_message                    := l_agr_err;
      g_agr_rec.agr_extra_rec.agr_status  := gc_error;
      g_agr_rec.agr_extra_rec.agr_message := l_agr_err;
      write_into_file(l_agr_err);
    WHEN OTHERS THEN
      x_return_status                     := gc_error;
      x_return_message                    := gv_procedure_name || '.' ||
                                             gv_poo || '.' || SQLERRM;
      write_into_file('Error in Derive Values : '||DBMS_UTILITY.FORMAT_ERROR_BACKTRACE||' : '||SQLERRM);
      g_agr_rec.agr_extra_rec.agr_status  := gc_error;
      g_agr_rec.agr_extra_rec.agr_message := x_return_message;
      write_into_file(x_return_message);
  END derive_values;
  /*
  ** Procedure Name  : validate_transaction
  ** Purpose:  For validating the Inbound information
  **           It will call Derivation procedure to derive the values
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  */
  PROCEDURE validate_transaction( --p_agr_rec           IN OUT g_agr_rec_in
                                 x_return_status  OUT VARCHAR2,
                                 x_return_message OUT VARCHAR2) IS
    e_val_err EXCEPTION;
    l_part_valid           BOOLEAN;
    l_partner_sync_enabled VARCHAR2(1);
  BEGIN
    gv_procedure_name := 'validate_transaction';
    gv_poo            := 'Start';
    --x_return_status := gc_success;
    write_into_file(gv_procedure_name || '.' || gv_poo);
    gv_poo       := 'Check if parther is valid or not';
    l_part_valid := xxint_event_type_utils.valid_partner_code(gv_source_system);
    IF NOT l_part_valid THEN
      x_return_message := 'Partner Code ' || gv_source_system ||
                          ' is not valid.';
      RAISE e_val_err;
    END IF;
    gv_poo                 := 'Check if the partner is enabled for Project Creation';
    l_partner_sync_enabled := xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                        p_key_type       => gc_key_type,
                                                                        p_key_type_value => gv_source_system,
                                                                        p_name           => gc_enabled_keyname);
    IF NVL(l_partner_sync_enabled, 'N') = 'N' THEN
      x_return_message := 'Partner System ' || gv_source_system ||
                          ' is not enabled for Project Creation Sync';
      RAISE e_val_err;
    END IF;
    gv_poo                     := 'Check if the partner is enabled for Project or Agreement Update';
    g_partner_agr_update_allow := xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                            p_key_type       => gc_key_type,
                                                                            p_key_type_value => gv_source_system,
                                                                            p_name           => gc_updateallow_keyname);
    g_agr_partial_update       := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                p_key_type       => gc_key_type,
                                                                                p_key_type_value => gv_source_system,
                                                                                p_name           => gc_agr_part_upd_keyname),
                                      'N');
    --Added as part of Phase 3B
    g_partner_proj_update_allow := xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                             p_key_type       => gc_key_type,
                                                                             p_key_type_value => gv_source_system,
                                                                             p_name           => gc_updateproj_allow_keyname);
    /*Commented as not used code cleanup CR9339
    g_partner_task_update_allow   := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                    p_key_type       => gc_key_type,
                                                                                    p_key_type_value => gv_source_system,
                                                                                    p_name           => gc_updatetask_allow_keyname),
                                          'N');
     */
    g_task_addr_update_allow      := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                   p_key_type       => gc_key_type,
                                                                                   p_key_type_value => gv_source_system,
                                                                                   p_name           => gc_updatetask_addr_keyname),
                                         'N');
    g_partner_cross_prd_update    := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                   p_key_type       => gc_key_type,
                                                                                   p_key_type_value => gv_source_system,
                                                                                   p_name           => gc_update_cross_prd_keyname),
                                         'N');
    g_partner_partial_proj_udpate := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                   p_key_type       => gc_key_type,
                                                                                   p_key_type_value => gv_source_system,
                                                                                   p_name           => gc_proj_partial_update_keyname),
                                         'N'); -- Added by vinod for WRITE
    g_proj_status_udpate          := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                   p_key_type       => gc_key_type,
                                                                                   p_key_type_value => gv_source_system,
                                                                                   p_name           => gc_proj_status_udpate_keyname),
                                         'N'); -- Added by vinod for WRITE
    --End of added as part of Phase 3B
    g_address_validation := xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                      p_key_type       => gc_key_type,
                                                                      p_key_type_value => gv_source_system,
                                                                      p_name           => gc_address_validation);
    write_into_file('Address Validation : ' || g_address_validation ||
                    '.. Agr Update :' || g_partner_agr_update_allow);
    --- Added for CR24470
    g_address_validation := xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                      p_key_type       => gc_key_type,
                                                                      p_key_type_value => gv_source_system,
                                                                      p_name           => gc_address_validation);

    g_allow_soldto_cust_change := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                p_key_type       => gc_key_type,
                                                                                p_key_type_value => gv_source_system,
                                                                                p_name           => gc_soldto_cust_change_keyname),
                                      'N');

    write_into_file('Sold To Change Allowed : ' ||
                    g_allow_soldto_cust_change);

   --CR24148: Start Default task pm from project
   g_default_task_pm := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                       p_key_type       => gc_key_type,
                                                                       p_key_type_value => gv_source_system,
                                                                       p_name           => g_default_task_pm_keyname),
                                                                       'N');

    write_into_file('Default Task PM from Project : ' ||
                    g_default_task_pm);
    --CR24148: End Default task pm from project

--CR25148 - Project and task completion date extension
    BEGIN
        g_proj_completion_dt_extn := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                p_key_type       => gc_key_type,
                                                                                p_key_type_value => gv_source_system,
                                                                                p_name           => gc_proj_completion_dt_extn),
                                      0);

      write_into_file('Completion Date Extension in Months : ' ||
                    g_proj_completion_dt_extn);
    EXCEPTION
        WHEN OTHERS THEN
        g_proj_completion_dt_extn := 0;
    END;
    --End of change CR25148 - Project and task completion date extension
  --CR25448 - Project Manager Update Handling for TSMT - EQ
    BEGIN
        g_proj_manager_upd_st_dt := NVL(xxint_event_type_utils.get_key_parm_value(     p_event_type     => gc_event_type,
                                                                                       p_key_type       => gc_key_type,
                                                                                       p_key_type_value => gv_source_system,
                                                                                       p_name           => gc_proj_manager_upd_st_dt
                                                                                       ),
                                    'N');
    --write_into_file('Project Manager Update scenario for WS : ' ||g_proj_completion_dt_extn);
    EXCEPTION
        WHEN OTHERS THEN
        g_proj_manager_upd_st_dt := 'N';
    END;
    --End of change CR25448 - Project Manager Update Handling for TSMT - EQ

    gv_poo := 'Derive the Values';
    BEGIN
      derive_values( --p_agr_rec           => p_agr_rec
                    x_return_status  => x_return_status,
                    x_return_message => x_return_message);
      write_into_file('Athi x_return_message   : '||x_return_message||' :  x_return_status -'||x_return_status);
    EXCEPTION WHEN OTHERS THEN
        x_return_message := 'Exception in Derive Values' || SQLERRM;
        RAISE e_val_err;
    END;
    write_into_file(gv_procedure_name || '.' || gv_poo);
    -- end of validations
  EXCEPTION
    WHEN e_val_err THEN
      --g_sql_stmt := '3.28';
      x_return_status := gc_error;
      --x_return_message := gv_procedure_name||'.'||gv_poo||'.'||x_return_message;
      write_into_file(gv_procedure_name || '.' || gv_poo || '.' ||
                      x_return_message);
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := gv_procedure_name || '.' || gv_poo || '.' ||
                          SQLERRM;
      write_into_file(x_return_message);
  END validate_transaction;
  -------------------------------------------------------------------------------
  /******************************************************************************
  ** Procedure Name  : xx_get_key_value
  ** Purpose         : Procedure to get the value pertaining to a key for
  **                   XXPA2589_COST_REV_IN event
  ** Procedure History:
  ** ---------     ---------------         --------------------------------------
  ** Date          Who                       Description
  ** ---------     ---------------         --------------------------------------
  ** 03-May-2021   Sourabh Bhattacharjee     Initial Version.                   *
  ********************************************************************************/
  FUNCTION xx_get_key_value(p_key_name VARCHAR2) RETURN VARCHAR2 IS
    lv_valid VARCHAR2(200) := 'E';
  BEGIN
    lv_valid := nvl(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                              p_key_type       => gc_key_type,
                                                              p_key_type_value => gv_source_system,
                                                              p_name           => p_key_name),
                    'E');

    RETURN lv_valid;
  EXCEPTION
    WHEN OTHERS THEN
      write_into_file('Error at xx_get_key_value : ' || SUBSTR(sqlerrm, 1, 300));
      RETURN 'E';
  END xx_get_key_value;
---------------------------------------------------------------------------------------------------------
  FUNCTION record_error(p_header IN XMLTYPE, p_return_message IN VARCHAR2) RETURN XMLTYPE IS
    l_tmp_xml       XMLTYPE default NULL ;
    l_counter       NUMBER := 0 ;
    l_pm_agr_ref    pa_agreements_all.pm_agreement_reference%TYPE ;

  BEGIN
--    write_into_file('Begin record_error...Error count : ' || g_error_tbl.count); --,xxint_event_util_site.g_level_event);
    l_tmp_xml := p_header;
--    IF g_error_tbl.count > 0 then
--      for i IN g_error_tbl.first .. g_error_tbl.last loop
        l_pm_agr_ref := g_agr_rec.agr_main_rec.pm_agreement_reference;--g_error_tbl(i).pm_event_ref;
        write_into_file('l_pm_agr_ref '||l_pm_agr_ref);
        --check if the pm_event_ref is in payload or not
        SELECT existsnode(l_tmp_xml,
                          '/G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL[PM_AGREEMENT_REFERENCE=' || '"' ||
                          l_pm_agr_ref || '"' || ']')
          INTO l_counter
          FROM dual;
        IF l_counter > 0 THEN
          --as the event ref is in payload, insert the error message against that event ref
          SELECT insertchildxml(l_tmp_xml,
                                '/G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL[P_PM_EVENT_REFERENCE=' || '"' ||
                                l_pm_agr_ref || '"' || ']',
                                'ERROR_MESSAGE',
                                xx_pk_xml_util.f_element_out('ERROR_MESSAGE',
                                                             p_return_message))
            INTO l_tmp_xml
            FROM dual;
        ELSE
          --as the event ref is not in payload, insert the error message for all the event ref
          SELECT insertchildxml(l_tmp_xml,
                                '/G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/',
                                'ERROR_MESSAGE',
                                xx_pk_xml_util.f_element_out('ERROR_MESSAGE',
                                                             p_return_message))
            INTO l_tmp_xml
            FROM dual;
        END IF;
--      end loop;
--    END IF;

    RETURN l_tmp_xml;
  EXCEPTION
    WHEN OTHERS THEN
      write_into_file('error ' || sqlerrm || '  in record_error for : ' ||
                        l_pm_agr_ref); --,xxint_event_util_site.g_level_unexpected);
      RETURN l_tmp_xml;
  END record_error;
  ----------------------------
  --- Procedure to report the error in XEDIT table
  PROCEDURE report_errors(p_xml             IN XMLTYPE,
                          p_guid            IN VARCHAR2,
                          p_return_message  IN VARCHAR2,
                          x_return_status   OUT VARCHAR2,
                          x_msg_data        OUT VARCHAR2) IS

    l_retsts  VARCHAR2(20);
    l_errmsg  VARCHAR2(4000);
    l_counter NUMBER := 0;
    e_err EXCEPTION;
    lv_source_type   xxint_xedit_types.source_type%TYPE;
    lv_xedit_enabled VARCHAR2(20) := 'N';
    l_error_xml      XMLTYPE;
  BEGIN
    x_return_status := 'S';
    write_into_file('inside report_errors'); --,xxint_event_util_site.g_level_event);
    --calling record error to add the error message in the payload
    l_error_xml := record_error(p_xml, p_return_message);
    xxint_event_api_pub.replace_clob(p_guid,
                                     'ERROR_CLOB',
                                     l_error_xml.getclobval());

    -- check if error records exist
    SELECT COUNT(existsnode(l_error_xml,
                            '/G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/ERROR_MESSAGE'))
      INTO l_counter
      FROM dual;

    write_into_file('Custom Validations Error Msg Error counter = ' || l_counter);

    lv_xedit_enabled := NVL(xx_get_key_value(gv_xedit_enabled), 'N');

    IF (l_counter) > 0 AND lv_xedit_enabled = 'Y' THEN
      lv_source_type := gv_component_name || '_' || gv_source_system || '_XEDIT';
      write_into_file('Write Error XML to XEDIT' || CHR(10) ||
                        'lv_source_type : ' || lv_source_type); --,xxint_event_util_site.g_level_event);
      BEGIN
        xxint_xedit_txn_pkg.write_txn_doc(i_source_type        => lv_source_type,
                                          i_source_key         => p_guid,
                                          i_current_status     => xxint_xedit_txn_pkg.g_status_pending,
                                          i_attribute_category => gv_source_system,
                                          i_attribute1         => p_guid,
                                          i_attribute2         => gv_source_system,
                                          i_attribute3         => '',
                                          i_attribute4         => NULL,
                                          i_attribute5         => NULL,
                                          i_content            => l_error_xml.getclobval(),
                                          o_return_status      => l_retsts,
                                          o_error_message      => l_errmsg);
      EXCEPTION
        WHEN OTHERS THEN
          write_into_file('Exception in XXINT_XEDIT_TXN_PKG.write_txn_doc ' ||
                            sqlerrm); --,xxint_event_util_site.g_level_unexpected);
      END;

      write_into_file('l_retsts ' || l_retsts);
      IF l_retsts = 'E' THEN
        write_into_file('Error in writing to XEDIT table - ' || l_errmsg); --,xxint_event_util_site.g_level_error);
        x_return_status := 'E';
        x_msg_data      := '#TECHNICAL ERROR# - Error in writing to XEDIT table. See event log for details' ||
                           l_errmsg;
      ELSE
        write_into_file('Error written to XEDIT Table for XEDIT Source Type ' ||lv_source_type); --,xxint_event_util_site.g_level_event);
        x_return_status := 'E';
        x_msg_data      := 'Error transactions in XML. Check XML Editor ' ||
                           lv_source_type;
        /*xxint_event_api_pub.replace_clob(p_guid,
        --'XXINT_EXCEPTION_REPORT_XML',
        'ERROR_CLOB',
        p_error_xml.getclobval());*/ -- This is already done at the begining of the procedure.
      END IF;

    END IF;

  EXCEPTION
    WHEN OTHERS THEN
      x_return_status := 'E';
      x_msg_data      := 'ERROR in XXAP_INVOICE_IMPORT_PKG.REPORT_ERROR: ' ||
                         sqlerrm;
      write_into_file(x_msg_data); --,xxint_event_util_site.g_level_unexpected);
  END report_errors;
  /******************************************************************************
  ** Procedure Name  : xml_callback_hook
  ** Purpose         : Procedure to call for XEDIT utility for XXPA2589_COST_REV_IN event
  ** Procedure History:
  ** ---------     ---------------         --------------------------------------
  ** Date          Who                       Description
  ** ---------     ---------------         --------------------------------------
  ** 16-Aug-2021   Sourabh Bhattacharjee     Initial Version. CR 24146          *
  ********************************************************************************/
  PROCEDURE xml_callback_hook(o_return_status IN OUT VARCHAR2,
                              o_error_message IN OUT VARCHAR2,
                              i_source_type   IN xxint_xedit_txn_docs.source_type%TYPE,
                              i_source_key    IN xxint_xedit_txn_docs.source_key%TYPE) IS
    l_event_api         xxint_event_api_pub.gt_event_api_type;
    l_xml               XMLTYPE;
    lv_email_to         fnd_user.email_address%type ;
    lv_email_from       fnd_user.email_address%type := '';
    ln_email_results    NUMBER ;
    lv_email_sub        VARCHAR2(4000) ;
    lv_email_body       VARCHAR2(4000) ;
    ov_errmsg           VARCHAR2(4000) ;
  BEGIN

    -- XXINT_EVENT_API_PUB.FORCE_EVENT_TO_CLOSE(i_source_key);
    l_xml := xmltype(xxint_xedit_txn_pkg.get_content(i_source_type,
                                                     i_source_key,
                                                     xxint_xedit_txn_pkg.g_content_type_curr));

    -- remove error message tag

    SELECT deletexml(l_xml, '//ERROR_MESSAGE') INTO l_xml FROM dual;

    --    l_event_api.guid := substr(rawtohex(sys_guid()),1,32); -- generate new GUID
    SELECT email_address INTO lv_email_to
      FROM fnd_user
     WHERE user_id = fnd_global.user_id ;

    write_into_file('Create Event: ' || gc_event_type || ' GUID: ' || l_event_api.guid);
    xxint_event_api_pub.create_event(x_api_return_type   => l_event_api,
                                     p_event_type        => gc_event_type,
                                     p_content_clob      => l_xml.getclobval(),
                                     p_content_clob_code => xxint_event_soap_create_v1a.clob_code_xml_payload_in,
                                     p_attribute15       => i_source_key);

    write_into_file('Create Event: l_event_api.retcode: ' || l_event_api.retcode ||
                    ' l_event_api.retmesg: ' || l_event_api.retmesg ||
                    '  l_event_api.guid ' || l_event_api.guid);

    IF l_event_api.guid IS NULL THEN
      -- event creation failed
      o_return_status := 'E';
      o_error_message := l_event_api.retmesg;
      RETURN;
      /*  else if nvl(l_event_api.retcode,0) = 1 then  -- new event returned error
      o_return_status := 'E';
      o_error_message := l_event_api.retmesg;
      return;
      end if;*/
    ELSE
      xxint_event_api_pub.force_event_to_close(i_source_key);
      lv_email_sub := i_source_type || ' : ' || 'XEDIT Notification' ;
      lv_email_body := 'OLD GUID : ' || i_source_key ||chr(10)||
                       'NEW GUID : ' || l_event_api.guid ;
      ln_email_results := xx_pk_email.f_send_email(Sender       => NVL(lv_email_from, xx_pk_util.f_user_email),
                                                   Recipient    => lv_email_to,
--                                                   CcRecipient  => iv_email_cc,
--                                                   BccRecipient => iv_email_bcc,
                                                   Subject      => lv_email_sub,
                                                   Body         => lv_email_body,
                                                   ErrorMessage => ov_errmsg);
--                                                       Attachments  => NULL);

      IF ln_email_results > 0 THEN
        write_into_file('Email notification failed.');
      ELSE
        write_into_file('Email notification sent.');
      END IF ;

    END IF;

    o_return_status := 'S';
  END xml_callback_hook;
  /*
  ** Procedure Name  proj_status_update
  ** Purpose:  For Updating Project status as per Partner System
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 03-Dec-13            Vipul Gosai      New
  */
  PROCEDURE proj_status_update(x_return_status  OUT VARCHAR2,
                               x_return_message OUT VARCHAR2) IS
    l_workflow_started VARCHAR2(2) := 0;
    l_err_flag         VARCHAR2(2) := 'N';
    l_err_msg          VARCHAR2(4000);
  BEGIN
    gv_poo := 'Start Project Update API for Project status change';

    IF g_agr_rec.g_prj_tbl.COUNT > 0 THEN
      FOR p IN 1 .. g_agr_rec.g_prj_tbl.COUNT LOOP

        IF g_agr_rec.g_prj_tbl(p)
         .prj_extra_rec.enable_project_wf_flag = 'Y' AND g_agr_rec.g_prj_tbl(p)
           .prj_extra_rec.prj_type_def_status_code <> g_agr_rec.g_prj_tbl(p)
           .prj_extra_rec.partner_project_status_code THEN
          -- Update the Project status as per Partner System
          BEGIN
            gv_poo       := 'Assign Record type to API Record Type';
            g_project_in := g_agr_rec.g_prj_tbl(p).prj_main_rec;
            --gv_poo := 'Start Project Task Assignment for API';
            --g_tasks_in := g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl;
            -- Assign project number to error variable
            l_err_msg := 'Project# :' || g_project_in.pa_project_number;
            write_into_file('Project End Date : '||g_project_in.completion_date);
            write_into_file('Project Status Update is Required');
            write_into_file(g_agr_rec.g_prj_tbl(p)
                            .prj_extra_rec.enable_project_wf_flag || '**' || g_agr_rec.g_prj_tbl(p)
                            .prj_extra_rec.prj_type_def_status_code || '**' || g_agr_rec.g_prj_tbl(p)
                            .prj_extra_rec.partner_project_status_code);
            g_project_in.project_status_code := g_agr_rec.g_prj_tbl(p)
                                                .prj_extra_rec.partner_project_status_code;

            pa_project_pub.update_project(p_api_version_number => gc_api_version_number,
                                          p_commit             => fnd_api.g_false,
                                          p_init_msg_list      => fnd_api.g_false,
                                          p_msg_count          => g_msg_count,
                                          p_msg_data           => g_msg_data,
                                          p_return_status      => g_return_status,
                                          p_workflow_started   => l_workflow_started,
                                          p_pm_product_code    => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                          p_project_in         => g_project_in,
                                          p_project_out        => g_project_out,
                                          p_tasks_in           => g_tasks_blank, --g_task_upd -- Changed as part of Phase 3B
                                          -- Blank Record Type
                                          p_tasks_out => g_tasks_out);
          EXCEPTION
            WHEN OTHERS THEN
              l_err_msg := ' API pa_project_pub.update_project Exception for Project# ' ||
                           g_project_in.pa_project_number || '.' || SQLERRM;
              l_err_flag := 'Y';
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_err_msg;
              x_return_message := x_return_message || '.' || l_err_msg;
          END;
          IF g_return_status <> 'S' THEN
            IF g_msg_count >= 1 THEN
              FOR i IN 1 .. g_msg_count LOOP
                pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                    p_msg_index     => i,
                                                    p_encoded       => 'F',
                                                    p_data          => g_data,
                                                    p_msg_count     => g_msg_count,
                                                    p_msg_index_out => g_msg_index_out);
                l_err_msg := l_err_msg || '. Error :' || g_data;
              END LOOP; --i in 1..g_msg_count
              l_err_flag := 'Y';
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_err_msg;
              x_return_message := x_return_message || '.' || l_err_msg;
            END IF; -- g_msg_count >= 1 THEN
          END IF; --g_return_status <> 'S' THEN
        END IF;
        --g_agr_rec.g_prj_tbl(p).prj_extra_rec.enable_project_wf_flag = 'Y' AND
      END LOOP; --FOR p IN 1..g_agr_rec.g_prj_tbl.COUNT LOOP
    END IF; --IF g_agr_rec.g_prj_tbl.count > 0 then
    -- If Any failure in Project Update then Return Error
    IF l_err_flag = 'Y' THEN
      x_return_status := gc_error;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := ' Exception in proj_status_update :' || SQLERRM;
      x_return_status  := gc_error;
  END proj_status_update;
  /*
  ** Procedure Name  process_credit_receiver
  ** Purpose:  For Creating Credit Receiver
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 03-Dec-13            Vipul Gosai      New
  */
  PROCEDURE process_credit_receiver(p_project_id         IN NUMBER,
                                    p_prj_crd_recver_tbl IN OUT g_prj_crd_recver_tbl_t,
                                    x_return_status      OUT VARCHAR2,
                                    x_return_message     OUT VARCHAR2) IS

    lv_salesrep_name VARCHAR2(400); ---added by mousami CR24557
    lv_record_count  NUMBER; ---added by mousami  CR24557
    lv_task_exp EXCEPTION;
    lv_crdt_recvr_exp EXCEPTION;
    lv_insert_exp EXCEPTION;

  BEGIN
    IF p_prj_crd_recver_tbl.COUNT > 0 THEN
      BEGIN
        gv_poo := 'For Credit Receiver';
        write_into_file('Under Credit Receiver');
        ---added by Mousami CR24557 Start-----
        IF g_allow_cust_crdt_recvr = 'Y' THEN
          ---same credit receiver information will populate against each task
          FOR task_count IN 1 .. g_tasks_in.count LOOP
            --g_tasks_out(task_count).pa_project_id := g_tasks_in(task_count).p_project_id;

            ---write_into_file('Task_name in loop'|| g_tasks_in(task_count).task_name);--g_tasks_in(task_count).pa_task_id
            ---get task ID-----
            BEGIN
              IF g_tasks_in(task_count).pa_task_id IS NULL THEN
                SELECT task_id
                  INTO g_tasks_in(task_count).pa_task_id
                  FROM pa_tasks
                 WHERE project_id = p_project_id --g_project_out.pa_project_id
                   AND task_number = g_tasks_in(task_count).pa_task_number;
              END IF;
            EXCEPTION
              WHEN OTHERS THEN
                RAISE lv_task_exp;
            END;

            FOR cr IN 1 .. p_prj_crd_recver_tbl.COUNT LOOP
              BEGIN
                ---check record already exists in custom table
                SELECT COUNT(1)
                  INTO lv_record_count
                  FROM xxpa_task_comm_splits
                 WHERE project_id = p_project_id ---g_project_out.pa_project_id
                   AND task_id = g_tasks_in(task_count).pa_task_id
                   AND salesrep_id = p_prj_crd_recver_tbl(cr).salesrep_id;
              EXCEPTION
                WHEN OTHERS THEN
                  lv_record_count := 0;
              END;
              IF (lv_record_count < 1) THEN
                p_prj_crd_recver_tbl(cr).project_id := p_project_id; ---g_project_out.pa_project_id;
                p_prj_crd_recver_tbl(cr).last_update_date := SYSDATE;
                p_prj_crd_recver_tbl(cr).last_updated_by := fnd_profile.VALUE('user_id');
                p_prj_crd_recver_tbl(cr).creation_date := SYSDATE;
                p_prj_crd_recver_tbl(cr).created_by := fnd_profile.VALUE('user_id');
                p_prj_crd_recver_tbl(cr).last_update_login := fnd_profile.VALUE('user_id');
                p_prj_crd_recver_tbl(cr).record_version_number := 1;
                p_prj_crd_recver_tbl(cr).credit_receiver_id := xxpa3992_split_seq.NEXTVAL;
                p_prj_crd_recver_tbl(cr).task_id := g_tasks_in(task_count)
                                                    .pa_task_id;
                ----get Sales Paerson name----
                BEGIN
                  SELECT jrre.source_name
                    INTO lv_salesrep_name
                    FROM jtf_rs_resource_extns jrre, ra_salesreps_all rsa
                   WHERE jrre.RESOURCE_ID = rsa.resource_id
                     AND rsa.salesrep_id = p_prj_crd_recver_tbl(cr)
                        .salesrep_id
                     AND rsa.org_id = g_org_id;
                EXCEPTION
                  WHEN OTHERS THEN
                    RAISE lv_crdt_recvr_exp;
                END;
                gv_poo := 'Before Insert: Credit Receiver Custom table';
                --- write_into_file('Person_id'||p_prj_crd_recver_tbl(cr).person_id);
                ----insert the record in custom table
                BEGIN
                  INSERT INTO xxpa_task_comm_splits
                    (credit_receiver_id,
                     project_id,
                     project_number,
                     org_id,
                     task_id,
                     salesrep_id,
                     salesrep_name,
                     source,
                     credit_percentage,
                     start_date_active,
                     end_date_active,
                     creation_date,
                     created_by,
                     last_update_date,
                     last_updated_by)
                  VALUES
                    (p_prj_crd_recver_tbl          (cr).credit_receiver_id,
                     p_prj_crd_recver_tbl          (cr).project_id,
                     g_project_in.pa_project_number,
                     g_org_id,
                     p_prj_crd_recver_tbl          (cr).task_id,
                     p_prj_crd_recver_tbl          (cr).salesrep_id,
                     lv_salesrep_name,
                     'INTERFACE', ---hardcoded as record is creating through this event
                     p_prj_crd_recver_tbl          (cr).credit_percentage,
                     g_tasks_in                    (task_count)
                     .task_start_date,
                     g_tasks_in                    (task_count)
                     .task_completion_date,
                     p_prj_crd_recver_tbl          (cr).creation_date,
                     p_prj_crd_recver_tbl          (cr).created_by,
                     p_prj_crd_recver_tbl          (cr).last_update_date,
                     p_prj_crd_recver_tbl          (cr).last_updated_by);
                EXCEPTION
                  WHEN OTHERS THEN
                    ROLLBACK;
                    RAISE lv_insert_exp;
                END;
              END IF;
            END LOOP;
          END LOOP;
        ELSE
          ---added by Mousami CR24557 End-----
          FOR cr IN 1 .. p_prj_crd_recver_tbl.COUNT LOOP
            p_prj_crd_recver_tbl(cr).project_id := g_project_out.pa_project_id;
            p_prj_crd_recver_tbl(cr).last_update_date := SYSDATE;
            p_prj_crd_recver_tbl(cr).last_updated_by := fnd_profile.VALUE('user_id');
            p_prj_crd_recver_tbl(cr).creation_date := SYSDATE;
            p_prj_crd_recver_tbl(cr).created_by := fnd_profile.VALUE('user_id');
            p_prj_crd_recver_tbl(cr).last_update_login := fnd_profile.VALUE('user_id');
            p_prj_crd_recver_tbl(cr).record_version_number := 1;
            p_prj_crd_recver_tbl(cr).credit_receiver_id := pa_credit_receivers_s.NEXTVAL;
            gv_poo := 'Before Insert: Credit Receiver';
            INSERT INTO pa_credit_receivers
            VALUES
              (p_prj_crd_recver_tbl(cr).person_id,
               p_prj_crd_recver_tbl(cr).credit_type_code,
               p_prj_crd_recver_tbl(cr).project_id,
               p_prj_crd_recver_tbl(cr).last_update_date,
               p_prj_crd_recver_tbl(cr).last_updated_by,
               p_prj_crd_recver_tbl(cr).creation_date,
               p_prj_crd_recver_tbl(cr).created_by,
               p_prj_crd_recver_tbl(cr).last_update_login,
               p_prj_crd_recver_tbl(cr).start_date_active,
               p_prj_crd_recver_tbl(cr).credit_percentage,
               p_prj_crd_recver_tbl(cr).task_id,
               p_prj_crd_recver_tbl(cr).end_date_active,
               p_prj_crd_recver_tbl(cr).transfer_to_ar_flag,
               p_prj_crd_recver_tbl(cr).salesrep_id,
               p_prj_crd_recver_tbl(cr).budget_type_code,
               p_prj_crd_recver_tbl(cr).record_version_number,
               p_prj_crd_recver_tbl(cr).credit_receiver_id);
          END LOOP;
        END IF; ---added by Mousami CR24557
        --1..g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl.COUNT LOOP
      EXCEPTION
        WHEN lv_task_exp THEN
          write_into_file('Unable to get Task ID ' || gv_poo || SQLERRM);
          x_return_message := x_return_message || 'Unable to get Task ID ' ||
                              gv_poo || SQLERRM;
          x_return_status  := gc_error;
        WHEN lv_crdt_recvr_exp THEN
          write_into_file('Unable to get Sales Person Name ' || gv_poo ||
                          SQLERRM);
          x_return_message := x_return_message || 'Unable to get Task ID ' ||
                              gv_poo || SQLERRM;
          x_return_status  := gc_error;
        WHEN lv_insert_exp THEN
          write_into_file('Exception while insert in xxpa_task_comm_splits' ||
                          gv_poo || SQLERRM);
          x_return_message := x_return_message ||
                              '. Exception at Credit Receiver while insert in xxpa_task_comm_splits : ' ||
                              SQLERRM;
          x_return_status  := gc_error;
        WHEN OTHERS THEN
          write_into_file('Exception while insert ' || SQLERRM);
          x_return_message := x_return_message ||
                              '. Exception at Credit Receiver : ' ||
                              SQLERRM;
          x_return_status  := gc_error;
      END;
    END IF; --g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl.count > 0 THEN
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := ' Exception in process_credit_receiver :' ||
                          SQLERRM;
      x_return_status  := gc_error;
  END process_credit_receiver;

  /*
  ** Procedure Name  process_credit_rec_split
  ** Purpose:  For Creating Credit Receiver Split for NEOCRM_CN
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 10-May-23            Jai Shankar Kumar New
  */
  -- CR25098 - Created Procedure for Creating Credit Receiver Split for NEOCRM_CN - START
  PROCEDURE process_credit_rec_split(p_project_id             IN NUMBER,
                                     p_prj_crd_recver_split   IN VARCHAR,
                                     p_tasks_num              IN VARCHAR2,
                                     x_return_status         OUT VARCHAR2,
                                     x_return_message        OUT VARCHAR2)
  IS
    lv_salesrep_name   VARCHAR2(400);
    l_salesrep_id      NUMBER;
    lv_record_count    NUMBER;
    lv_task_exp        EXCEPTION;
    lv_crdt_recvr_exp  EXCEPTION;
    lv_insert_exp      EXCEPTION;
    l_pa_task_id       pa_tasks.task_id%TYPE;
    lv_start_date      pa_tasks.start_date%TYPE;
    lv_completion_date pa_tasks.completion_date%TYPE;

  BEGIN
    gv_poo := 'process_credit_rec_split';
    write_into_file(gv_poo || ' - ' || 'Start for Project Id: ' || p_project_id || ' - and Task Number: ' || p_tasks_num);

    BEGIN
      ---check if task is Created
      BEGIN
        SELECT task_id,
               start_date,
               completion_date
          INTO l_pa_task_id,
               lv_start_date,
               lv_completion_date
          FROM pa_tasks
         WHERE project_id = p_project_id
           AND task_number = p_tasks_num;

      EXCEPTION
        WHEN OTHERS THEN
          RAISE lv_task_exp;
      END;

      ----get Sales Paerson Id----
      BEGIN
        SELECT rsa.salesrep_id,
               jrre.source_name
          INTO l_salesrep_id,
               lv_salesrep_name
          FROM jtf_rs_resource_extns jrre, ra_salesreps_all rsa
         WHERE jrre.resource_id = rsa.resource_id
           -- AND rsa.salesrep_number = SUBSTR(p_prj_crd_recver_split, 1, INSTR(p_prj_crd_recver_split, '~')-1)
           AND jrre.source_number = SUBSTR(p_prj_crd_recver_split, 1, INSTR(p_prj_crd_recver_split, '~')-1)
           AND rsa.org_id = g_org_id;
      EXCEPTION
        WHEN OTHERS THEN
          RAISE lv_crdt_recvr_exp;
      END;
      write_into_file('After Validation - Task Id: ' || l_pa_task_id || ' - and Salesrep name: ' || lv_salesrep_name);

      ---check record already exists in custom table
      BEGIN
        SELECT COUNT(1)
          INTO lv_record_count
          FROM xxpa_task_comm_splits
         WHERE project_id = p_project_id ---g_project_out.pa_project_id
           AND task_id = l_pa_task_id
           AND salesrep_id = l_salesrep_id;
      EXCEPTION
        WHEN OTHERS THEN
          lv_record_count := 0;
      END;
      write_into_file('lv_record_count: ' || lv_record_count);

      IF (lv_record_count < 1)
      THEN
        gv_poo := 'Before Insert: Credit Receiver Custom table';
        ----insert the record in custom table
        BEGIN
          INSERT INTO xxpa_task_comm_splits
              (credit_receiver_id,
               project_id,
               project_number,
               org_id,
               task_id,
               salesrep_id,
               salesrep_name,
               source,
               credit_percentage,
               start_date_active,
               end_date_active,
               creation_date,
               created_by,
               last_update_date,
               last_updated_by)
            VALUES
              (pa_credit_receivers_s.NEXTVAL,
               p_project_id,
               g_project_in.pa_project_number,
               g_org_id,
               l_pa_task_id,
               l_salesrep_id,
               lv_salesrep_name,
               'INTERFACE', ---hardcoded as record is creating through this event
               SUBSTR(p_prj_crd_recver_split, INSTR(p_prj_crd_recver_split, '~')+1, LENGTH(p_prj_crd_recver_split) - (INSTR(p_prj_crd_recver_split, '~')+1)),
               lv_start_date,
               lv_completion_date,
               SYSDATE,
               fnd_profile.VALUE('user_id'),
               SYSDATE,
               fnd_profile.VALUE('user_id'));
        EXCEPTION
          WHEN OTHERS THEN
            write_into_file('Exception Raised while Inserting Record in xxpa_task_comm_splits: ' || SQLERRM);
            ROLLBACK;
            RAISE lv_insert_exp;
        END;
      END IF; -- IF (lv_record_count < 1)

    EXCEPTION
      WHEN lv_task_exp THEN
        write_into_file('Unable to get Task ID ' || gv_poo || SQLERRM);
        x_return_message := x_return_message || 'Unable to get Task ID ' || gv_poo || SQLERRM;
        x_return_status  := gc_error;
      WHEN lv_crdt_recvr_exp THEN
        write_into_file('Unable to get Sales Person Name ' || gv_poo || SQLERRM);
        x_return_message := x_return_message || 'Unable to get Task ID ' || gv_poo || SQLERRM;
        x_return_status  := gc_error;
      WHEN lv_insert_exp THEN
        write_into_file('Exception while insert in xxpa_task_comm_splits' || gv_poo || SQLERRM);
        x_return_message := x_return_message ||
                            '. Exception at Credit Receiver while insert in xxpa_task_comm_splits : ' || SQLERRM;
        x_return_status  := gc_error;
      WHEN OTHERS THEN
        write_into_file('Exception while insert ' || SQLERRM);
        x_return_message := x_return_message || '. Exception at Credit Receiver : ' || SQLERRM;
        x_return_status  := gc_error;
    END;

  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := ' Exception in process_credit_receiver :' || SQLERRM;
      x_return_status  := gc_error;
  END process_credit_rec_split;
  -- CR25098 - Created Procedure for Creating Credit Receiver Split for NEOCRM_CN - END

  /*
  ** Procedure Name  reserve_amt_cnv
  ** Purpose:  For converting reserve amount into project functional currency
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 03-Dec-13            Vipul Gosai      New
  ** 14-Oct-14            Vipul Gosai      Convert the reserve amounts to Project Functional currency
  before the Revenue budget is created for Equipment Projects - HPQC-13791
  */
  PROCEDURE reserve_amt_cnv(x_return_status  OUT VARCHAR2,
                            x_return_message OUT VARCHAR2) IS
    l_projfunc_currency_code    pa_project_fundings.projfunc_currency_code%TYPE;
    l_funding_currency_code     pa_project_fundings.funding_currency_code%TYPE;
    l_projfunc_exchange_rate    pa_project_fundings.projfunc_exchange_rate%TYPE;
    l_projfunc_allocated_amount pa_project_fundings.projfunc_allocated_amount%TYPE;
    l_allocated_amount          pa_project_fundings.allocated_amount%TYPE;
    l_precision                 gl_currencies.PRECISION%TYPE;
    l_tot_converted_amt         NUMBER;
    l_tot_revenue_amt           NUMBER DEFAULT 0;
  BEGIN
    gv_poo := 'Converting Reserve Amount into Project Functional currency';
    write_into_file(gv_poo);
    IF g_budget_tbl.COUNT > 0 THEN
      FOR budget IN 1 .. g_budget_tbl.COUNT LOOP
        --Init Variable
        l_allocated_amount := 0;
        --Derive Details from Project Funding
        BEGIN
          write_into_file(g_budget_tbl(budget).g_budget_prj_tbl(budget)
                          .p_pa_project_id || '(((((' ||
                           g_agr_rec.agr_main_rec.agreement_id);
          SELECT projfunc_currency_code,
                 funding_currency_code,
                 projfunc_exchange_rate,
                 allocated_amount,
                 projfunc_allocated_amount,
                 gc.PRECISION
            INTO l_projfunc_currency_code,
                 l_funding_currency_code,
                 l_projfunc_exchange_rate,
                 l_allocated_amount,
                 l_projfunc_allocated_amount,
                 l_precision
            FROM pa_project_fundings ppf, gl_currencies gc
           WHERE project_id = g_budget_tbl(budget).g_budget_prj_tbl(budget)
                .p_pa_project_id
             AND agreement_id = g_agr_rec.agr_main_rec.agreement_id
             AND funding_category = 'ORIGINAL'
             AND ppf.projfunc_currency_code = gc.currency_code;
          write_into_file('Funding Amount in Reserve_amt_conv : ' ||
                          l_allocated_amount || '-' ||
                          l_projfunc_allocated_amount);
        EXCEPTION
          WHEN TOO_MANY_ROWS THEN
            BEGIN
              SELECT projfunc_currency_code,
                     funding_currency_code,
                     projfunc_exchange_rate,
                     SUM(allocated_amount),
                     SUM(projfunc_allocated_amount),
                     gc.PRECISION
                INTO l_projfunc_currency_code,
                     l_funding_currency_code,
                     l_projfunc_exchange_rate,
                     l_allocated_amount,
                     l_projfunc_allocated_amount,
                     l_precision
                FROM pa_project_fundings ppf, gl_currencies gc
               WHERE project_id = g_budget_tbl(budget).g_budget_prj_tbl(budget)
                    .p_pa_project_id
                 AND agreement_id = g_agr_rec.agr_main_rec.agreement_id
                    --AND funding_category = 'ORIGINAL'
                 AND ppf.projfunc_currency_code = gc.currency_code
               GROUP BY projfunc_currency_code,
                        funding_currency_code,
                        projfunc_exchange_rate,
                        gc.PRECISION;
              write_into_file('Funding Amount in Reserve_amt_conv : ' ||
                              l_allocated_amount || '-' ||
                              l_projfunc_allocated_amount);
            EXCEPTION
              WHEN OTHERS THEN
                x_return_message := ' Unhandle Exception while deriving Project Funding information ' ||
                                    SQLERRM;
                x_return_status  := gc_error;
                write_into_file(x_return_message);
            END;
          WHEN OTHERS THEN
            x_return_message := ' Unhandle Exception while deriving Project Funding information ' ||
                                SQLERRM;
            x_return_status  := gc_error;
            write_into_file(x_return_message);
        END;
        write_into_file('Currency : ' || l_projfunc_currency_code || '***' ||
                        l_funding_currency_code);
        IF l_projfunc_currency_code <> l_funding_currency_code THEN
          -- Conversion is required
          IF g_budget_tbl(budget).g_budget_line_in_tbl.COUNT > 0 THEN
            l_tot_converted_amt := 0;
            l_tot_revenue_amt   := 0;
            FOR line IN 1 .. g_budget_tbl(budget).g_budget_line_in_tbl.COUNT LOOP
              -- Sum of task level Revenue Amount
              l_tot_revenue_amt := l_tot_revenue_amt + g_budget_tbl(budget).g_budget_line_in_tbl(line)
                                  .revenue;
              IF line = g_budget_tbl(budget).g_budget_line_in_tbl.COUNT THEN
                --Last Task
                g_budget_tbl(budget).g_budget_line_in_tbl(line).revenue := l_projfunc_allocated_amount -
                                                                           l_tot_converted_amt;
              ELSE
                --Normal Conversion
                SELECT ROUND(g_budget_tbl(budget).g_budget_line_in_tbl(line)
                             .revenue * l_projfunc_exchange_rate,
                             l_precision)
                  INTO g_budget_tbl(budget).g_budget_line_in_tbl(line)
                       .revenue
                  FROM DUAL;
                l_tot_converted_amt := l_tot_converted_amt + g_budget_tbl(budget).g_budget_line_in_tbl(line)
                                      .revenue;
              END IF;
              write_into_file('Revenue Amount ' || g_budget_tbl(budget).g_budget_line_in_tbl(line)
                              .revenue);
              write_into_file('Total Revenue Amount ' || l_tot_revenue_amt);
              write_into_file('Task ID ' || g_budget_tbl(budget).g_budget_line_in_tbl(line)
                              .pa_task_id);
              write_into_file('pm_task_reference ' || g_budget_tbl(budget).g_budget_line_in_tbl(line)
                              .pm_task_reference);
            END LOOP;
          END IF;
          --IF g_budget_tbl(budget).g_budget_line_in_tbl.COUNT > 0 THEN
          --IF l_tot_revenue_amt <> l_allocated_amount THEN --Commented for RT7993903
          l_precision := nvl(l_precision, 2); --Added for RT7993903
          IF ROUND(l_tot_revenue_amt, l_precision) <>
             round(l_allocated_amount, l_precision) THEN
            --Added for RT7993903

            x_return_message := ' Project Funding amount is not same as Total Reserve Amout for Project Refernce :' || g_budget_tbl(budget).g_budget_prj_tbl(budget)
                               .p_pm_project_reference;
            x_return_status  := gc_error;
            EXIT;
          END IF; --IF l_tot_revenue_amt <> l_allocated_amount THEN
        END IF;
        --IF  l_projfunc_currency_code <> l_funding_currency_code THEN
      END LOOP; --FOR budget IN 1..g_budget_tbl.COUNT LOOP
    END IF; -- g_budget_tbl.COUNT > 0 THEN
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := ' Exception in reserve_amt_cnv :' || SQLERRM;
      x_return_status  := gc_error;
  END reserve_amt_cnv;
  /*
  ** Procedure Name  cr_drft_budget_n_baseline
  ** Purpose:  For Creating Draft Budget and Baseline it
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 03-Dec-13            Vipul Gosai      New
  ** 14-Oct-14            Vipul Gosai      Convert the reserve amounts to Project Functional currency
  before the Revenue budget is created for Equipment Projects - HPQC-13791
  */
  PROCEDURE cr_drft_budget_n_baseline(x_return_status  OUT VARCHAR2,
                                      x_return_message OUT VARCHAR2) IS
    l_workflow_started VARCHAR2(2) := 0;
  BEGIN
    gv_poo := 'Create Budget and Budget Lines for Equipment Projects';
    --Start Convert the reserve amounts to Project Functional currency before the Revenue budget is created for Equipment Projects - HPQC-13791
    BEGIN
      reserve_amt_cnv(x_return_status  => x_return_status,
                      x_return_message => x_return_message);
    EXCEPTION
      WHEN OTHERS THEN
        x_return_message := ' Unhandled Exception raised in reserve_amt_cnv :' ||
                            SQLERRM;
        x_return_status  := gc_error;
    END;
    --End Convert the reserve amounts to Project Functional currency before the Revenue budget is created for Equipment Projects - HPQC-13791
    IF NVL(x_return_status, 'XX') <> gc_error THEN
      IF g_budget_tbl.COUNT > 0 THEN
        FOR budget IN 1 .. g_budget_tbl.COUNT LOOP
          ---Added for CR24470
          if g_budget_tbl(budget).g_budget_prj_tbl(budget)
           .budget_type_code is null or g_budget_tbl(budget).g_budget_prj_tbl(budget)
             .budget_type_code = 'AR' THEN
            BEGIN
              write_into_file('pa_budget_pub.create_draft_budget ' || g_budget_tbl(budget).g_budget_prj_tbl(budget)
                              .p_pm_project_reference || '**' || g_budget_tbl(budget).g_budget_prj_tbl(budget)
                              .p_pa_project_id);
              write_into_file('Budget Line Count : ' || g_budget_tbl(budget)
                              .g_budget_line_in_tbl.count);
              write_into_file('Budget Version Name : ' || g_budget_tbl(budget).g_budget_prj_tbl(budget)
                              .budget_version_name);
              write_into_file('Budget Version Name : ' ||
                              g_proj_bud_version_name);

              for i in g_budget_tbl(budget).g_budget_line_in_tbl.first .. g_budget_tbl(budget)
                                                                          .g_budget_line_in_tbl.last loop
                write_into_file('Budget Version Name : ' || g_budget_tbl(budget).g_budget_line_in_tbl(i)
                                .pa_task_id);
                write_into_file('Budget Task Ref : ' || g_budget_tbl(budget).g_budget_line_in_tbl(i)
                                .pm_task_reference);
                write_into_file('Budget revenue Amount : ' || g_budget_tbl(budget).g_budget_line_in_tbl(i)
                                .revenue);
              end loop;
              pa_budget_pub.create_draft_budget(p_api_version_number   => gc_api_version_number,
                                                p_commit               => fnd_api.g_false,
                                                p_init_msg_list        => gc_init_msg_list,
                                                p_msg_count            => g_msg_count,
                                                p_msg_data             => g_msg_data,
                                                p_return_status        => g_return_status,
                                                p_pm_product_code      => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                                p_pm_budget_reference  => g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                                                          .p_pm_project_reference,
                                                p_pa_project_id        => g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                                                          .p_pa_project_id,
                                                p_pm_project_reference => g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                                                          .p_pm_project_reference ||
                                                                           'THR API',
                                                p_budget_version_name  => g_proj_bud_version_name, --g_budget_tbl(budget).g_budget_prj_tbl(budget).budget_version_name,
                                                p_budget_type_code     => 'AR',
                                                p_entry_method_code    => g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                                                          .p_rev_budget_entry_method_cd,
                                                p_budget_lines_in      => g_budget_tbl(budget)
                                                                          .g_budget_line_in_tbl,
                                                p_budget_lines_out     => g_budget_tbl(budget)
                                                                          .g_budget_line_out_tbl);
              write_into_file('Budget Status for ' || g_budget_tbl(budget).g_budget_prj_tbl(budget)
                              .p_pm_project_reference || '**'
                              --|| g_msg_count|| '.***.'|| g_msg_data|| '.'
                              --Commented as this is not printing error to log table
                              || g_return_status);
              IF g_return_status <> 'S' THEN
                x_return_status := gc_error;
              END IF;
            EXCEPTION
              WHEN OTHERS THEN
                x_return_message := ' Exception in pa_budget_pub.create_draft_budget :' ||
                                    SQLERRM;
                x_return_status  := gc_error;
            END;
            IF NVL(x_return_status, 'XX') <> gc_error THEN
              gv_poo := 'Create Budget Baseline for Equipment Project';
              BEGIN
                pa_budget_pub.baseline_budget(p_api_version_number   => gc_api_version_number,
                                              p_commit               => fnd_api.g_false,
                                              p_init_msg_list        => gc_init_msg_list,
                                              p_msg_count            => g_msg_count,
                                              p_msg_data             => g_msg_data,
                                              p_return_status        => g_return_status,
                                              p_workflow_started     => l_workflow_started,
                                              p_pm_product_code      => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                              p_pa_project_id        => g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                                                        .p_pa_project_id,
                                              p_pm_project_reference => g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                                                        .p_pm_project_reference ||
                                                                         'THR API',
                                              p_budget_type_code     => 'AR');
                write_into_file('pa_budget_pub.Baseline_Budget ' || g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                .p_pm_project_reference || '**' || g_budget_tbl(budget).g_budget_prj_tbl(budget)
                                .p_pa_project_id || '**' || g_return_status);
                IF g_return_status <> 'S' THEN
                  x_return_status := gc_error;
                END IF;
              EXCEPTION
                WHEN OTHERS THEN
                  x_return_message := ' Exception in pa_budget_pub.Baseline_Budget :' ||
                                      SQLERRM;
                  x_return_status  := gc_error;
              END;
            END IF; --IF NVL(x_return_status,'XX') <> gc_error THEN
          end if; --- Added for CR24470
        END LOOP; --FOR budget IN 1..g_budget_tbl.COUNT LOOP
      END IF; -- g_budget_tbl.COUNT > 0 THEN
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := ' Exception in cr_drft_budget_n_baseline :' ||
                          SQLERRM;
      x_return_status  := gc_error;
  END cr_drft_budget_n_baseline;
  /*
  ** Procedure Name  subproj_assoc
  ** Purpose:  For Subproject association
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 28-Nov-13            Vipul Gosai      New
  ** 10-Oct-14            Vipul Gosai      Added for HPQC:13867 Sub Project association failing if
  Project is added to existing agreement having multiple funding lines
  ** 17-Oct-14            Vipul Gosai      Added for HPQC:13867 Parent Project should be First project added in the funding
  */
  PROCEDURE subproj_assoc(x_return_status  OUT VARCHAR2,
                          x_return_message OUT VARCHAR2) IS
    l_agreement_id        NUMBER;
    l_task_id             NUMBER;
    l_parent_project_id   NUMBER;
    l_max_msg_count       NUMBER := 100;
    l_child_count         NUMBER := 0;
    l_min_proj_funding_id pa_project_fundings.project_funding_id%TYPE;
    l_sys_program_flag    pa_projects_all.sys_program_flag%TYPE;
    subproj_e EXCEPTION;
    l_p_program_links_tbl pa_project_pub.program_links_tbl_type;
    CURSOR cur_proj_fund IS
      SELECT DISTINCT agreement_id,
                      ppf.project_id,
                      ppa.segment1 project_num,
                      ppa.sys_program_flag
        FROM pa_project_fundings ppf, pa_projects_all ppa
       WHERE agreement_id = l_agreement_id
         AND ppf.project_funding_id > l_min_proj_funding_id
         AND ppa.project_id = ppf.project_id
         AND ppa.sys_program_flag <> 'Y'
         AND NOT EXISTS
       (SELECT 'x'
                FROM pa_fin_structures_links_v pfsl
               WHERE sub_project_id = ppf.project_id);
  BEGIN
    write_into_file('SubProject Association');
    -- Under one agreement, find all the projects, the first project will become parent and rest all become child
    -- First project is always Parent Project
    gv_poo         := 'Sub Project Association';
    l_agreement_id := g_agr_rec.agr_main_rec.agreement_id;
    write_into_file('Agreement ID ' || l_agreement_id);
    --Derive Min Project Funding ID
    BEGIN
      SELECT MIN(project_funding_id)
        INTO l_min_proj_funding_id
        FROM pa_project_fundings ppf
       WHERE agreement_id = l_agreement_id;
    EXCEPTION
      WHEN OTHERS THEN
        x_return_message := '.Agreement Funding Not Found : ' || SQLERRM;
        x_return_status  := gc_error;
        RAISE subproj_e;
    END;
    --Derive Min Project Funding ID
    IF l_min_proj_funding_id IS NOT NULL THEN
      BEGIN
        SELECT ppf.project_id, ppa.sys_program_flag
          INTO l_parent_project_id, l_sys_program_flag
          FROM pa_project_fundings ppf, pa_projects ppa
         WHERE project_funding_id = l_min_proj_funding_id
           AND ppa.project_id = ppf.project_id;
      EXCEPTION
        WHEN OTHERS THEN
          x_return_message := '.Funding Project Not Found : ' || SQLERRM;
          x_return_status  := gc_error;
          RAISE subproj_e;
      END;
    ELSE
      write_into_file('No Funding Found.... There is some issue....Raise Exception here');
      x_return_message := '.Agreement Funding Not Found : ' || SQLERRM;
      x_return_status  := gc_error;
      RAISE subproj_e;
    END IF;
    IF l_sys_program_flag = 'N' THEN
      write_into_file('Making Parent ' || l_parent_project_id);
      BEGIN
        pa_project_pub.setup_project_as_program(p_api_version                => gc_api_version_number,
                                                p_init_msg_list              => gc_init_msg_list,
                                                p_commit                     => fnd_api.g_false,
                                                p_debug_mode                 => 'Y',
                                                p_max_msg_count              => l_max_msg_count,
                                                p_project_id                 => l_parent_project_id,
                                                p_sys_program_flag           => 'Y',
                                                p_allow_multi_program_rollup => 'N',
                                                x_return_status              => g_return_status,
                                                x_msg_count                  => g_msg_count,
                                                x_msg_data                   => g_msg_data);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_message := '.Exception SETUP_PROJECT_AS_PROGRAM  : ' ||
                              SQLERRM;
          x_return_status  := gc_error;
      END;
      write_into_file('Making Parent status ' || g_return_status);
      IF NVL(g_return_status, 'S') <> 'S' THEN
        x_return_status := gc_error;
      END IF;
      write_into_file('Getting task ID :' || l_task_id);
    ELSE
      write_into_file('Already Parent Project :' || l_parent_project_id);
    END IF;
    -- Derive first Task
    SELECT task_id
      INTO l_task_id
      FROM pa_tasks
     WHERE project_id = l_parent_project_id
       AND ROWNUM = 1;
    IF NVL(x_return_status, 'XX') <> gc_error THEN
      FOR rec_proj_fund IN cur_proj_fund LOOP
        write_into_file('Adding Project:' || l_child_count);
        l_child_count := l_child_count + 1;
        l_p_program_links_tbl(l_child_count).parent_project_id := l_parent_project_id;
        l_p_program_links_tbl(l_child_count).task_id := l_task_id;
        l_p_program_links_tbl(l_child_count).structure_type := 'FINANCIAL';
        l_p_program_links_tbl(l_child_count).sub_project_id := rec_proj_fund.project_id;
      END LOOP;
      IF l_p_program_links_tbl.COUNT >= 1 THEN
        write_into_file('Now Calling Sub Proj Association...');
        BEGIN
          pa_project_pub.create_program_links(p_api_version       => gc_api_version_number,
                                              p_init_msg_list     => gc_init_msg_list,
                                              p_commit            => fnd_api.g_false,
                                              p_debug_mode        => 'Y',
                                              p_max_msg_count     => l_max_msg_count,
                                              p_program_links_tbl => l_p_program_links_tbl,
                                              x_return_status     => g_return_status,
                                              x_msg_count         => g_msg_count,
                                              x_msg_data          => g_msg_data);
        EXCEPTION
          WHEN OTHERS THEN
            x_return_message := '.Exception CREATE_PROGRAM_LINKS  : ' ||
                                SQLERRM;
            x_return_status  := gc_error;
        END;
        write_into_file('Adding Child status ' || l_parent_project_id || '**' ||
                        g_return_status);
        IF g_return_status <> 'S' THEN
          x_return_status := gc_error;
        END IF;
      END IF;
    END IF; --IF  NVL(x_return_status,'XX') <> gc_error THEN
  EXCEPTION
    WHEN subproj_e THEN
      write_into_file(x_return_status || '**' || x_return_message);
    WHEN OTHERS THEN
      x_return_message := '.Unhandled SubProject Association Issue  : ' ||
                          SQLERRM;
      x_return_status  := gc_error;
  END subproj_assoc;
  /*
  ** Procedure Name  agr_baseline_budget
  ** Purpose:  For Agreement baseline
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 28-Nov-13            Vipul Gosai      New
  */
  PROCEDURE agr_baseline_budget(x_return_status  OUT VARCHAR2,
                                x_return_message OUT VARCHAR2) IS
    lv_prev_funding_ref varchar2(200) := NULL; -- Added for CR24470
    l_create_baseline_budget  VARCHAR2(10) := 'Y' ; -- Added for Defect # 32524
  BEGIN
    gv_poo := 'Base line Budget for each projects';
    IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT > 0 THEN
      --- FOR f IN 1 .. g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT LOOP  commented for CR24470
      --- Added for CR24470
      FOR f IN g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.first .. g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.last LOOP
        BEGIN
          write_into_file('pa_agreement_pub.create_baseline_budget ' ||
                          UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                .pa_project_number) || '**' || g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                          .baseline_funding_flag);
          write_into_file(g_agr_rec.agr_extra_rec.pm_product_code || '-' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .project_id || '-' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .pm_funding_reference || '-' || g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                          .baseline_funding_flag);
          IF g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
           .baseline_funding_flag = 'Y'
          --           and
          --              (lv_prev_funding_ref is null or g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
          --               .pm_funding_reference <> lv_prev_funding_ref
          --               )
           THEN
            /* Addition Start for CR24470 */
            lv_prev_funding_ref := g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                   .pm_funding_reference;
            write_into_file('Executing baseline Funding for Funding Reference :' ||
                            lv_prev_funding_ref);

            l_create_baseline_budget := 'Y' ;
            /* Adding for Defect # 32524 */
            FOR i in 1..f LOOP

                IF f > 1 AND g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).project_id =
                             g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(i).project_id  THEN
                    l_create_baseline_budget := 'N' ;
                END IF ;

            END LOOP ;
            /* End of Adding for Defect # 32524 */
            IF l_create_baseline_budget = 'Y' THEN  -- Added for Defect # 32524
            /* Addition Ends for CR24470 */
            pa_agreement_pub.create_baseline_budget(p_api_version_number   => gc_api_version_number,
                                                    p_commit               => fnd_api.g_false,
                                                    p_init_msg_list        => gc_init_msg_list,
                                                    p_msg_count            => g_msg_count,
                                                    p_msg_data             => g_msg_data,
                                                    p_return_status        => g_return_status,
                                                    p_pm_product_code      => g_agr_rec.agr_extra_rec.pm_product_code,
                                                    p_pm_budget_reference  => g_proj_bud_version_name, -- g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).pm_funding_reference,
                                                    p_pa_project_id        => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                              .project_id,
                                                    p_pm_project_reference => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                              .pm_funding_reference,
                                                    p_change_reason_code   => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR);

          END IF ;
          END IF;
          --g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f).baseline_funding_flag= 'Y' THEN
          write_into_file('Create Baseline Budget Status ' || g_msg_count ||
                          '.***.' || g_return_status);
          IF NVL(g_return_status, 'XX') <> 'S' THEN
            x_return_status := gc_error;
            IF g_msg_count >= 1 THEN
              FOR i IN 1 .. g_msg_count LOOP
                pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                    p_msg_index     => i,
                                                    p_encoded       => 'F',
                                                    p_data          => g_data,
                                                    p_msg_count     => g_msg_count,
                                                    p_msg_index_out => g_msg_index_out);
              END LOOP; --i in 1..g_msg_count
              write_into_file(g_data);
              x_return_message := g_data;
            END IF; -- g_msg_count >= 1 THEN
          END IF; --g_return_status <> 'S' THEN
        EXCEPTION
          WHEN OTHERS THEN
            x_return_message := ' Exception Baseline Funding for Project# ' ||
                                UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                      .pa_project_number) || '. ' ||
                                SQLERRM;
            x_return_status  := gc_error;
        END;
        IF g_return_status <> 'S' THEN
          x_return_status := gc_error;
        END IF;
      END LOOP; -- LOOP p_agr_rec.g_prj_funding_rec.prj_funding_main_tbl
    END IF;
    --g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.count > 0 then
    -- Base line Budget for each projects END
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := '.Agreement Baseline Budget Exception : ' ||
                          SQLERRM;
      x_return_status  := gc_error;
      write_into_file(dbms_utility.format_error_stack || '-' ||
                      dbms_utility.format_error_backtrace); ---Added for CR24470
  END agr_baseline_budget;
  /*
  ** Procedure Name  : add_agr_funding
  ** Purpose:  For Adding the funding to Existing Agreement
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 26-Nov-13            Vipul Gosai      New
  */
  PROCEDURE add_agr_funding(x_return_status  OUT VARCHAR2,
                            x_return_message OUT VARCHAR2) IS
    l_funding_id          NUMBER;
    l_funding_id_out      NUMBER;
    l_agr_fund_err        VARCHAR2(1) := 'N';
    l_funding_category    VARCHAR2(200) := 'ADDITIONAL';
    l_funding_count       NUMBER;
    l_funding_amount      NUMBER;
    l_funding_attr_amount NUMBER;
    e_no_funding_change EXCEPTION;
    e_skip_positive_funding EXCEPTION; -- Added for Funding Allocation error when positive funding updates happens in the earlier task in payload
    e_skip_negative_funding EXCEPTION; -- Added for Funding Allocation error when positive funding updates happens in the earlier task in payload
  BEGIN
    gv_poo := 'Adding Funding Information';
    IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT > 0 THEN
      --Negative Funding Change -- Added for Funding Allocation error when positive funding updates happens in the earlier task in payload
      write_into_file('Process Negative Funding Change');
      FOR f IN 1 .. g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT LOOP
        -- Derive the Project ID out of Project Number
        l_funding_category := 'ORIGINAL'; --Added as part of Phase 3B
        BEGIN
          SELECT project_id,
                 NVL(pm_project_reference, segment1), -- Added nvl condition for RT6754084
                 l_funding_category, --'ORIGINAL'
                 baseline_funding_flag,
                 g_agr_rec.agr_main_rec.agreement_id
            INTO g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .project_id,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .pm_funding_reference,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .funding_category,
                 g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                 .baseline_funding_flag,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .agreement_id
            FROM pa_projects
           WHERE UPPER(segment1) =
                 UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                       .pa_project_number);
          write_into_file('Funding in for derived for project ' ||
                          UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                .pa_project_number));
          --Added as part of Phase 3B
          IF g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
           .pa_task_number IS NOT NULL THEN
            BEGIN
              SELECT task_id
                INTO g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                     .task_id
                FROM pa_tasks
               WHERE project_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                    .project_id
                 AND task_number = g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                    .pa_task_number;
            EXCEPTION
              WHEN OTHERS THEN
                write_into_file('Exception in Task Number Funding :' ||
                                SUBSTR(SQLERRM, 1, 200));
            END;
          END IF;
          BEGIN
            SELECT COUNT(1)
              INTO l_funding_count
              FROM pa_project_fundings a,
			       pa_projects b
             WHERE upper(segment1) =
                   upper(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                         .pa_project_number)
               AND b.project_id = a.project_id
               AND (g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                    .task_id IS NULL OR a.task_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                    .task_id);
            IF l_funding_count = 0 THEN
              l_funding_category := 'ORIGINAL';
            ELSE
              l_funding_category := 'ADDITIONAL';
            END IF;
            g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).funding_category := l_funding_category;
          EXCEPTION
            WHEN OTHERS THEN
              write_into_file('New Funding');
          END;
          write_into_file('Project Id : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .project_id);
          write_into_file('Task Id : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .task_id);
          write_into_file('Task Number : ' || g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                          .pa_task_number);
          write_into_file('Funding Count : ' || l_funding_count ||
                          '. Funding Amount : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .allocated_amount);
          l_funding_amount      := 0;
          l_funding_attr_amount := 0;
          --Check for Funding Amount from Attribute1
          --IF THEN
          --IF gv_source_system IN ( 'FOE', 'ITS_SIEBEL') and l_funding_count <> 0 THEN
          IF g_agr_partial_update = 'Y' AND l_funding_count <> 0 THEN
            -- Added by vinod
            SELECT SUM(NVL(allocated_amount, 0))
              INTO l_funding_amount
              FROM pa_project_fundings
             WHERE project_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                  .project_id
               AND (g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id IS NULL OR task_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id);
            SELECT SUM(to_number(NVL(decode(ascii(attribute2),0,NULL,attribute2),0)))
              INTO l_funding_attr_amount
              FROM pa_project_fundings
             WHERE project_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                  .project_id
               AND (g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id IS NULL OR task_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id);
          END IF;
          write_into_file(g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .allocated_amount);
          write_into_file(l_funding_amount);
          IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
           .allocated_amount - NVL(l_funding_amount, 0) >= 0 THEN
            --and l_funding_count > 0 THEN
            raise e_skip_positive_funding;
          END IF;
          g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).allocated_amount := g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                                  .allocated_amount -
                                                                                   NVL(l_funding_amount,
                                                                                       0);
          g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).attribute2 := g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                            .attribute2 -
                                                                             NVL(l_funding_attr_amount,
                                                                                 0);
          write_into_file('Funding Count : ' || l_funding_count ||
                          '. Funding Amount : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .allocated_amount);
          IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
           .attribute2 = 0 AND g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
             .allocated_amount = 0 AND l_funding_count > 0 THEN
            raise e_no_funding_change;
          END IF;
          --
          -- Call Add Funding API
          BEGIN
            l_funding_id_out := NULL;
            l_funding_id     := NULL;
            g_msg_data       := NULL;
            pa_agreement_pub.add_funding(p_api_version_number   => gc_api_version_number,
                                         p_commit               => fnd_api.g_false,
                                         p_init_msg_list        => gc_init_msg_list,
                                         p_msg_count            => g_msg_count,
                                         p_msg_data             => g_msg_data,
                                         p_return_status        => g_return_status,
                                         p_pm_product_code      => g_agr_rec.agr_extra_rec.pm_product_code,
                                         p_pm_funding_reference => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .pm_funding_reference,
                                         p_funding_id           => l_funding_id,
                                         p_pa_project_id        => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .project_id,
                                         p_pa_task_id           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .task_id,
                                         p_agreement_id         => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .agreement_id,
                                         p_allocated_amount     => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .allocated_amount,
                                         p_date_allocated       => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .date_allocated,
                                         p_desc_flex_name       => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .desc_flex_name,
                                         p_attribute_category   => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute_category,
                                         p_attribute1           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute1,
                                         p_attribute2           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute2,
                                         p_attribute3           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute3,
                                         p_attribute4           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute4,
                                         p_attribute5           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute5,
                                         p_attribute6           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute6,
                                         p_attribute7           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute7,
                                         p_attribute8           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute8,
                                         p_attribute9           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute9,
                                         p_attribute10          => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute10,
                                         p_funding_id_out       => l_funding_id_out,
                                         p_funding_category     => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .funding_category);
            write_into_file('Add funding status for project ' ||
                            UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                  .pa_project_number) || '**' ||
                            g_return_status);

            IF g_return_status <> 'S' THEN
              x_return_status := gc_error;
              l_agr_fund_err  := 'Y';
              x_return_status := gc_error;
              IF g_msg_count >= 1 THEN
                FOR i IN 1 .. g_msg_count LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                END LOOP; --i in 1..g_msg_count
                write_into_file(g_data);
                x_return_message := x_return_message || g_data;
              END IF; -- g_msg_count >= 1 THEN
              EXIT;
            END IF; --g_return_status <> 'S' THEN
          EXCEPTION
            WHEN OTHERS THEN
              x_return_status  := gc_error;
              l_agr_fund_err   := 'Y';
              x_return_message := ' Exception Add Funding for Project# ' ||
                                  UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                        .pa_project_number) || '. ' ||
                                  SQLERRM;
          END;
        EXCEPTION
          WHEN e_skip_positive_funding THEN
            write_into_file('Skiped Positive Funding');
          WHEN e_no_funding_change THEN
            write_into_file('No Change in Funding Amount');
          WHEN NO_DATA_FOUND THEN
            x_return_status  := gc_error;
            x_return_message := ' Project details not found for Project# ' ||
                                UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                      .pa_project_number);
            l_agr_fund_err   := 'Y';
          WHEN OTHERS THEN
            x_return_status  := gc_error;
            x_return_message := ' Exception Project details not found for Project# ' ||
                                UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                      .pa_project_number) || '. ' ||
                                SQLERRM;
            l_agr_fund_err   := 'Y';
        END;
      END LOOP;
      --Positive Funding Change-- Added for Funding Allocation error when positive funding updates happens in the earlier task in payload
      write_into_file('Process Positive Funding Change');
      FOR f IN 1 .. g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT LOOP
        -- Derive the Project ID out of Project Number
        l_funding_category := 'ORIGINAL'; --Added as part of Phase 3B
        BEGIN
          SELECT project_id,
                 NVL(pm_project_reference, segment1), -- Added nvl condition for RT6754084
                 l_funding_category, --'ORIGINAL'
                 baseline_funding_flag,
                 g_agr_rec.agr_main_rec.agreement_id
            INTO g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .project_id,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .pm_funding_reference,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .funding_category,
                 g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                 .baseline_funding_flag,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .agreement_id
            FROM pa_projects
           WHERE UPPER(segment1) =
                 UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                       .pa_project_number);
          write_into_file('Funding in for derived for project ' ||
                          UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                .pa_project_number));
          --Added as part of Phase 3B
          IF g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
           .pa_task_number IS NOT NULL THEN
            BEGIN
              SELECT task_id
                INTO g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                     .task_id
                FROM pa_tasks
               WHERE project_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                    .project_id
                 AND task_number = g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                    .pa_task_number;
            EXCEPTION
              WHEN OTHERS THEN
                write_into_file('Exception in Task Number Funding :' ||
                                SUBSTR(SQLERRM, 1, 200));
            END;
          END IF;
          BEGIN
            SELECT COUNT(1)
              INTO l_funding_count
              FROM pa_project_fundings a,
			       pa_projects b
             WHERE upper(segment1) =
                   upper(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                         .pa_project_number)
               AND b.project_id = a.project_id
               AND (g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                    .task_id IS NULL OR a.task_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                    .task_id);
            IF l_funding_count = 0 THEN
              l_funding_category := 'ORIGINAL';
            ELSE
              l_funding_category := 'ADDITIONAL';
            END IF;
            g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).funding_category := l_funding_category;
          EXCEPTION
            WHEN OTHERS THEN
              write_into_file('New Funding');
          END;
          write_into_file('Project Id : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .project_id);
          write_into_file('Task Id : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .task_id);
          write_into_file('Task Number : ' || g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                          .pa_task_number);
          write_into_file('Funding Count : ' || l_funding_count ||
                          '. Funding Amount : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .allocated_amount);
          l_funding_amount      := 0;
          l_funding_attr_amount := 0;
          --Check for Funding Amount from Attribute1
          --IF THEN
          --IF gv_source_system IN ( 'FOE', 'ITS_SIEBEL') and l_funding_count <> 0 THEN-- Commented by vinod
          IF g_agr_partial_update = 'Y' AND l_funding_count <> 0 THEN
            -- Added by vinod
            SELECT SUM(NVL(allocated_amount, 0))
              INTO l_funding_amount
              FROM pa_project_fundings
             WHERE project_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                  .project_id
               AND (g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id IS NULL OR task_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id);
            SELECT SUM(to_number(NVL(decode(ascii(attribute2),0,NULL,attribute2),0)))
              INTO l_funding_attr_amount
              FROM pa_project_fundings
             WHERE project_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                  .project_id
               AND (g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id IS NULL OR task_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id);
          END IF;
          IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
           .allocated_amount - NVL(l_funding_amount, 0) < 0 THEN
            --and l_funding_count > 0 THEN
            raise e_skip_negative_funding;
          END IF;
          g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).allocated_amount := g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                                  .allocated_amount -
                                                                                   NVL(l_funding_amount,
                                                                                       0);
          g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).attribute2 := g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                            .attribute2 -
                                                                             NVL(l_funding_attr_amount,
                                                                                 0);
          --END IF;
          write_into_file('Funding Count : ' || l_funding_count ||
                          '. Funding Amount : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                          .allocated_amount);
          IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
           .attribute2 = 0 AND g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
             .allocated_amount = 0 AND l_funding_count > 0 THEN
            raise e_no_funding_change;
          END IF;
          --
          -- Call Add Funding API
          BEGIN
            l_funding_id_out := NULL;
            l_funding_id     := NULL;
            g_msg_data       := NULL;

            pa_agreement_pub.add_funding(p_api_version_number   => gc_api_version_number,
                                         p_commit               => fnd_api.g_false,
                                         p_init_msg_list        => gc_init_msg_list,
                                         p_msg_count            => g_msg_count,
                                         p_msg_data             => g_msg_data,
                                         p_return_status        => g_return_status,
                                         p_pm_product_code      => g_agr_rec.agr_extra_rec.pm_product_code,
                                         p_pm_funding_reference => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .pm_funding_reference,
                                         p_funding_id           => l_funding_id,
                                         p_pa_project_id        => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .project_id,
                                         p_pa_task_id           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .task_id,
                                         p_agreement_id         => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .agreement_id,
                                         p_allocated_amount     => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .allocated_amount,
                                         p_date_allocated       => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .date_allocated,
                                         p_desc_flex_name       => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .desc_flex_name,
                                         p_attribute_category   => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute_category,
                                         p_attribute1           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute1,
                                         p_attribute2           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute2,
                                         p_attribute3           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute3,
                                         p_attribute4           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute4,
                                         p_attribute5           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute5,
                                         p_attribute6           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute6,
                                         p_attribute7           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute7,
                                         p_attribute8           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute8,
                                         p_attribute9           => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute9,
                                         p_attribute10          => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .attribute10,
                                         p_funding_id_out       => l_funding_id_out,
                                         p_funding_category     => g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                                                                   .funding_category);
            write_into_file('Add funding status for project ' ||
                            UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                  .pa_project_number) || '**' ||
                            g_return_status);

            IF g_return_status <> 'S' THEN
              x_return_status := gc_error;
              l_agr_fund_err  := 'Y';
              x_return_status := gc_error;
              IF g_msg_count >= 1 THEN
                FOR i IN 1 .. g_msg_count LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                END LOOP; --i in 1..g_msg_count
                write_into_file(g_data);
                x_return_message := x_return_message || g_data;
              END IF; -- g_msg_count >= 1 THEN
              EXIT;
            END IF; --g_return_status <> 'S' THEN
          EXCEPTION
            WHEN OTHERS THEN
              x_return_status  := gc_error;
              l_agr_fund_err   := 'Y';
              x_return_message := ' Exception Add Funding for Project# ' ||
                                  UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                        .pa_project_number) || '. ' ||
                                  SQLERRM;
          END;
        EXCEPTION
          WHEN e_skip_negative_funding THEN
            write_into_file('Skiped Negative Funding');
          WHEN e_no_funding_change THEN
            write_into_file('No Change in Funding Amount');
          WHEN NO_DATA_FOUND THEN
            x_return_status  := gc_error;
            x_return_message := ' Project details not found for Project# ' ||
                                UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                      .pa_project_number);
            l_agr_fund_err   := 'Y';
          WHEN OTHERS THEN
            x_return_status  := gc_error;
            x_return_message := ' Exception Project details not found for Project# ' ||
                                UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                      .pa_project_number) || '. ' ||
                                SQLERRM;
            l_agr_fund_err   := 'Y';
        END;
      END LOOP;
      --f IN 1..g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT LOOP
    END IF;
    --g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.count > 0 then
    IF l_agr_fund_err = 'Y' THEN
      x_return_status := gc_error;
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := '.Add Funding Exception : ' || SQLERRM;
      x_return_status  := gc_error;
  END add_agr_funding;
  /*
  ** Procedure Name  : derive_funding_dtl
  ** Purpose:  For deriving the funding details
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 26-Nov-13            Vipul Gosai      New
  */
  PROCEDURE derive_funding_dtl(x_return_status  OUT VARCHAR2,
                               x_return_message OUT VARCHAR2) IS
  BEGIN
    gv_poo := 'Derive Funding Information';
    IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT > 0 THEN
      FOR f IN 1 .. g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT LOOP
        -- Derive the Project ID out of Project Number
        BEGIN
          SELECT project_id,
                 NVL(pm_project_reference, segment1), -- Added nvl condition for RT6754084
                 'ORIGINAL',
                 baseline_funding_flag --, SYSDATE
            INTO g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .project_id,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .pm_funding_reference,
                 g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl (f)
                 .funding_category,
                 g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                 .baseline_funding_flag
          --g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f).date_allocated
            FROM pa_projects
           WHERE UPPER(segment1) =
                 UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                       .pa_project_number);
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            x_return_status  := gc_error;
            x_return_message := ' Project details not found for Project# ' ||
                                UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                      .pa_project_number);
          WHEN OTHERS THEN
            x_return_status  := gc_error;
            x_return_message := ' Exception Project details not found for Project# ' ||
                                UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                      .pa_project_number);
        END;
        IF g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
         .pa_task_number IS NOT NULL THEN
          -- Derive the Project ID out of Project Number
          BEGIN
            SELECT task_id
              INTO g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                   .task_id
              FROM pa_tasks
             WHERE project_id = g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                  .project_id
               AND task_number = g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                  .pa_task_number;
            write_into_file('Funding Get Task Id : ' || g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(f)
                            .task_id || '(' || g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                            .pa_task_number || ')');
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              x_return_status  := gc_error;
              x_return_message := ' Project/Task details not found for Project# ' ||
                                  UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                        .pa_project_number || '-' || g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                        .pa_task_number);
            WHEN OTHERS THEN
              x_return_status  := gc_error;
              x_return_message := ' Exception Project/task details not found for Project# ' ||
                                  UPPER(g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                        .pa_project_number || '-' || g_agr_rec.g_prj_funding_rec.prj_funding_extra_tbl(f)
                                        .pa_task_number);
          END;
        END IF;
      END LOOP;
      --f IN 1..g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT LOOP
    END IF;
    --g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.count > 0 then
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := '.Funding Details Exception : ' || SQLERRM;
      x_return_status  := gc_error;
  END derive_funding_dtl;
  /*
  ** Procedure Name  : agreement_update
  ** Purpose:  For Process the Inbound Agreement
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  ** 26-Nov-13            Vipul Gosai      Added for Agreement Creation or Updation
  ** 15-Jul-14            Vipul Gosai      CR11531 Enable service selection update from DFSD
  ** 29-Oct-21            Jyotsana Kandpal HPQC#32791 : Made changes to incorporate Rebalancing Negative PO Addendum flow
  */
  PROCEDURE agreement_update(x_return_status  IN OUT VARCHAR2,
                             x_return_message IN OUT VARCHAR2) IS
    l_agr_orig_amount     NUMBER := 0;
    l_tot_fund_amt        NUMBER := 0;
    l_new_agr_amt         NUMBER := 0;
    l_funding_update_flag VARCHAR2(1) := 'N';
    l_agreement_in        pa_agreement_pub.agreement_rec_in_type;
    l_agr_pm_prod_cd      pa_agreements_all.pm_product_code%TYPE;
    l_funding_in_tbl_type pa_agreement_pub.funding_in_tbl_type;

  BEGIN
    IF g_agreement_in_rec.agreement_id IS NOT NULL THEN
      write_into_file('Agreement is already exists..' ||
                      g_agreement_in_rec.agreement_id ||' : '||
                      g_partner_agr_update_allow);
      -- Agreement is already exists.
      IF g_partner_agr_update_allow = 'N' THEN
        -- N not allowed for update
        -- Agreement is not allowed for update
        write_into_file('Agreement is allowed for update..' ||
                        g_agreement_in_rec.agreement_id || '**' ||
                        g_partner_agr_update_allow);
      ELSE
        -- g_partner_agr_update_allow = 'Y' THEN
        --Agreement is allowed for update. Write code for update here
        --Get the Original Amount
        --IF g_agr_rec.agr_extra_rec.update_agreement_allowed = 'Y'
        --THEN
        --For DFSD
          write_into_file('Agreement is not allowed for update..' ||
                        g_agreement_in_rec.agreement_id || '**' ||
                        g_partner_agr_update_allow);
        BEGIN
          SELECT pa.amount,
                 NVL(pa.pm_product_code,
                     g_agr_rec.agr_extra_rec.pm_product_code) -- Added nvl condition for RT6754084
            INTO l_agr_orig_amount, l_agr_pm_prod_cd
            FROM pa_agreements pa
           WHERE pa.agreement_id = g_agreement_in_rec.agreement_id;
        EXCEPTION
          WHEN NO_DATA_FOUND THEN
            NULL; --Write Exception Here
          WHEN OTHERS THEN
            NULL; --Write Exception Here
        END;

        -- Added the IF block below for HPQC#32791
        -- This will ensure that the new DFF on agreement for Negative PO Addendum is updated before XXPA4027 payload is sent by partner
        if gv_allow_neg_po_addendum = 'Y' and nvl(l_agr_orig_amount,0) > g_agreement_in_rec.amount
        then
          g_agreement_in_rec.attribute8 := g_agreement_in_rec.amount;
          g_agreement_in_rec.amount := l_agr_orig_amount;
          write_into_file('Agreement - Negative PO Addendum DFF Updated to  : ' || g_agreement_in_rec.attribute8);
        end if;

        IF g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.count > 0 THEN
          FOR fund_cnt IN 1 .. g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl.COUNT LOOP
            l_tot_fund_amt := l_tot_fund_amt + g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl(fund_cnt)
                             .allocated_amount;
          END LOOP;
        END IF;
        write_into_file('Funding Totals : ' || l_tot_fund_amt || '-' ||
                        l_agr_orig_amount);
        --l_funding_update_flag := 'N';
        IF l_tot_fund_amt < l_agr_orig_amount THEN
          -- Add Agreement Funding
          BEGIN
            add_agr_funding(x_return_status  => x_return_status,
                            x_return_message => x_return_message);
            l_funding_update_flag := 'Y';
            write_into_file('Funding Return Status : ' || x_return_status);
            write_into_file('Funding Return Status : ' || x_return_message);
          EXCEPTION
            WHEN OTHERS THEN
              x_return_message := '.Add Funding API Exception : ' ||
                                  SQLERRM;
              x_return_status  := gc_error;
          END;
        END IF;
        --IF x_return_status <> gc_error THEN -- Commented
        IF NVL(x_return_status, 'XX') <> gc_error THEN
          BEGIN
            write_into_file('Agreement Owner ID : ' ||
                            g_agreement_in_rec.owned_by_person_id);
            write_into_file('Agreement reference : ' || l_agr_pm_prod_cd);
            write_into_file('Agreement Amount : ' ||
                            g_agreement_in_rec.amount);
            pa_agreement_pub.update_agreement(p_api_version_number => gc_api_version_number,
                                              p_commit             => fnd_api.g_false,
                                              p_init_msg_list      => fnd_api.g_true, --gc_init_msg_list,
                                              p_msg_count          => g_msg_count,
                                              p_msg_data           => g_msg_data,
                                              p_return_status      => g_return_status,
                                              p_pm_product_code    => l_agr_pm_prod_cd,
                                              -- Should be original one
                                              p_agreement_in_rec => g_agreement_in_rec,
                                              --g_agreement_in_rec, --CR11531 Enable service selection update from DFSD
                                              p_agreement_out_rec => g_agreement_out_rec,
                                              p_funding_in_tbl    => l_funding_in_tbl_type, --g_funding_in,
                                              p_funding_out_tbl   => g_funding_out);

            write_into_file('Agreement reference : ' ||
                            g_agreement_out_rec.return_status);
            write_into_file('Agreement Updation Status ' || g_msg_count ||
                            '.***.' || '.' || g_return_status);
            IF NVL(g_return_status, 'XX') <> 'S' THEN
              x_return_status := gc_error;
              IF g_msg_count >= 1 THEN
                FOR i IN 1 .. g_msg_count LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                END LOOP; --i in 1..g_msg_count
                write_into_file(g_data);
                x_return_message := g_data; -- Added for RT6754084
              END IF; -- g_msg_count >= 1 THEN
            END IF; --g_return_status <> 'S' THEN
          EXCEPTION
            WHEN OTHERS THEN
              x_return_message := '.Derive Funding Exception : ' || SQLERRM;
              x_return_status  := gc_error;
          END;
        END IF;
      END IF; --update_agreement_allowed = 'Y' THEN --For DFSD
      --END IF;                    --IF g_partner_agr_update_allow = 'N' THEN
      IF l_funding_update_flag = 'N' THEN
        -- Add Agreement Funding
        BEGIN
          add_agr_funding(x_return_status  => x_return_status,
                          x_return_message => x_return_message);
        EXCEPTION
          WHEN OTHERS THEN
            x_return_message := '.Add Funding API Exception : ' || SQLERRM;
            x_return_status  := gc_error;
        END;
      END IF;
    ELSE
      --IF g_agreement_in_rec.agreement_id IS NOT NULL THEN
      -- New Agreement. CREATE
      -- First Derive Funding
      write_into_file('Agreement is for create..');
      BEGIN
        derive_funding_dtl(x_return_status  => x_return_status,
                           x_return_message => x_return_message);
        write_into_file('After funding derive for Agreement ..' ||
                        x_return_status);
        IF NVL(x_return_status, 'XX') <> gc_error THEN
          -- Assign Table type to API table type
          g_funding_in := g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl;
          write_into_file('Funding Count : ' || g_funding_in.COUNT);
          pa_agreement_pub.create_agreement(p_api_version_number => gc_api_version_number,
                                            p_commit             => fnd_api.g_false,
                                            p_init_msg_list      => gc_init_msg_list,
                                            p_msg_count          => g_msg_count,
                                            p_msg_data           => g_msg_data,
                                            p_return_status      => g_return_status,
                                            p_pm_product_code    => g_agr_rec.agr_extra_rec.pm_product_code,
                                            p_agreement_in_rec   => g_agreement_in_rec,
                                            p_agreement_out_rec  => g_agreement_out_rec,
                                            p_funding_in_tbl     => g_funding_in,
                                            p_funding_out_tbl    => g_funding_out);
          write_into_file('Agreement Creation Status ' || '.' ||
                          g_return_status || '~~' ||
                          g_agreement_in_rec.agreement_id ||
                          g_agreement_out_rec.agreement_id);
		  if g_return_status = 'S' then
			g_agr_rec.agr_main_rec.agreement_id := g_agreement_out_rec.agreement_id;
          end if;
          IF NVL(g_return_status, 'XX') <> 'S' THEN
            x_return_status := gc_error;
						IF g_msg_count >= 1 THEN
                FOR i IN 1 .. g_msg_count LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                write_into_file(g_data);
				END LOOP; --i in 1..g_msg_count
                x_return_message := SUBSTR(g_data,1,2000); -- Added for RT6754084
              END IF; -- g_msg_count >= 1 THEN
          END IF;
        END IF;
      EXCEPTION
        WHEN OTHERS THEN
          x_return_message := '.Derive Funding Exception : ' || SQLERRM;
          x_return_status  := gc_error;
      END;
    END IF; --g_agreement_in_rec.agreement_id IS NOT NULL THEN
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := '.Agreement API Exception : ' || SQLERRM;
      x_return_status  := gc_error;
  END agreement_update;
  /*
  ** Procedure Name  : Agreement_cr_upd
  ** Purpose:  For Process the Inbound Agreement
  **
  ** Procedure History:
  ** Date                 Who                   Description
  ** ---------            ---------------       ----------------------------------------
  ** 11-Oct-13            Vipul Gosai              Created new
  ** 26-Nov-13            Vipul Gosai              Added for Agreement Creation or Updation
  ** 15-Jul-14            Vipul Gosai              CR11531 Enable service selection update from DFSD
  ** 29-Oct-21            Jyotsana Kandpal         HPQC#32791 : Made changes to incorporate Rebalancing Negative PO Addendum flow
  ** 19-Sep-22              Sourabh Bhattacharjee    INC0390451 : Start Date and other values of the agreement should not get updated
  */
  PROCEDURE agreement_cr_upd(x_return_status  IN OUT VARCHAR2,
                             x_return_message IN OUT VARCHAR2) IS
    l_agr_orig_amount NUMBER := 0;
    l_tot_fund_amt    NUMBER := 0;
    l_new_agr_amt     NUMBER := 0;
    l_agreement_in    pa_agreement_pub.agreement_rec_in_type;
    --CR11531 Enable service selection update from DFSD
    l_agr_pm_prod_cd pa_agreements_all.pm_product_code%TYPE;
  BEGIN
    --l_agreement_in := NULL ;
    --l_agreement_in := g_agreement_in_rec ; -- Added this section to get all values from the payload to create and update
    --INC0390451 commenting above line to copy all values of the agreement to avoid update on all columns of the agreement.

    IF g_agreement_in_rec.agreement_id IS NOT NULL THEN
      write_into_file('Agreement is already exists..' ||
                      g_agreement_in_rec.agreement_id);
      -- Agreement is already exists.
      IF g_partner_agr_update_allow = 'N' THEN
        -- N not allowed for update
        -- Agreement is not allowed for update
        write_into_file('Agreement is not allowed for update..' ||
                        g_agreement_in_rec.agreement_id || '**' ||
                        g_partner_agr_update_allow);
      ELSE
        -- g_partner_agr_update_allow = 'Y' THEN
        --Agreement is allowed for update. Write code for update here
        --Get the Original Amount
        write_into_file('update_agreement_allowed :'||g_agr_rec.agr_extra_rec.update_agreement_allowed);
        IF g_agr_rec.agr_extra_rec.update_agreement_allowed = 'Y' THEN
          --For DFSD
          BEGIN
            SELECT pa.amount,
                   NVL(pa.pm_product_code,
                       g_agr_rec.agr_extra_rec.pm_product_code) -- Added nvl condition for RT6754084
              INTO l_agr_orig_amount, l_agr_pm_prod_cd
              FROM pa_agreements pa
             WHERE pa.agreement_id = g_agreement_in_rec.agreement_id;
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              NULL; --Write Exception Here
            WHEN OTHERS THEN
              NULL; --Write Exception Here
          END;

          -- Added the IF block below for HPQC#32791
          -- This will ensure that the new DFF on agreement for Negative PO Addendum is updated before XXPA4027 payload is sent by partner
          -- Replaced attribute11 with attribute8
          if gv_allow_neg_po_addendum = 'Y' and nvl(l_agr_orig_amount,0) > g_agreement_in_rec.amount
          then
            g_agreement_in_rec.attribute8 := g_agreement_in_rec.amount;
            l_agreement_in.attribute8 := g_agreement_in_rec.attribute8;
            write_into_file('Agreement - Negative PO Addendum DFF Updated to  : ' || l_agreement_in.attribute8);
          end if;

          BEGIN
            SELECT SUM(EXTRACTVALUE(tmp.COLUMN_VALUE, '/ALLOCATED_AMOUNT')) AS aa
              INTO l_tot_fund_amt
              FROM TABLE(XMLSEQUENCE(XMLTYPE(g_payload)
                                     .EXTRACT('//G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/G_PA_PROJECT_FUNDINGS/PA_PROJECT_FUNDING/ALLOCATED_AMOUNT'))) tmp;
          EXCEPTION
            WHEN NO_DATA_FOUND THEN
              write_into_file('get l_tot_fund_amt : ' || SQLERRM);
            WHEN OTHERS THEN
              write_into_file('get l_tot_fund_amt : ' || SQLERRM);
          END;
          l_new_agr_amt             := l_agr_orig_amount + l_tot_fund_amt;
          l_new_agr_amt             := l_agr_orig_amount +
                                       NVL(l_tot_fund_amt, 0); -- 1+null = null
          g_agreement_in_rec.amount := l_new_agr_amt;
          write_into_file(g_agr_rec.agr_extra_rec.update_agreement_allowed || '**' ||
                          l_agr_orig_amount || '**' || l_tot_fund_amt || '**' ||
                          g_agreement_in_rec.amount||'**'||g_agreement_in_rec.attribute8);
          BEGIN
            IF g_agreement_in_rec.attribute8 IS NULL -- Added for HPQC#32791 , agreement amount doesn't need an update when attribute8 is populated
              THEN
                l_agreement_in.amount       := l_new_agr_amt;
            END IF;
            l_agreement_in.agreement_id := g_agreement_in_rec.agreement_id;
            l_agreement_in.agreement_num := g_agreement_in_rec.agreement_num;
            write_into_file('l_agreement_in.amount  : '||l_agreement_in.amount);
            --INC0390451 Adding above line to assign agreement num to avoid update on all columns of the agreement.
            pa_agreement_pub.update_agreement(p_api_version_number => gc_api_version_number,
                                              p_commit             => fnd_api.g_false,
                                              p_init_msg_list      => gc_init_msg_list,
                                              p_msg_count          => g_msg_count,
                                              p_msg_data           => g_msg_data,
                                              p_return_status      => g_return_status,
                                              p_pm_product_code    => l_agr_pm_prod_cd,
                                              -- Should be original one
                                              p_agreement_in_rec => l_agreement_in,
                                              --g_agreement_in_rec, --CR11531 Enable service selection update from DFSD
                                              p_agreement_out_rec => g_agreement_out_rec,
                                              p_funding_in_tbl    => g_funding_in,
                                              p_funding_out_tbl   => g_funding_out);
            write_into_file('Agreement Updation Status ' || g_msg_count ||
                            '.***.' || '.' || g_return_status);
            IF g_return_status <> 'S' THEN
              x_return_status := gc_error;
              IF g_msg_count >= 1 THEN
                FOR i IN 1 .. g_msg_count LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                END LOOP; --i in 1..g_msg_count
                x_return_message := g_data;
                write_into_file('Agreement Update Failed - '|| x_return_message);
              END IF; -- g_msg_count >= 1 THEN
            END IF;
          EXCEPTION
            WHEN OTHERS THEN
              x_return_message := '.Derive Funding Exception : ' || SQLERRM;
              x_return_status  := gc_error;
          END;
        ELSE
          NULL;
        END IF; --update_agreement_allowed = 'Y' THEN --For DFSD
      END IF; --IF g_partner_agr_update_allow = 'N' THEN
      -- Add Agreement Funding
      BEGIN
        add_agr_funding(x_return_status  => x_return_status,
                        x_return_message => x_return_message);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_message := '.Add Funding API Exception : ' || SQLERRM;
          x_return_status  := gc_error;
      END;
    ELSE
      --IF g_agreement_in_rec.agreement_id IS NOT NULL THEN
      -- New Agreement. CREATE
      -- First Derive Funding
      write_into_file('Agreement is for create..');
      BEGIN
        derive_funding_dtl(x_return_status  => x_return_status,
                           x_return_message => x_return_message);
        write_into_file('After funding derive for Agreement ..' ||
                        x_return_status);
        IF NVL(x_return_status, 'XX') <> gc_error THEN
          -- Assign Table type to API table type
          g_funding_in := g_agr_rec.g_prj_funding_rec.prj_funding_main_tbl;
          write_into_file('Funding Count : ' || g_funding_in.COUNT);
          pa_agreement_pub.create_agreement(p_api_version_number => gc_api_version_number,
                                            p_commit             => fnd_api.g_false,
                                            p_init_msg_list      => gc_init_msg_list,
                                            p_msg_count          => g_msg_count,
                                            p_msg_data           => g_msg_data,
                                            p_return_status      => g_return_status,
                                            p_pm_product_code    => g_agr_rec.agr_extra_rec.pm_product_code,
                                            p_agreement_in_rec   => g_agreement_in_rec,
                                            p_agreement_out_rec  => g_agreement_out_rec,
                                            p_funding_in_tbl     => g_funding_in,
                                            p_funding_out_tbl    => g_funding_out);
          if g_return_status = 'S' then
			g_agr_rec.agr_main_rec.agreement_id := g_agreement_out_rec.agreement_id;
          end if;
		  write_into_file('Agreement Creation Status ' || g_msg_count ||
                          '.***.' || g_msg_data || '.' || g_return_status || '~~' ||
                          g_agreement_in_rec.agreement_id);
          IF g_return_status <> 'S' THEN
            x_return_status := gc_error;
			IF g_msg_count >= 1 THEN
                FOR i IN 1 .. g_msg_count LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                write_into_file(g_data);
				END LOOP; --i in 1..g_msg_count
                x_return_message := SUBSTR(g_data,1,2000); -- Added for RT6754084
              END IF; -- g_msg_count >= 1 THEN
              END IF;
        END IF;
      EXCEPTION
        WHEN OTHERS THEN
          x_return_message := '.Derive Funding Exception : ' || SQLERRM;
          x_return_status  := gc_error;
      END;
    END IF; --g_agreement_in_rec.agreement_id IS NOT NULL THEN
  EXCEPTION
    WHEN OTHERS THEN
      x_return_message := '.Agreement API Exception : ' || SQLERRM;
      x_return_status  := gc_error;
  END agreement_cr_upd;


  --Added for CR25364
  PROCEDURE validate_budget_line_records(x_budget_prj_tbl IN OUT g_budget_prj_rec_in)
  IS
  lv_budget_line_in_tbl pa_budget_pub.budget_line_in_tbl_type;
  lv_budget_line_in_tbl2 pa_budget_pub.budget_line_in_tbl_type;
  lv_cost_task_level varchar2(20);
  lv_rev_task_level varchar2(20);
  lv_valid varchar2(20);
  lv_business_offering varchar2(200);
  BEGIN
    write_into_file('Before Validate Budget Lines');
--    write_into_file('Budget Count : '||x_budget_prj_tbl.count);
    write_into_file('Budget Line Count : '||x_budget_prj_tbl.g_budget_line_in_tbl.count);
    lv_budget_line_in_tbl.delete;
    SELECT
        pbem_cost.ENTRY_LEVEL_CODE COST_ENTRY_LEVEL,
        pbem_rev.ENTRY_LEVEL_CODE REV_ENTRY_LEVEL,
		ppc.class_code
    into lv_cost_task_level,
        lv_rev_task_level,
		lv_business_offering
    FROM
        pa_projects_all ppa,
        pa_project_types_all ppta,
        pa_budget_entry_methods pbem_cost,
        pa_budget_entry_methods pbem_rev,
		pa_project_classes ppc
    WHERE
        ppa.project_id = x_budget_prj_tbl.p_pa_project_id
        and ppta.project_type = ppa.project_type
        AND ppta.org_id = ppa.org_id
        AND pbem_cost.BUDGET_ENTRY_METHOD_CODE = ppta.cost_budget_entry_method_code
        and pbem_rev.BUDGET_ENTRY_METHOD_CODE = ppta.rev_budget_entry_method_code
		and ppc.project_id(+) = ppa.project_id
        and ppc.class_category(+) = 'Business Offering';

    write_into_file('Budget Type Code : '||x_budget_prj_tbl.budget_type_code);

    if x_budget_prj_tbl.budget_type_code IN ('AC','FC','Estimated Cost Budget') then

        for i in x_budget_prj_tbl.g_budget_line_in_tbl.first..x_budget_prj_tbl.g_budget_line_in_tbl.last
        loop
            lv_valid := 'N';
            if x_budget_prj_tbl.g_budget_line_in_tbl(i).burdened_cost = '0' then
            write_into_file('x_budget_prj_tbl.g_budget_line_in_tbl(i).pa_task_id'||x_budget_prj_tbl.g_budget_line_in_tbl(i).pa_task_id);
            select decode(count(1), '0','N','Y')
            into lv_valid
            from pa_tasks pt
            where project_id = x_budget_prj_tbl.p_pa_project_id
            and task_id = x_budget_prj_tbl.g_budget_line_in_tbl(i).pa_task_id
            and ((lv_cost_task_level = 'L' and not exists (select 1 from pa_tasks pt1
                            where pt1.project_id = pt.project_id
                            and pt1.parent_task_id = pt.task_id)) OR lv_cost_task_level <> 'L');
            else
            lv_valid := 'Y';
            end if;

            write_into_file('x_budget_prj_tbl.g_budget_line_in_tbl(i).pa_task_id'||x_budget_prj_tbl.g_budget_line_in_tbl(i).pa_task_id||'-'||lv_valid);
            if lv_valid = 'Y' then
                if x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias is not null then
                    begin
                        select resource_list_member_id
                        into x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_list_member_id
                        from pa_resource_list_members
                        where resource_list_id = x_budget_prj_tbl.resource_list_id
                        and alias = x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias ;
                    exception
                        when too_many_rows then
                          begin
                           select resource_list_member_id
                            into x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_list_member_id
                            from pa_resource_list_members
                            where resource_list_id = x_budget_prj_tbl.resource_list_id
                            and alias = x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias
                            and expenditure_type is not null;
                          exception
                            when too_many_rows then
                                begin
                                    select resource_list_member_id
                                    into x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_list_member_id
                                    from pa_resource_list_members
                                    where resource_list_id = x_budget_prj_tbl.resource_list_id
                                    and alias = x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias
                                    and expenditure_type = alias;
                                exception
                                  when others then
                                    null;
                                end;
                          end;
                        when no_data_found then
                            write_into_file ('Invalid Resource Alias');
                        when others then
                            null;
                        end;
                end if;
                lv_budget_line_in_tbl(lv_budget_line_in_tbl.count +1) := x_budget_prj_tbl.g_budget_line_in_tbl(i);
            end if;
        end loop;
    end if;
    if x_budget_prj_tbl.budget_type_code IN ('AR','FR','Estimated Revenue Budget') then
        for i in x_budget_prj_tbl.g_budget_line_in_tbl.first..x_budget_prj_tbl.g_budget_line_in_tbl.last
        loop
            lv_valid := 'N';
            if x_budget_prj_tbl.g_budget_line_in_tbl(i).revenue = '0' then
            select decode(count(1), '0','N','Y')
            into lv_valid
            from pa_tasks pt
            where project_id = x_budget_prj_tbl.p_pa_project_id
            and task_id = x_budget_prj_tbl.g_budget_line_in_tbl(i).pa_task_id
            and ((lv_cost_task_level = 'T' and pt.parent_task_id is null) OR lv_cost_task_level <> 'T');
            else
            lv_valid := 'Y';
            end if;
            if lv_valid = 'Y' then
                if x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias is not null then
                    begin
                        select resource_list_member_id
                        into x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_list_member_id
                        from pa_resource_list_members
                        where resource_list_id = x_budget_prj_tbl.resource_list_id
                        and alias = x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias ;
                    exception
                        when too_many_rows then
                          begin
                           select resource_list_member_id
                            into x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_list_member_id
                            from pa_resource_list_members
                            where resource_list_id = x_budget_prj_tbl.resource_list_id
                            and alias = x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias
                            and expenditure_type is not null;
                          exception
                            when too_many_rows then
                                begin
                                    select resource_list_member_id
                                    into x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_list_member_id
                                    from pa_resource_list_members
                                    where resource_list_id = x_budget_prj_tbl.resource_list_id
                                    and alias = x_budget_prj_tbl.g_budget_line_in_tbl(i).resource_alias
                                    and expenditure_type = alias;
                                exception
                                  when others then
                                    null;
                                end;
                          end;
                        when no_data_found then
                            write_into_file ('Invalid Resource Alias');
                        when others then
                            null;
                        end;
                end if;
                lv_budget_line_in_tbl(lv_budget_line_in_tbl.count +1) := x_budget_prj_tbl.g_budget_line_in_tbl(i);
            end if;
        end loop;
    end if;
    --Skip Budget Update on SubTasks if project is already approved
    write_into_file('Original Project Status : '||gv_orig_project_status);
    write_into_file('Exclude Budget Type Status : '||xxint_event_type_utils.valid_config(p_event_type     => gc_event_type,
                                                      p_key_type       => gc_key_type,
                                                      p_key_type_value => gv_source_system,
                                                      p_key_name       => gv_exclude_budget_update,
                                                      p_key_value      => 'Y'));

    if x_budget_prj_tbl.budget_type_code IN ('AC','FC','Estimated Cost Budget') and lv_budget_line_in_tbl.count > 0
    and nvl(gv_orig_project_status,'XX') = 'APPROVED' and xxint_event_type_utils.valid_config(p_event_type     => gc_event_type,
                                                      p_key_type       => gc_key_type,
                                                      p_key_type_value => gv_source_system,
                                                      p_key_name       => gv_exclude_budget_update,
                                                      p_key_value      => 'Y') = 'Y' then
    x_budget_prj_tbl.budget_update_flag := 'U';
    for i in lv_budget_line_in_tbl.first..lv_budget_line_in_tbl.last
    loop
        select decode(count(1), '0','N','Y')
            into lv_valid
            from pa_tasks pt
            where project_id = x_budget_prj_tbl.p_pa_project_id
            and task_id = x_budget_prj_tbl.g_budget_line_in_tbl(i).pa_task_id
            and not exists (select 1 from xxint_event_type_key_vals
                                  where event_type = gc_event_type
                                  and key_type = gc_key_type
                                  and key_type_value = gv_source_system
                                  and key_name = gv_exclude_budget_update
                                  and key_value = 'Y'
                                  and to_number(attribute1) = pt.work_type_id);
        if lv_valid = 'Y' then
        lv_budget_line_in_tbl2(lv_budget_line_in_tbl2.count+1) := lv_budget_line_in_tbl(i);
        end if;
    end loop;
    else
        lv_budget_line_in_tbl2 := lv_budget_line_in_tbl;
    end if;
	if x_budget_prj_tbl.budget_type_code IN ('FC') and lv_budget_line_in_tbl.count > 0
    and nvl(gv_orig_project_status,'XX') = 'APPROVED' and xxint_event_type_utils.valid_config(p_event_type     => gc_event_type,
                                                      p_key_type       => gc_key_type,
                                                      p_key_type_value => gv_source_system,
                                                      p_key_name       => 'UPDATE_PRJ_BUDGET',
                                                      p_key_value      => 'N',
                                                      p_attribute4     => lv_business_offering
                                                      ) = 'Y'
    then
        x_budget_prj_tbl.budget_update_flag := 'N';
        lv_budget_line_in_tbl2.delete;
    end if;
    --End of Skip Budget Update on SubTasks if Project is already Approved
    x_budget_prj_tbl.g_budget_line_in_tbl.delete;
    x_budget_prj_tbl.g_budget_line_in_tbl := lv_budget_line_in_tbl2;
    write_into_file('After Validate Budget Lines');
    write_into_file('Validated Line Count : '||lv_budget_line_in_tbl.count);
    write_into_file('Budget Line Count : '||x_budget_prj_tbl.g_budget_line_in_tbl.count);
  EXCEPTION
     WHEN OTHERS THEN
        NULL;
  END validate_budget_line_records;
  --End of Added for CR25364

  PROCEDURE validate_proj_customer(p_project_id     NUMBER,
                                   g_customers_in   IN pa_project_pub.customer_tbl_type,
                                   g_customers_out  OUT pa_project_pub.customer_tbl_type,
                                   x_return_status  out varchar2,
                                   x_return_message out varchar2) IS
    l_proj_customer_id        NUMBER;
    l_proj_bill_to_address_id NUMBER;
    l_proj_ship_to_address_id NUMBER;
  BEGIN
    SELECT customer_id, bill_to_address_id, ship_to_address_id
      INTO l_proj_customer_id,
           l_proj_bill_to_address_id,
           l_proj_ship_to_address_id
      FROM pa_project_customers
     WHERE project_id = p_project_id
       AND customer_bill_split <> 0;
    write_into_file('Validate Project Customers ' || chr(10) ||
                    'Bill To Address ' || g_customers_in(1)
                    .bill_to_address_id || chr(10) || 'Ship To Address ' || g_customers_in(1)
                    .ship_to_address_id);

    if g_allow_soldto_cust_change = 'Y' and
       l_proj_customer_id <> g_customers_in(1).customer_id then
      proj_sold_to_cust_change(p_project_id     => p_project_id,
                               p_customers_in   => g_customers_in,
                               x_return_status  => x_return_status,
                               x_return_message => x_return_message);
    end if;
    IF l_proj_customer_id <> g_customers_in(1).customer_id OR
       l_proj_bill_to_address_id <> g_customers_in(1).bill_to_address_id OR
       l_proj_ship_to_address_id <> g_customers_in(1).ship_to_address_id THEN
      g_customers_out := g_customers_in;
      write_into_file('Bill to /Ship to Customer Changes Available');
    ELSE
      g_customers_out := g_customers_blank;
      write_into_file('No Bill to /Ship to Customer Changes');
    END IF;
  END validate_proj_customer;
  --
  --Renamed Procedure as Old by Vishnu for RT7075650
  PROCEDURE validate_proj_manager_role_old(p_project_id      NUMBER,
                                           g_key_members     IN OUT pa_project_pub.project_role_tbl_type,
                                           g_key_members_out OUT pa_project_pub.project_role_tbl_type) IS
    CURSOR c1(p_project_role_type VARCHAR2) IS
      SELECT *
        FROM pa_project_players
       WHERE project_id = p_project_id
         AND project_role_type = p_project_role_type;
    --and sysdate between start_date_active and nvl(end_date_active,sysdate+1);
    l_count         NUMBER := 1;
    l_return_status VARCHAR2(200);
    l_msg_count     NUMBER;
    l_msg_data      VARCHAR2(2000);
    l_loop_count    NUMBER := 1;
    l_role_count    NUMBER := 0;
    l_start_date    DATE;
    l_end_date      DATE;
  BEGIN
    g_key_members_out.DELETE; -- Added by Joydeb as per RT7070069
    write_into_file('Project Players Count :' || g_key_members.COUNT);
    FOR i IN 1 .. g_key_members.COUNT LOOP
      write_into_file('before Calling Cursor' || g_key_members(i)
                      .person_id || '-' || g_key_members(i)
                      .project_role_type || '-' || g_key_members(i)
                      .start_date || '-' || g_key_members(i).end_date);
      l_loop_count := 1;
      BEGIN
        --CHanged by Vinod for WRITE, update start/end date is not matched
        SELECT ppp.start_date_active, ppp.end_date_active
          INTO l_start_date, l_end_date
          FROM pa_project_players ppp,
		       pa_projects_all ppa
         WHERE ppa.project_id = p_project_id
           AND ppp.project_id = ppa.project_id
           AND ppp.person_id = g_key_members(i).person_id
           AND ppp.project_role_type = g_key_members(i).project_role_type
           AND g_key_members(i).start_date BETWEEN start_date_active AND
               NVL(end_date_active, ppa.completion_date);
        write_into_file('l_start_date/l_end_date : ' || l_start_date || '/' ||
                        l_end_date);
        write_into_file('g_key_members(i).start_date/end_date : ' || g_key_members(i)
                        .start_date || '/' || g_key_members(i).end_date);
        l_role_count := 1;
      EXCEPTION
        WHEN OTHERS THEN
          write_into_file('ERROR : ' || SQLERRM);
          l_role_count := 0;
      END;
      write_into_file('Manager Count : ' || l_role_count);
      IF l_role_count = 1 THEN
        write_into_file('Same Project Manager Exist in project effectivity date. Check if start date/end date are same.');
        -- below code Added by vinod for WRITE
        -- Update key member start/end dates when does not match against oracle
        -- Add record to update dates when not matched with existing dates
        IF g_key_members(i).start_date <> l_start_date OR
            NVL(g_key_members(i).end_date, sysdate) <>
            NVL(l_end_date, sysdate) THEN
          write_into_file('Start/End dates are diffrent, update dates');
          g_key_members_out(l_count).person_id := g_key_members(i).person_id;
          g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                          .project_role_type;
          g_key_members_out(l_count).start_date := NVL(g_key_members    (i)
                                                       .start_date,
                                                       g_key_members_out(l_count)
                                                       .start_date);
          g_key_members_out(l_count).end_date := NVL(g_key_members    (i)
                                                     .end_date,
                                                     g_key_members_out(l_count)
                                                     .end_date);
          l_count := l_count + 1;
        END IF;
      END IF;
      IF l_role_count < 1 THEN
        FOR c1_data IN c1(g_key_members(i).project_role_type) LOOP
          write_into_file('in For Loop : ' || g_key_members(i).person_id || '-' ||
                          c1_data.person_id);
          IF g_key_members(i).person_id <> c1_data.person_id THEN
            IF l_loop_count = 1 THEN
              l_loop_count := 2;
              --Add new record
              g_key_members_out(l_count).person_id := g_key_members(i)
                                                      .person_id;
              g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                              .project_role_type;
              g_key_members_out(l_count).start_date := NVL(g_key_members(i)
                                                           .start_date,
                                                           c1_data.start_date_active);
              g_key_members_out(l_count).end_date := g_key_members(i)
                                                     .end_date;
              l_count := l_count + 1;
            END IF;
            IF TRUNC(c1_data.start_date_active) =
               TRUNC(g_key_members(i).start_date) --OR trunc(c1_data.end_date_active) > trunc(g_key_members(i).start_date)
             THEN
              write_into_file('Project Manager exists in the same date. Calling Delete Project Manager API to delete the existing manager');
              PA_PROJECT_PARTIES_PUB.DELETE_PROJECT_PARTY(p_api_version                  => gc_api_version_number,
                                                          p_init_msg_list                => FND_API.G_TRUE,
                                                          p_commit                       => FND_API.G_FALSE,
                                                          p_validate_only                => FND_API.G_FALSE,
                                                          p_validation_level             => FND_API.G_VALID_LEVEL_FULL,
                                                          p_debug_mode                   => 'N',
                                                          p_record_version_number        => c1_data.record_version_number,
                                                          p_calling_module               => FND_API.G_MISS_CHAR,
                                                          p_project_id                   => c1_data.project_id,
                                                          p_project_party_id             => c1_data.project_party_id,
                                                          p_scheduled_flag               => 'N',
                                                          p_assignment_id                => NULL,
                                                          p_assign_record_version_number => NULL,
                                                          p_mgr_validation_type          => 'FORM',
                                                          x_return_status                => l_return_status,
                                                          x_msg_count                    => l_msg_count,
                                                          x_msg_data                     => l_msg_data);
              write_into_file('Project Manager Deletion Status ' ||
                              l_return_status || '-' || l_msg_count || '-' ||
                              l_msg_data);
            ELSE
              IF c1_data.end_date_active IS NULL THEN
                IF l_loop_count = 1 THEN
                  --Add new record
                  g_key_members_out(l_count).person_id := g_key_members(i)
                                                          .person_id;
                  g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                                  .project_role_type;
                  g_key_members_out(l_count).start_date := LEAST(g_key_members(i)
                                                                 .start_date,
                                                                 c1_data.start_date_active);
                  g_key_members_out(l_count).end_date := NVL(g_key_members(i)
                                                             .end_date,
                                                             c1_data.end_date_active);
                  l_count := l_count + 1;
                  l_loop_count := 2;
                END IF;
                --Update existing record
                g_key_members_out(l_count).person_id := c1_data.person_id;
                g_key_members_out(l_count).project_role_type := c1_data.project_role_type;
                g_key_members_out(l_count).start_date := c1_data.start_date_active;
                g_key_members_out(l_count).end_date := g_key_members(i)
                                                       .start_date - 1;
              ELSE
                IF l_loop_count = 1 THEN
                  --Add new record
                  g_key_members_out(l_count).person_id := g_key_members(i)
                                                          .person_id;
                  g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                                  .project_role_type;
                  g_key_members_out(l_count).start_date := NVL(g_key_members(i)
                                                               .start_date,
                                                               c1_data.start_date_active);
                  g_key_members_out(l_count).end_date := g_key_members(i)
                                                         .end_date;
                  l_count := l_count + 1;
                  l_loop_count := 2;
                END IF;
              END IF;
            END IF;
          END IF;
        END LOOP;
      END IF;
    END LOOP;
    write_into_file('Project Players Count :' || g_key_members.COUNT);
    write_into_file('Project Players Out Count :' ||
                    g_key_members_out.COUNT);
    FOR i IN 1 .. g_key_members_out.COUNT LOOP
      write_into_file('After Calling Cursor' || g_key_members_out(i)
                      .person_id || '-' || g_key_members_out(i)
                      .project_role_type || '-' || g_key_members_out(i)
                      .start_date || '-' || g_key_members_out(i).end_date);
    END LOOP;
  END validate_proj_manager_role_old;
  --Added by Vishnu for RT7075650
  PROCEDURE validate_proj_manager_role(p_project_id      NUMBER,
                                       g_key_members     IN OUT pa_project_pub.project_role_tbl_type,
                                       g_key_members_out OUT pa_project_pub.project_role_tbl_type) IS
    l_role_exists          VARCHAR2(1) := 'N';
    l_diff_manager_exists  VARCHAR2(1) := 'N';
    l_update_required_flag VARCHAR2(1) := 'N';
    l_count                NUMBER := 1;
    l_loop_count           NUMBER := 1;
    l_return_status        VARCHAR2(200);
    l_msg_count            NUMBER;
    l_msg_data             VARCHAR2(2000);
    l_prev_role            VARCHAR2(2000);
    l_diff_manager_payload VARCHAR2(1) := 'N';
    l_prev_manager_payload NUMBER;
    --Variable added by Joydeb as per RT7075650
    l_assignment_id   NUMBER := NULL;
    l_wf_type         VARCHAR2(240) := NULL;
    l_wf_item_type    VARCHAR2(240) := NULL;
    l_wf_process      VARCHAR2(240) := NULL;
    l_project_role_id NUMBER := NULL;
    lv_prj_start_date DATE; --added for CR25448

    /*CURSOR c1(p_project_role_type VARCHAR2) IS
    SELECT project_id,
           project_role_type,
           project_party_id,
           person_id,
           record_version_number,
           START_DATE_ACTIVE,
           NVL((SELECT END_DATE_ACTIVE
                 FROM pa_project_players
                WHERE project_id = pp.project_id
                  AND PROJECT_ROLE_TYPE = PP.PROJECT_ROLE_TYPE
                  AND person_id = pp.person_id
                  AND start_date_active = pp.end_date_active + 1),
               END_DATE_ACTIVE) END_DATE_ACTIVE
      FROM pa_project_players pp
     WHERE project_id = p_project_id
       AND project_role_type = p_project_role_type
       AND NOT EXISTS
     (SELECT 1
              FROM pa_project_players
             WHERE project_id = pp.project_id
               AND PROJECT_ROLE_TYPE = PP.PROJECT_ROLE_TYPE
               AND person_id = pp.person_id
               AND start_date_active = pp.end_date_active + 1)
     ORDER BY start_date_active;*/ --Commented by Joydeb as per RT7075650
    CURSOR c1(p_project_role_type VARCHAR2, p_person_id NUMBER) IS
      SELECT *
        FROM pa_project_players
       WHERE project_id = p_project_id
         AND project_role_type = p_project_role_type
         AND person_id = NVL(p_person_id, person_id)
       Order by start_date_active;
  BEGIN
    g_key_members_out.DELETE; -- Added by Joydeb as per RT7070069
    write_into_file('Project Players Count :' || g_key_members.COUNT);
    write_into_file('Before Validation');
    FOR i IN 1 .. g_key_members.COUNT LOOP
      write_into_file(g_key_members(i)
                      .person_id || '-' || g_key_members(i)
                      .project_role_type || '-' || g_key_members(i)
                      .start_date || '-' || g_key_members(i).end_date);
      --Below part added to validate if there are more than one project manager available in payload
      if g_key_members(i).project_role_type = 'PROJECT MANAGER' THEN
        if l_prev_manager_payload is null then
          l_prev_manager_payload := g_key_members(i).person_id;
        elsif l_prev_manager_payload <> g_key_members(i).person_id then
          l_diff_manager_payload := 'Y';
        end if;
      END IF;
    END LOOP;

    write_into_file('Previous Manager : ' || l_prev_manager_payload);
    write_into_file('Different Manager : ' || l_diff_manager_payload);

    FOR i IN 1 .. g_key_members.count LOOP
      --Start of Key Member Loop
      l_update_required_flag := 'N';
      l_loop_count           := 1;
      --Added by Joydeb as per RT7075650
      l_assignment_id   := NULL;
      l_wf_type         := NULL;
      l_wf_item_type    := NULL;
      l_wf_process      := NULL;
      l_msg_count       := NULL;
      l_msg_data        := NULL;
      l_project_role_id := NULL;
      write_into_file(g_key_members(i)
                      .person_id || '-' || g_key_members(i)
                      .project_role_type || '-' || g_key_members(i)
                      .start_date || '-' || g_key_members(i).end_date);
      IF g_key_members(i).project_role_type = 'PROJECT MANAGER' THEN
        --If Project Manager Role
        -- there can be only one Effective Project Manager at a given time. Validate Project Manager based on this criteria
        SELECT DECODE(COUNT(1), 0, 'N', 'Y')
          INTO l_role_exists
          FROM pa_project_players
         WHERE project_id = p_project_id
           AND project_role_type = g_key_members(i).project_role_type;

        write_into_file('Role Exists :' || l_role_exists);

        IF l_role_exists = 'Y' THEN
          -- Project Manager Exists in System
          --Verify if there is different manager available in system. if so we need to end_date/replace existing manager with the new manager from payload
          SELECT DECODE(COUNT(1), 0, 'N', 'Y')
            INTO l_diff_manager_exists
            FROM pa_project_players
           WHERE project_id = p_project_id
             AND project_role_type = g_key_members(i).project_role_type
             AND person_id <> g_key_members(i).person_id;

          write_into_file('l_diff_manager_exists :' ||
                          l_diff_manager_exists);
        
            SELECT  start_date ----added for CR25448
            INTO lv_prj_start_date
            FROM pa_projects_all
            WHERE project_id = p_project_id;
            
          IF l_diff_manager_exists = 'Y' OR l_diff_manager_payload = 'Y' THEN
            --Update Project Manager
            write_into_file('Update Existing Project Manager Date and add new manager');
            l_update_required_flag := 'Y';
            
            IF g_proj_manager_upd_st_dt = 'Y'  and g_key_members(i).start_date = lv_prj_start_date THEN --added for CR25448
                write_into_file('Project Manager Update scenario for WS : ' ||g_proj_manager_upd_st_dt);
                g_key_members(i).start_date := sysdate;
            
            END IF;
            
          ELSE
            --If Same Manager exist Check if new data is in effective range to validate if we need to extend/update dates
            SELECT DECODE(COUNT(1), 0, 'Y', 'N')
              INTO l_update_required_flag
              FROM (SELECT project_id,
                           project_role_type,
                           project_party_id,
                           person_id,
                           record_version_number,
                           START_DATE_ACTIVE,
                           NVL((SELECT END_DATE_ACTIVE
                                 FROM pa_project_players
                                WHERE project_id = pp.project_id
                                  AND PROJECT_ROLE_TYPE =
                                      PP.PROJECT_ROLE_TYPE
                                  AND person_id = pp.person_id
                                  AND start_date_active =
                                      pp.end_date_active + 1),
                               END_DATE_ACTIVE) END_DATE_ACTIVE
                      FROM pa_project_players pp
                     WHERE project_id = p_project_id
                       AND project_role_type = g_key_members(i).project_role_type
                       AND person_id = g_key_members(i).person_id
                       AND NOT EXISTS
                     (SELECT 1
                              FROM pa_project_players
                             WHERE project_id = pp.project_id
                               AND PROJECT_ROLE_TYPE = PP.PROJECT_ROLE_TYPE
                               AND person_id = pp.person_id
                               AND start_date_active = pp.end_date_active + 1)) pp
             WHERE pp.start_date_active <= g_key_members(i).start_date -- Modified by Joydeb as per RT7075650. Changed >= to <=
               AND NVL(pp.end_date_active,
                       NVL(g_key_members(i).end_date, sysdate)) >=
                   NVL(g_key_members(i).end_date, sysdate);
          END IF;
        ELSE
          g_key_members_out(l_count).person_id := g_key_members(i).person_id;
          g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                          .project_role_type;
          g_key_members_out(l_count).start_date := g_key_members(i)
                                                   .start_date;
          g_key_members_out(l_count).end_date := g_key_members(i).end_date;
          l_count := l_count + 1;
        END IF;
      ELSE
        --non Project Manager roles can be more than one at a given time. So only validate for the payload employee if date change is required
        SELECT DECODE(COUNT(1), 0, 'N', 'Y')
          INTO l_role_exists
          FROM pa_project_players
         WHERE project_id = p_project_id
           AND project_role_type = g_key_members(i).project_role_type
           AND person_id = g_key_members(i).person_id;
        IF l_role_exists = 'Y' THEN
          SELECT DECODE(COUNT(1), 0, 'Y', 'N')
            INTO l_update_required_flag
            FROM (SELECT project_id,
                         project_role_type,
                         project_party_id,
                         person_id,
                         record_version_number,
                         START_DATE_ACTIVE,
                         NVL((SELECT END_DATE_ACTIVE
                               FROM pa_project_players
                              WHERE project_id = pp.project_id
                                AND PROJECT_ROLE_TYPE = PP.PROJECT_ROLE_TYPE
                                AND person_id = pp.person_id
                                AND start_date_active =
                                    pp.end_date_active + 1),
                             END_DATE_ACTIVE) END_DATE_ACTIVE
                    FROM pa_project_players pp
                   WHERE project_id = p_project_id
                     AND project_role_type = g_key_members(i).project_role_type
                     AND person_id = g_key_members(i).person_id
                     AND NOT EXISTS
                   (SELECT 1
                            FROM pa_project_players
                           WHERE project_id = pp.project_id
                             AND PROJECT_ROLE_TYPE = PP.PROJECT_ROLE_TYPE
                             AND person_id = pp.person_id
                             AND start_date_active = pp.end_date_active + 1)) pp
           WHERE pp.start_date_active <= g_key_members(i).start_date -- Modified by Joydeb as per RT7070069. Changed >= to <=
             AND NVL(pp.end_date_active,
                     NVL(g_key_members(i).end_date, sysdate)) >=
                 NVL(g_key_members(i).end_date, sysdate);
          IF l_update_required_flag = 'Y' THEN
            write_into_file('Key Member Update Required :' ||
                            l_update_required_flag);
            --Added by Joydeb as per RT7075650
            SELECT project_role_id
              INTO l_project_role_id
              FROM pa_project_role_types
             WHERE project_role_type = g_key_members(i).project_role_type;
            --Open the cursor to get exitsing person details
            write_into_file(g_key_members(i).project_role_type || '-' || g_key_members(i)
                            .person_id);
            FOR c1_data IN c1(g_key_members(i).project_role_type,
                              g_key_members(i).person_id) LOOP
              write_into_file('Calling UPDATE_PROJECT_PARTY API to update the key member');
              -- Call update api to update the key member
              PA_PROJECT_PARTIES_PUB.UPDATE_PROJECT_PARTY(p_api_version                  => 1.0,
                                                          p_init_msg_list                => fnd_api.g_true,
                                                          p_commit                       => fnd_api.g_false,
                                                          p_validate_only                => fnd_api.g_false,
                                                          p_validation_level             => fnd_api.g_valid_level_full,
                                                          p_debug_mode                   => 'N',
                                                          p_object_id                    => FND_API.G_MISS_NUM,
                                                          p_object_type                  => 'PA_PROJECTS',
                                                          p_project_role_id              => l_project_role_id,
                                                          p_project_role_type            => c1_data.project_role_type,
                                                          p_resource_type_id             => c1_data.resource_type_id,
                                                          p_resource_source_id           => c1_data.person_id,
                                                          P_Resource_Name                => FND_API.G_MISS_CHAR,
                                                          p_resource_id                  => c1_data.resource_id,
                                                          p_start_date_active            => g_key_members(i)
                                                                                            .start_date,
                                                          P_SCHEDULED_FLAG               => 'N',
                                                          p_record_version_number        => c1_data.record_version_number,
                                                          p_calling_module               => FND_API.G_MISS_CHAR,
                                                          p_project_id                   => c1_data.project_id,
                                                          p_project_end_date             => g_project_in.completion_date,
                                                          p_project_party_id             => c1_data.project_party_id,
                                                          p_assignment_id                => null,
                                                          p_assign_record_version_number => c1_data.record_version_number + 1,
                                                          p_end_date_active              => g_key_members(i)
                                                                                            .end_date,
                                                          x_assignment_id                => l_assignment_id,
                                                          x_wf_type                      => l_wf_type,
                                                          x_wf_item_type                 => l_wf_item_type,
                                                          x_wf_process                   => l_wf_process,
                                                          x_return_status                => l_return_status,
                                                          x_msg_count                    => l_msg_count,
                                                          x_msg_data                     => l_msg_data);
              write_into_file('Update Status: ' || l_return_status ||
                              ' . Assiginment id: ' || l_assignment_id);
              write_into_file('Error Message: ' || l_msg_data);
              /*g_key_members_out(l_count).person_id := g_key_members(i)
                                                      .person_id;
              g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                              .project_role_type;
              g_key_members_out(l_count).start_date := g_key_members(i)
                                                       .start_date;
              g_key_members_out(l_count).end_date := g_key_members(i).end_date;
              l_count := l_count + 1;*/ -- Commented by joydeb
            END LOOP;
            l_update_required_flag := 'N';
          END IF;
          --Else condition added by Joydeb as per RT7070069 to add any new member
        ELSE
          g_key_members_out(l_count).person_id := g_key_members(i).person_id;
          g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                          .project_role_type;
          g_key_members_out(l_count).start_date := g_key_members(i)
                                                   .start_date;
          g_key_members_out(l_count).end_date := g_key_members(i).end_date;
          l_count := l_count + 1;
        END IF; --End of addition by Joydeb as per RT7075650
      END IF; --End of If Project Manager Role
      IF l_update_required_flag = 'Y' THEN
        write_into_file('Key Member Update Required :' ||
                        l_update_required_flag);
        FOR c1_data IN c1(g_key_members(i).project_role_type, NULL) LOOP
          write_into_file('in For Loop : ' || g_key_members(i).person_id || '-' ||
                          c1_data.person_id);
          --if g_key_members(i).person_id <> c1_data.person_id then
          IF l_loop_count = 1 THEN
            l_loop_count := 2;
            --Add new record
            g_key_members_out(l_count).person_id := g_key_members(i)
                                                    .person_id;
            g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                            .project_role_type;
            g_key_members_out(l_count).start_date := NVL(g_key_members(i)
                                                         .start_date,
                                                         c1_data.start_date_active);
            g_key_members_out(l_count).end_date := g_key_members(i).end_date;
            l_count := l_count + 1;
          END IF;
          write_into_file(c1_data.start_date_active || ' - ' || g_key_members(i)
                          .start_date);
          IF TRUNC(c1_data.start_date_active) >=
             TRUNC(g_key_members(i).start_date) --OR trunc(c1_data.end_date_active) > trunc(g_key_members(i).start_date)
           THEN
            write_into_file('Project Manager exists in the same date. Calling Delete Project Manager API to delete the existing manager');
            PA_PROJECT_PARTIES_PUB.DELETE_PROJECT_PARTY(p_api_version                  => gc_api_version_number,
                                                        p_init_msg_list                => FND_API.G_TRUE,
                                                        p_commit                       => FND_API.G_FALSE,
                                                        p_validate_only                => FND_API.G_FALSE,
                                                        p_validation_level             => FND_API.G_VALID_LEVEL_FULL,
                                                        p_debug_mode                   => 'N',
                                                        p_record_version_number        => c1_data.record_version_number,
                                                        p_calling_module               => FND_API.G_MISS_CHAR,
                                                        p_project_id                   => c1_data.project_id,
                                                        p_project_party_id             => c1_data.project_party_id,
                                                        p_scheduled_flag               => 'N',
                                                        p_assignment_id                => NULL,
                                                        p_assign_record_version_number => NULL,
                                                        p_mgr_validation_type          => 'FORM',
                                                        x_return_status                => l_return_status,
                                                        x_msg_count                    => l_msg_count,
                                                        x_msg_data                     => l_msg_data);
            write_into_file('Project Manager Deletion Status ' ||
                            l_return_status || '-' || l_msg_count || '-' ||
                            l_msg_data);
          ELSE
            IF c1_data.end_date_active IS NULL THEN
              IF l_loop_count = 1 THEN
                --Add new record
                g_key_members_out(l_count).person_id := g_key_members(i)
                                                        .person_id;
                g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                                .project_role_type;
                g_key_members_out(l_count).start_date := LEAST(g_key_members(i)
                                                               .start_date,
                                                               c1_data.start_date_active);
                g_key_members_out(l_count).end_date := NVL(g_key_members(i)
                                                           .end_date,
                                                           c1_data.end_date_active);
                l_count := l_count + 1;
                l_loop_count := 2;
              END IF;
              --Update existing record
              g_key_members_out(l_count).person_id := c1_data.person_id;
              g_key_members_out(l_count).project_role_type := c1_data.project_role_type;
              g_key_members_out(l_count).start_date := c1_data.start_date_active;
              g_key_members_out(l_count).end_date := g_key_members(i)
                                                     .start_date - 1;
            ELSE
              IF l_loop_count = 1 THEN
                --Add new record
                g_key_members_out(l_count).person_id := g_key_members(i)
                                                        .person_id;
                g_key_members_out(l_count).project_role_type := g_key_members(i)
                                                                .project_role_type;
                g_key_members_out(l_count).start_date := NVL(g_key_members(i)
                                                             .start_date,
                                                             c1_data.start_date_active);
                g_key_members_out(l_count).end_date := g_key_members(i)
                                                       .end_date;
                l_count := l_count + 1;
                l_loop_count := 2;
              END IF;
            END IF;
          END IF;
        END LOOP;
      END IF;
    END LOOP; --Start of Key Member Loop
    write_into_file('Project Players Count :' || g_key_members.COUNT);
    write_into_file('Project Players Out Count :' ||g_key_members_out.COUNT);
    FOR i IN 1 .. g_key_members_out.COUNT LOOP
      write_into_file('After Calling Cursor' || g_key_members_out(i).person_id || '-'
      || g_key_members_out(i).project_role_type || '-' || g_key_members_out(i).start_date || '-' || g_key_members_out(i).end_date);
    END LOOP;
  END validate_proj_manager_role;

  PROCEDURE get_task_update(p_project_id     NUMBER,
                            g_tasks_in       IN pa_project_pub.task_in_tbl_type,
                            g_tasks_out      OUT pa_project_pub.task_in_tbl_type,
                            p_new_task_found OUT VARCHAR2) IS -- p_new_task_found added by vinod
  BEGIN
    g_tasks_out.DELETE ;
    p_new_task_found := 'N'; -- added by vinod
    FOR task_count IN 1 .. g_tasks_in.count LOOP
      --g_tasks_out(task_count).pa_project_id := g_tasks_in(task_count).p_project_id;
      --g_tasks_out(task_count).pa_task_id := g_tasks_in(task_count) commented for CR24470
      --                                      .pa_task_id;
      g_tasks_out(task_count).pa_task_id := NULL ; --After commenting for CR24470 define it as null
                                                   -- since IF block is checking this value and it may not be NULL since not initialized.
      g_tasks_out(task_count).task_name := g_tasks_in(task_count).task_name;
      g_tasks_out(task_count).long_task_name := g_tasks_in(task_count).long_task_name;
      g_tasks_out(task_count).pm_task_reference := g_tasks_in(task_count).pm_task_reference;
      g_tasks_out(task_count).task_description := g_tasks_in(task_count).task_description;
      g_tasks_out(task_count).pa_task_number := g_tasks_in(task_count).pa_task_number;
      g_tasks_out(task_count).work_type_id := g_tasks_in(task_count).work_type_id; ---ADDED BY Mousami,If work type present in XML take that work type for new task
      IF g_tasks_out(task_count).pa_task_id IS NULL THEN
        BEGIN

          SELECT task_id,
                 --NVL(g_tasks_out(task_count).work_type_id, work_type_id)  commented for CR24470
                 NVL(g_tasks_in(task_count).work_type_id, work_type_id)
            INTO g_tasks_out(task_count).pa_task_id,
                 g_tasks_out(task_count).work_type_id
            FROM pa_tasks
           WHERE project_id = p_project_id
             AND task_number = g_tasks_out(task_count).pa_task_number;
        EXCEPTION
          WHEN no_data_found THEN
            write_into_file('New Tasks');
            p_new_task_found := 'Y';
          WHEN OTHERS THEN
            NULL;
        END;
      END IF;
      write_into_file('work_type_id : ' || g_tasks_out(task_count)
                      .work_type_id);
      write_into_file('Task ID : ' || g_tasks_out(task_count).pa_task_id);
      IF g_tasks_out(task_count).work_type_id IS NULL THEN
        BEGIN
          SELECT NVL(g_tasks_out(task_count).work_type_id, work_type_id)
            INTO g_tasks_out(task_count).work_type_id
            FROM pa_tasks
           WHERE project_id = p_project_id
             AND task_id = g_tasks_out(task_count).pa_task_id;
        EXCEPTION
          WHEN no_data_found THEN
            write_into_file('New Tasks');
            p_new_task_found := 'Y';
          WHEN OTHERS THEN
            NULL;
        END;
      END IF;
      write_into_file('work_type_id : ' || g_tasks_out(task_count)
                      .work_type_id);
      write_into_file('Task ID : ' || g_tasks_out(task_count).pa_task_id); --- Added for CR24470
      g_tasks_out(task_count).tasks_dff := 'N';
      g_tasks_out(task_count).billable_flag := g_tasks_in(task_count).billable_flag;
      g_tasks_out(task_count).chargeable_flag := g_tasks_in(task_count).chargeable_flag;
      g_tasks_out(task_count).task_start_date := g_tasks_in(task_count).task_start_date;
      g_tasks_out(task_count).task_completion_date := g_tasks_in(task_count).task_completion_date;
      g_tasks_out(task_count).ready_to_bill_flag := g_tasks_in(task_count).ready_to_bill_flag;
--      if NVL(g_tasks_in(task_count).pm_parent_task_reference,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR) <> PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR then
        g_tasks_out(task_count).pm_parent_task_reference := g_tasks_in(task_count).pm_parent_task_reference;--,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR);
--      end if;
      --      g_tasks_out(task_count).work_type_id := g_tasks_in(task_count).work_type_id; -- Commented by vinod
      g_tasks_out(task_count).ready_to_distribute_flag := g_tasks_in(task_count).ready_to_distribute_flag;
      g_tasks_out(task_count).attribute1 := g_tasks_in(task_count).attribute1;
      g_tasks_out(task_count).attribute2 := g_tasks_in(task_count).attribute2;
      g_tasks_out(task_count).attribute3 := g_tasks_in(task_count).attribute3;
      g_tasks_out(task_count).attribute4 := g_tasks_in(task_count).attribute4;
      g_tasks_out(task_count).attribute5 := g_tasks_in(task_count).attribute5;
      g_tasks_out(task_count).attribute6 := g_tasks_in(task_count).attribute6;
      g_tasks_out(task_count).attribute7 := g_tasks_in(task_count).attribute7;
      g_tasks_out(task_count).attribute8 := g_tasks_in(task_count).attribute8;
      g_tasks_out(task_count).attribute9 := g_tasks_in(task_count).attribute9;
      g_tasks_out(task_count).attribute10 := g_tasks_in(task_count).attribute10;
      g_tasks_out(task_count).attribute11 := g_tasks_in(task_count).attribute11;
      g_tasks_out(task_count).attribute12 := g_tasks_in(task_count).attribute12;
      g_tasks_out(task_count).attribute13 := g_tasks_in(task_count).attribute13;
      g_tasks_out(task_count).attribute14 := g_tasks_in(task_count).attribute14;
      g_tasks_out(task_count).attribute15 := g_tasks_in(task_count).attribute15;
      g_tasks_out(task_count).pm_source_code := g_tasks_in(task_count).pm_source_code;
      g_tasks_out(task_count).address_id := g_tasks_in(task_count).address_id;
      write_into_file('Task Source Code :' || g_tasks_out(task_count).pm_source_code || '-' || g_tasks_in(task_count).pm_source_code);
      --Added by Joydeb as per RT7137886
      IF g_tasks_in(task_count).service_type_code IS NOT NULL THEN

        g_tasks_out(task_count).service_type_code := g_tasks_in(task_count).service_type_code;
      END IF;

      --Added by Joydeb as per CR7680
      IF g_tasks_in(task_count).limit_to_txn_controls_flag IS NOT NULL THEN

        g_tasks_out(task_count).limit_to_txn_controls_flag := g_tasks_in(task_count).limit_to_txn_controls_flag;
      END IF;
      -- End of Added by Joydeb as per CR7680
       -------CR24148: Start Default Task PM-------
      IF NVL(g_default_task_pm,'N') = 'Y' AND g_tasks_in(task_count).task_manager_person_id IS NOT NULL THEN

         g_tasks_out(task_count).task_manager_person_id := g_tasks_in(task_count).task_manager_person_id;
         write_into_file('Default Project PM ID as Task PM - Upd Mode:' || g_tasks_out(task_count).task_manager_person_id);

      END IF;
       -------End Default Task PM-------

    END LOOP;
  END get_task_update;

  /*
  ** Procedure Name  : process_transaction
  ** Purpose:  For Process the Inbound information
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 11-Oct-13            Vipul Gosai      Created new
  ** 26-Nov-14            Vipul Gosai      HPQC:15894Project Failures in Load test for Multicurrency projects
  */
  PROCEDURE process_transaction( --p_agr_rec           IN OUT g_agr_rec_in
                                x_return_status  OUT VARCHAR2,
                                x_return_message OUT VARCHAR2)
  IS
    x_data                     VARCHAR2(2000);
    l_err_msg                  VARCHAR2(4000);
    x_msg_index_out            NUMBER;
    x_msg_count                NUMBER;
    x_msg_data                 VARCHAR2(2000);
    --x_return_status                 VARCHAR2 (2000);
    e_api_err                  EXCEPTION;
    l_agr_err_msg              VARCHAR2(4000);
    l_workflow_started         VARCHAR2(2) := 0;
    -- l                            NUMBER                                   := 1;
    budget_cnt                 NUMBER := 0;
    l_cnt_ecb                  NUMBER; -- Variable to keep count of estimated cost budget in a project
    l_cnt_fr_fc                NUMBER; -- Variable to keep count of Forecast cost and Forecast Revenue in a project
    l_tot_cnt_ecb              NUMBER; -- Variable to keep count of estimated cost budget in a project
    l_tot_cnt_fr_fc            NUMBER; -- Variable to keep count of Forecast cost and Forecast Revenue in a project

    l_precision                   gl_currencies.precision%type ;
    l_baseline_funding_flag    VARCHAR2(1);
    l_agr_err                  VARCHAR(4000) := 'ERROR :';
    l_prj_err                  VARCHAR(4000) := 'ERROR :';
    l_err_flag                 VARCHAR2(1) := 'N';
    l_prj_err_flag             VARCHAR2(1) := 'N';
    l_inv_currency_code        pa_project_customers.inv_currency_code%TYPE;
    l_inv_rate_type            pa_project_customers.inv_rate_type%TYPE;
    e_invalid_partner          EXCEPTION;
    l_out_pa_task_id           NUMBER;
    l_out_pm_task_reference    VARCHAR2(2000);
    l_customer_id              NUMBER;
    p_pa_project_id_out        NUMBER;
    p_pa_project_number_out    VARCHAR2(200);
    p_task_id                  NUMBER;
    l_new_task_found           VARCHAR2(1) := 'N'; -- Added by vinod
    l_project_blank            pa_project_pub.project_in_rec_type; --Added by Joydeb as per RT7071677
    lv_cust_recvr_keyname      xxint_event_type_key_vals.key_name%TYPE := 'ALLOW_CUSTOM_CREDIT_RECEIVER'; --added by mousami CR24557
    -- CR25098 - Local Variables - START
    lv_cust_recvr_task_keyname xxint_event_type_key_vals.key_name%TYPE := 'ALLOW_CUSTOM_CREDIT_REC_TASK';
    gv_project_id              pa_projects_all.project_id%TYPE; -- Added for CR25098
    -- CR25098 - Local Variables - END
    --lv_completion_date      pa_projects_all.completion_date%type;

  BEGIN
    -- Process Steps
    -- 1. Create all projects under one agreement
    -- 1.1 Update Project Customer for Multi Currency
    -- 2. Create Credit Receiver -- Customer Solution
    -- 3. For Base Line Funding Flag = N, populate budget table type
    -- 4. Create Agreement with Funding
    -- 5. Create Automatic Base Line  only for projects with Base Line Funding Flag = Y
    -- 6. Create Budget for those projects where Base Line Funding Flag = N
    -- 7. Create Budget baseline for those projects where Base Line Funding Flag = N
    -- 8. UPdate Project Status as per Partner
    gv_procedure_name := 'process_transaction';
    gv_poo            := 'Start';
    write_into_file(gv_procedure_name || '.' || gv_poo);
    gv_poo             := 'Assign Agreement Record for API';
    g_agreement_in_rec := g_agr_rec.agr_main_rec;
    l_agr_err          := 'Agreement# ' || g_agreement_in_rec.agreement_num || ' Error :';
    gv_poo             := 'Start Project Record Assignment for API and Call Project Creation API';
    g_key_members.delete;
    g_budget_tbl.DELETE;

    IF g_agr_rec.g_prj_tbl.COUNT > 0
	THEN
      FOR p IN 1 .. g_agr_rec.g_prj_tbl.COUNT
	  LOOP
        -- Initial Variables
        g_proj_bud_version_name := NULL;
        gv_poo                  := 'Assign Record type to API Record Type';
        g_project_in            := g_agr_rec.g_prj_tbl(p).prj_main_rec;
        g_project_blank         := l_project_blank; -- Added by Joydeb as per RT7071677, Initialize the project record type with a blank record type

        IF g_agr_rec.g_prj_tbl(p).prj_extra_rec.proj_rev_version_name IS NOT NULL
		THEN
          g_proj_bud_version_name := g_agr_rec.g_prj_tbl(p).prj_extra_rec.proj_rev_version_name;
        END IF;

		-- Assign project number to error variable
        l_prj_err             := 'Project# :' || g_project_in.pa_project_number;
        write_into_file('Processing start for ' || l_prj_err);
        gv_poo                := 'Start Project Task Assignment for API';
        g_tasks_in            := g_agr_rec.g_prj_tbl(p).g_prj_task_rec.tasks_in_tbl;

        gv_poo                := 'Start Project Customer Assignment for API';
        g_customers_in        := g_agr_rec.g_prj_tbl(p).g_prj_cust_rec.prj_cust_tbl;
        gv_poo                := 'Start Project Key Members Assignment for API';
        g_key_members         := g_agr_rec.g_prj_tbl(p).g_prj_player_rec.prj_player_main_tbl;
        gv_poo                := 'Start Project Classification Assignment for API';
        g_class_categories_in := g_agr_rec.g_prj_tbl(p).g_class_categories_tbl;
        g_budget_prj_tbl      := g_agr_rec.g_prj_tbl(p).g_budget_prj_tbl; -- Added for Phase 3B

        IF g_project_in.pa_project_id IS NULL
		THEN
          g_process_mode := 'CREATE';

        ELSE
          g_process_mode := 'UPDATE';

          IF NVL(g_partner_proj_update_allow, 'XX') <> 'Y'
		  THEN
            x_return_message := 'Project Exists in Oracle Updates not allowed'; -- Added for RT7010726
            RAISE e_invalid_partner;
          END IF;
        END IF;

        write_into_file('Process Mode : ' || g_process_mode);
        write_into_file('BaseLine Funding Flag : ' ||g_project_in.baseline_funding_flag);
        ---added by Mousami CR24557 Start -------
        ---check record will populte in Custom table or standard table

        g_allow_cust_crdt_recvr := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                 p_key_type       => gc_key_type,
                                                                                 p_key_type_value => gv_source_system,
                                                                                 p_name           => lv_cust_recvr_keyname), 'N');
        -- CR25098 - Fetch Additional Key Value Pair - START
		g_allow_cust_crdt_recvr_task := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                                 p_key_type       => gc_key_type,
                                                                                 p_key_type_value => gv_source_system,
                                                                                 p_name           => lv_cust_recvr_task_keyname), 'N');
        -- CR25098 - Fetch Additional Key Value Pair - END

		---added by Mousami CR24557 End -------
        /* PROJECT CREATION START*/
        IF g_process_mode = 'CREATE'
		THEN
          FOR i in g_class_categories_in.FIRST .. g_class_categories_in.LAST
		  LOOP
            write_into_file(g_class_categories_in(i).class_code || ' - ' || g_class_categories_in(i).class_category);
          END LOOP;

          BEGIN
            gv_poo := 'Call Project Creation API Start';
            pa_project_pub.create_project(p_api_version_number => gc_api_version_number,
                                          p_commit             => FND_API.G_FALSE,
                                          p_init_msg_list      => FND_API.G_TRUE,
                                          p_msg_count          => g_msg_count,
                                          p_msg_data           => g_msg_data,
                                          p_return_status      => g_return_status,
                                          p_workflow_started   => l_workflow_started,
                                          p_pm_product_code    => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                          p_project_in         => g_project_in,
                                          p_project_out        => g_project_out,
                                          p_customers_in       => g_customers_in,
                                          p_key_members        => g_key_members,
                                          p_class_categories   => g_class_categories_in,
                                          p_tasks_in           => g_tasks_in,
                                          p_tasks_out          => g_tasks_out);

            write_into_file('Project Creation Status ' ||
                            g_project_in.pa_project_number || '*' ||
                            g_return_status || '-' || g_msg_count); --g_project_out.pa_project_id||'**'||g_msg_count||'.***.'||g_msg_data||'.'||g_return_status||'**'||g_data);

			if g_return_status = 'S' then
				gv_project_id := g_project_out.pa_project_id; -- CR25098 - Assigning Project Id in Global Variable
			end if;
			IF g_return_status <> 'S'
			THEN
              IF g_msg_count >= 1
			  THEN
                FOR i IN 1 .. g_msg_count
				LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                write_into_file(g_data);
				END LOOP; --i in 1..g_msg_count


                l_prj_err := l_prj_err || ': Status :' || g_return_status ||'. Error :' || g_data;
                l_err_flag := 'Y';
                g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                l_agr_err := l_agr_err || '.' || l_prj_err;
              END IF; -- g_msg_count >= 1 THEN
            END IF; --g_return_status <> 'S' THEN

            IF g_return_status = 'S'
			THEN
              -- Update Project Customer for Multi Currency
              -- In case of different Invoice currency, pa_project_pub.create_project is not updating the passing Invoice Currency code
              gv_poo := 'Call Project Customer Update ';

			  BEGIN
                BEGIN
                  SELECT inv_currency_code, inv_rate_type
                    INTO l_inv_currency_code, l_inv_rate_type
                    FROM pa_project_customers
                   WHERE project_id = g_project_out.pa_project_id;

                EXCEPTION
				  WHEN NO_DATA_FOUND THEN
                    NULL;
                  WHEN OTHERS THEN
                    NULL;
                END;

                IF g_customers_in.count > 0
				THEN
                  FOR c IN 1 .. g_customers_in.COUNT
				  LOOP
                    -- Call API only when passing currency is differnt then default
                    IF l_inv_currency_code <> g_customers_in(c).inv_currency_code
					THEN
                      gv_poo := 'Call Project Customer Update API Start';
                      write_into_file('Currency : ' || l_inv_currency_code || '**' || g_customers_in(c).inv_currency_code);
                      write_into_file('g_customers_in(c).bill_to_customer_id' || g_customers_in(c).bill_to_customer_id);
                      write_into_file('g_customers_in(c).ship_to_customer_id' || g_customers_in(c).ship_to_customer_id);
                      write_into_file('g_customers_in(c).ship_to_address_id' || g_customers_in(c).ship_to_address_id);
                      write_into_file('g_customers_in(c).bill_to_address_id' || g_customers_in(c).bill_to_address_id);

                      pa_customers_contacts_pub.update_project_customer(p_api_version               => gc_api_version_number,
                                                                        p_init_msg_list             => FND_API.G_FALSE,
                                                                        p_commit                    => FND_API.G_FALSE,
                                                                        p_validate_only             => FND_API.G_FALSE,
                                                                        p_validation_level          => 100,
                                                                        p_project_id                => g_project_out.pa_project_id,
                                                                        p_customer_id               => g_customers_in(c).customer_id,
                                                                        p_project_relationship_code => g_customers_in(c).project_relationship_code,
                                                                        p_customer_bill_split       => g_customers_in(c).customer_bill_split,
                                                                        p_bill_to_customer_id       => g_customers_in(c).bill_to_customer_id,
                                                                        p_ship_to_customer_id       => g_customers_in(c).ship_to_customer_id,
                                                                        p_bill_to_address_id        => g_customers_in(c).bill_to_address_id,
                                                                        p_ship_to_address_id        => g_customers_in(c).ship_to_address_id,
                                                                        p_bill_site_name            => 'BILL_SITE_NM',
                                                                        p_work_site_name            => 'SHIP_SITE_NM',
                                                                        p_inv_currency_code         => g_customers_in(c).inv_currency_code,
                                                                        p_inv_rate_type             => l_inv_rate_type
                                                                        --,p_allow_user_rate_type_flag => 'N'
                                                                       ,
                                                                        p_record_version_number      => 1,
                                                                        x_return_status              => g_return_status,
                                                                        x_msg_count                  => g_msg_count,
                                                                        x_msg_data                   => g_msg_data,
                                                                        p_Default_Top_Task_Cust_Flag => 'N',
                                                                        p_en_top_task_cust_flag      => 'N');
                      write_into_file('g_return_status : ' || g_return_status);

					  IF g_return_status <> 'S'
					  THEN
                        IF g_msg_count >= 1
						THEN
                          FOR i IN 1 .. g_msg_count
						  LOOP
                            pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                                p_msg_index     => i,
                                                                p_encoded       => 'F',
                                                                p_data          => g_data,
                                                                p_msg_count     => g_msg_count,
                                                                p_msg_index_out => g_msg_index_out);
                          END LOOP; --i in 1..g_msg_count

						  l_prj_err := l_prj_err || ': Status :' || g_return_status || '. Error :' || g_data;
                          l_err_flag := 'Y';
                          g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                          g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                          l_agr_err := l_agr_err || '.' || l_prj_err;
                        END IF; -- g_msg_count >= 1 THEN
                      END IF; --g_return_status <> 'S' THEN
                    END IF; --IF l_inv_currency_code <> g_project_in(c).inv_currency_code THEN
                  END LOOP; --FOR c IN 1..g_customers_in.COUNT LOOP
                END IF; -- IF g_customers_in.count > 0 THEN

                EXCEPTION
				  WHEN OTHERS THEN
                    NULL;
                END;

              --end if;
              -- End Update Project Customer for Multi Currency
              -- Create Credit Receiver
                IF g_return_status = 'S'
				THEN
                  BEGIN
                    process_credit_receiver(p_project_id       => g_project_out.pa_project_id,
                                            p_prj_crd_recver_tbl => g_agr_rec.g_prj_tbl(p).g_prj_crd_recver_tbl,
                                            x_return_status      => x_return_status,
                                            x_return_message     => x_return_message);

                    IF NVL(x_return_status, 'XX') = gc_error
					THEN
                      l_prj_err := l_prj_err || x_return_message;
                      l_err_flag := 'Y';
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                      l_agr_err := l_agr_err || '.' || l_prj_err;
                    END IF;

                  EXCEPTION
				    WHEN OTHERS THEN
                      write_into_file('Exception while insert ' || SQLERRM);
                      l_prj_err := l_prj_err ||'. Exception at Credit Receiver : ' ||SQLERRM;
                      l_err_flag := 'Y';
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                      l_agr_err := l_agr_err || '.' || l_prj_err;
                  END;

                  -- CR25098 - Procedure Call to Insert Task Salesrep Split - START
                  write_into_file('g_allow_cust_crdt_recvr_task: ' || g_allow_cust_crdt_recvr_task);
                  IF g_allow_cust_crdt_recvr_task = 'Y'
                  THEN
                    FOR cr IN 1 .. g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_crd_rec_split_tbl.COUNT
                    LOOP
                      BEGIN
                        gv_poo := 'Calling process_credit_rec_split. ';
                        write_into_file(gv_poo);
                        process_credit_rec_split(p_project_id           => gv_project_id, --g_project_out.pa_project_id,
                                                 p_prj_crd_recver_split => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_crd_rec_split_tbl(cr).salesrep_split,
                                                 p_tasks_num            => g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_crd_rec_split_tbl(cr).pa_task_number,
                                                 x_return_status        => x_return_status,
                                                 x_return_message       => x_return_message);

                        IF NVL(x_return_status, 'XX') = gc_error
                        THEN
                          l_prj_err := l_prj_err || x_return_message;
                          l_err_flag := 'Y';
                          g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                          g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                          l_agr_err := l_agr_err || '.' || l_prj_err;
                        END IF;

                      EXCEPTION
                        WHEN OTHERS THEN
                          write_into_file(gv_poo || ' - ' || 'Exception while insert ' || SQLERRM);
                          l_prj_err := l_prj_err ||'. Exception at Credit Receiver : ' ||SQLERRM;
                          l_err_flag := 'Y';
                          g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                          g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                          l_agr_err := l_agr_err || '.' || l_prj_err;
                      END;
                    END LOOP;
                  END IF; -- IF g_allow_cust_crdt_recvr_task = 'Y'
                  -- CR25098 - Procedure Call to Insert Task Salesrep Split - END
                END IF; --g_return_status = 'S' THEN
                -- END Create Credit Receiver

                gv_poo := 'For Budget Record for Equipment kind of Projects where base line funding flag = N';
                write_into_file('Budget Table Count : ' ||g_budget_prj_tbl.COUNT);

              --Phase 3B
                IF l_err_flag = 'N' AND g_budget_prj_tbl.COUNT > 0 THEN
                    --and (gv_source_system = 'FOE') THEN
                    --FOR prj_budget_cnt IN 1 .. g_budget_prj_tbl.COUNT LOOP  --commented for CR24470
                    FOR prj_budget_cnt IN g_budget_prj_tbl.first .. g_budget_prj_tbl.last LOOP
                      -- Added for CR24470
                      g_budget_prj_tbl(prj_budget_cnt).p_pa_project_id := NVL(g_budget_prj_tbl(prj_budget_cnt).p_pa_project_id,g_project_out.pa_project_id);
                      g_budget_prj_tbl(prj_budget_cnt).p_pm_project_reference := NVL(g_budget_prj_tbl(prj_budget_cnt).p_pm_project_reference,
                                                                                     g_project_in.pm_project_reference);
                      --FOR bud_line_count IN 1 .. g_budget_prj_tbl(prj_budget_cnt)
                      --                           .g_budget_line_in_tbl.count LOOP -- commented for CR24470
                      --Added for CR24470
                        FOR bud_line_count IN g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                                               .g_budget_line_in_tbl.last LOOP
                            write_into_file('Budget Line Task Number : ' || g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count)
                                            .task_number);
                            IF g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count).task_number IS NOT NULL THEN

                              BEGIN

                                SELECT task_id,
                                       pm_task_reference,
                                       pwt.work_type_id, --Added for CR24470
                                       pwt.name --Added for CR24470
                                INTO g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(bud_line_count).pa_task_id,
                                       g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(bud_line_count).pm_task_reference,
                                       g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count).work_type_id, --Added for CR24470
                                       g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count).work_type --Added for CR24470
                                /*FROM pa_tasks
                                WHERE project_id = g_project_out.pa_project_id
                                  AND task_number = g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count)
                                     .task_number;*/
                                FROM pa_tasks pt, pa_work_types_tl pwt
                                WHERE pt.project_id = g_budget_prj_tbl(prj_budget_cnt).p_pa_project_id --g_project_out.pa_project_id
                                AND pt.task_number = g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count).task_number
                                AND pwt.work_type_id = pt.work_type_id
                                AND pwt.language = 'US';

                              EXCEPTION WHEN NO_DATA_FOUND THEN
                                  write_into_file('Task Not Available for Budget Line');
                              END;

                            END IF;

                        END LOOP;
                    END LOOP;
                END IF; --IF l_err_flag = 'N' THEN
              --End of Phase 3B
                IF l_err_flag = 'N' AND g_budget_prj_tbl.COUNT = 0 THEN
                    -- Assign for Budget create record in case of Equipment Project
                    BEGIN

                        SELECT baseline_funding_flag
                        INTO l_baseline_funding_flag
                        FROM pa_projects
                        WHERE project_id = g_project_out.pa_project_id;

                        write_into_file('baseline_funding_flag ' ||g_project_in.pa_project_number || '**' ||l_baseline_funding_flag);
                      --
                        IF l_baseline_funding_flag = 'N' THEN

                            budget_cnt := g_budget_tbl.count + 1; --Added for CR24470
                            --budget_cnt := budget_cnt + 1;  --commented for CR24470
                            g_budget_tbl(budget_cnt).g_budget_prj_tbl(budget_cnt).p_pa_project_id := g_project_out.pa_project_id;
                            g_budget_tbl(budget_cnt).g_budget_prj_tbl(budget_cnt).p_pm_project_reference := g_project_in.pm_project_reference;
                            g_budget_tbl(budget_cnt).g_budget_prj_tbl(budget_cnt).p_rev_budget_entry_method_cd := g_agr_rec.g_prj_tbl(p).prj_extra_rec.
                                                                                                                  rev_budget_entry_method_cd;
                            g_budget_tbl(budget_cnt).g_budget_prj_tbl(budget_cnt).budget_version_name := g_agr_rec.g_prj_tbl(p).prj_extra_rec.
                                                                                                         proj_rev_version_name;

                            FOR t IN 1 .. g_tasks_in.COUNT LOOP

                                BEGIN

                                    SELECT task_id,
                                           pm_task_reference,
                                           g_agr_rec.g_prj_tbl(p).g_prj_task_rec.g_prj_task_extra_tbl(t).reserve_amount
                                    INTO g_budget_tbl(budget_cnt).g_budget_line_in_tbl(t).pa_task_id,
                                           g_budget_tbl(budget_cnt).g_budget_line_in_tbl(t).pm_task_reference,
                                           g_budget_tbl(budget_cnt).g_budget_line_in_tbl(t).revenue
                                    FROM pa_tasks
                                    WHERE project_id = g_project_out.pa_project_id
                                    AND task_number = g_tasks_in(t).pa_task_number;

                                EXCEPTION WHEN OTHERS THEN
                                  NULL;
                                END;
                                write_into_file('Task Details : ' || g_budget_tbl(budget_cnt).g_budget_line_in_tbl(t)
                                              .pa_task_id || '**' || g_budget_tbl(budget_cnt).g_budget_line_in_tbl(t)
                                              .pm_task_reference || '**' || g_budget_tbl(budget_cnt).g_budget_line_in_tbl(t)
                                              .revenue);
                            END LOOP; --FOR t IN 1..g_tasks_in.COUNT LOOP

                        END IF; --l_baseline_funding_flag = 'N' THEN

                    EXCEPTION
					  WHEN OTHERS THEN
                        NULL;
                    END;
                  END IF; --IF l_err_flag = 'N' THEN
                END IF; --IF g_return_status = 'S' THEN

                -- CR25098 - Call output_tax_code Update - START
                gv_poo := 'Call Update Project for Output Tax Code ';
                write_into_file(gv_poo);

                IF g_project_in.output_tax_code IS NOT NULL
                THEN
                  BEGIN
                    pa_project_pub.update_project(p_api_version_number => gc_api_version_number,
                                                  p_commit             => fnd_api.g_false,
                                                  p_init_msg_list      => fnd_api.g_false,
                                                  p_msg_count          => g_msg_count,
                                                  p_msg_data           => g_msg_data,
                                                  p_return_status      => g_return_status,
                                                  p_workflow_started   => l_workflow_started,
                                                  p_pm_product_code    => g_prj_pm_product_code,
                                                  p_project_in         => g_project_in,
                                                  p_project_out        => g_project_out,
                                                  p_tasks_in           => g_tasks_blank,
                                                  p_tasks_out          => g_tasks_out);
                  EXCEPTION
                    WHEN OTHERS THEN
                      l_err_msg := ' API pa_project_pub.update_project Exception for Project# ' || g_project_in.pa_project_number || '.' || SQLERRM;
                      write_into_file(l_err_msg);
                      l_err_flag := 'Y';
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_err_msg;
                      x_return_message := x_return_message || '.' || l_err_msg;
                END;

                IF g_return_status <> 'S'
                THEN
                  IF g_msg_count >= 1
                  THEN
                    FOR i IN 1 .. g_msg_count
                    LOOP
                      pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                          p_msg_index     => i,
                                                          p_encoded       => 'F',
                                                          p_data          => g_data,
                                                          p_msg_count     => g_msg_count,
                                                          p_msg_index_out => g_msg_index_out);
                      l_err_msg := l_err_msg || '. Error :' || g_data;
                    END LOOP;

                    write_into_file('Exceptoin Raisd by Updating Output Tax Code: ' || l_err_msg);
                    l_err_flag := 'Y';
                    g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status  := gc_error;
                    g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_err_msg;
                    x_return_message := x_return_message || '.' || l_err_msg;

                  END IF; -- g_msg_count >= 1 THEN
                END IF; -- g_return_status <> 'S'
              END IF; -- IF g_project_in.output_tax_code IS NOT NULL
              -- CR25098 - Call output_tax_code Update - END

            EXCEPTION WHEN OTHERS THEN
              --RAISE e_api_err;
              l_prj_err := l_prj_err || ' API Exception: ' || sqlerrm;
              l_err_flag := 'Y';
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
              l_agr_err := l_agr_err || '.' || l_prj_err;
          END;

        ELSE
          -- Project Update Mode
          /* PROJECT UPDATE START*/
          --Added as part of Phase 3B
          g_process_mode := 'UPDATE';
          gv_poo         := 'Project Update API Start';
          g_key_members_in.DELETE; -- Added by Joydeb as per RT7070069
          validate_proj_manager_role(g_project_in.pa_project_id,
                                     g_key_members,
                                     g_key_members_in);
          get_task_update(g_project_in.pa_project_id,
                          g_tasks_in,
                          g_tasks_upd,
                          l_new_task_found); -- l_new_task_found added by vinod
          write_into_file('New Task Found : ' || l_new_task_found);

          validate_proj_customer(g_project_in.pa_project_id,
                                 g_customers_in,
                                 g_customers_upd,
                                 x_return_status,
                                 x_return_message);
          IF g_customers_in.count > 0 THEN
            FOR cust_count IN 1 .. g_customers_upd.count LOOP
              g_customers_upd(cust_count).customer_bill_split := NULL;
            END LOOP;
          END IF;
          -- Validate for Project Updates
          BEGIN
            IF g_partner_cross_prd_update = 'Y' AND
               (g_agr_rec.agr_extra_rec.pm_product_code <> gv_source_system OR
               g_partner_partial_proj_udpate = 'Y') THEN
              g_project_blank.pa_project_id := g_project_in.pa_project_id;
              --Added by Vishnu for RT7075620
              SELECT least(start_date, g_project_in.start_date)
                INTO g_project_blank.start_date
                FROM pa_projects_all
               WHERE project_id = g_project_in.pa_project_id;
              --End of Added by Vishnu for RT7075620
              g_project_blank.completion_date := g_project_in.completion_date;

              --Added by Joydeb as per RT7071677. Update the project attributes
              IF g_project_in.attribute_category IS NOT NULL THEN
                g_project_blank.attribute_category := g_project_in.attribute_category;
              END IF;
              IF g_project_in.attribute1 IS NOT NULL THEN
                g_project_blank.attribute1 := g_project_in.attribute1;
              END IF;
              IF g_project_in.attribute2 IS NOT NULL THEN
                g_project_blank.attribute2 := g_project_in.attribute2;
              END IF;
              IF g_project_in.attribute3 IS NOT NULL THEN
                g_project_blank.attribute3 := g_project_in.attribute3;
              END IF;
              IF g_project_in.attribute4 IS NOT NULL THEN
                g_project_blank.attribute4 := g_project_in.attribute4;
              END IF;
              IF g_project_in.attribute5 IS NOT NULL THEN
                g_project_blank.attribute5 := g_project_in.attribute5;
              END IF;
              IF g_project_in.attribute6 IS NOT NULL THEN
                g_project_blank.attribute6 := g_project_in.attribute6;
              END IF;
              IF g_project_in.attribute7 IS NOT NULL THEN
                g_project_blank.attribute7 := g_project_in.attribute7;
              END IF;
              IF g_project_in.attribute8 IS NOT NULL THEN
                g_project_blank.attribute8 := g_project_in.attribute8;
              END IF;
              IF g_project_in.attribute9 IS NOT NULL THEN
                g_project_blank.attribute9 := g_project_in.attribute9;
              END IF;
              IF g_project_in.attribute10 IS NOT NULL THEN
                g_project_blank.attribute10 := g_project_in.attribute10;
              END IF;
              --End of Addition by Joydeb
              -- Below added by Vinod for WRITE
              IF g_proj_status_udpate = 'Y' THEN
                g_project_blank.project_status_code := NVL(g_project_in.project_status_code,
                                                           g_project_blank.project_status_code);
              END IF;
              write_into_file('1. project_status_code : ' ||
                              g_project_blank.project_status_code);
              IF NVL(l_new_task_found, 'N') = 'N' THEN
                -- Added by vinod
                g_tasks_blank := g_tasks_upd;
                write_into_file('Task Update Appended' ||
                                g_tasks_blank.count);
              END IF;
              -- Added by vinid for WRITE
              -- If Start/end date are diffrent than existing, update the key member dates withnproject update
              g_key_members_blank.DELETE; --Added by Joydeb as per RT7070069
              IF g_key_members_in.count > 0 THEN
                write_into_file('Project manager updates will happen');
                g_key_members_blank := g_key_members_in;
              END IF;

              g_project_blank.revaluate_funding_flag  := g_agr_rec.g_prj_tbl(p).prj_main_rec.revaluate_funding_flag;    -- Added as per CR25148
              g_project_blank.include_gains_losses_flag  := g_agr_rec.g_prj_tbl(p).prj_main_rec.include_gains_losses_flag;  -- Added as per CR25148

              write_into_file('revaluate_funding_flag before update_project: '||g_project_blank.revaluate_funding_flag);
              write_into_file('include_gains_losses_flag before update_project: '|| g_project_blank.include_gains_losses_flag);

              pa_project_pub.update_project(p_api_version_number => gc_api_version_number,
                                            p_commit             => fnd_api.g_false,
                                            p_init_msg_list      => fnd_api.g_false,
                                            p_msg_count          => g_msg_count,
                                            p_msg_data           => g_msg_data,
                                            p_return_status      => g_return_status,
                                            p_workflow_started   => l_workflow_started,
                                            p_pm_product_code    => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                            p_project_in         => g_project_blank,
                                            p_project_out        => g_project_out,
                                            p_customers_in       => g_customers_blank, -- g_customers_blank,--g_customers_upd,--g_customers_in,
                                            p_key_members        => g_key_members_blank,
                                            p_class_categories   => g_class_categories_blank,
                                            p_tasks_in           => g_tasks_blank, --g_tasks_blank,--Modified as part of Phase 3B
                                            p_tasks_out          => g_tasks_out);
              -- Added for RT6754084

             write_into_file('Project Update Status : ' ||
                              g_return_status);
              IF g_return_status <> 'S' THEN
                IF g_msg_count >= 1 THEN
                  FOR i IN 1 .. g_msg_count LOOP
                    pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                        p_msg_index     => i,
                                                        p_encoded       => 'F',
                                                        p_data          => g_data,
                                                        p_msg_count     => g_msg_count,
                                                        p_msg_index_out => g_msg_index_out);
                  write_into_file('Project Update Error 1: ' || g_data);
                  END LOOP; --i in 1..g_msg_count
                  write_into_file('Project Update Error 2: ' || g_data);
                END IF; -- g_msg_count >= 1 THEN
              END IF;
              -- End of Added for RT6754084
              --dbms_output.put_line('Test Task Count  : '||g_tasks_upd.count);
              --SELECT completion_date into lv_completion_date from pa_projects_all where project_id= g_project_in.pa_project_id;

              FOR tsk_count IN 1 .. g_tasks_upd.count LOOP
                dbms_output.put_line('Test Task id  : '||g_tasks_upd(tsk_count).pa_task_id);
                IF g_tasks_upd(tsk_count).pa_task_id IS NULL THEN
                 --dbms_output.put_line('Test Task Completion Date  : '||lv_completion_date);
                  pa_project_pub.add_task(p_api_version_number => gc_api_version_number,
                                          p_commit             => fnd_api.g_false,
                                          p_init_msg_list      => fnd_api.g_false,
                                          p_msg_count          => g_msg_count,
                                          p_msg_data           => g_msg_data,
                                          p_return_status      => g_return_status,
                                          --p_workflow_started   => l_workflow_started,
                                          p_pm_product_code   => g_prj_pm_product_code, --gv_source_system, changed by vinod for WRITE
                                          p_pa_project_id     => g_project_in.pa_project_id, --IN  NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                          p_pm_task_reference => g_tasks_upd(tsk_count)
                                                                 .pm_task_reference, --IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_pa_task_number    => g_tasks_upd(tsk_count)
                                                                 .pa_task_number, --IN  VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_ref_task_id       => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          --Project Structures
                                          p_task_name                    => g_tasks_upd(tsk_count)
                                                                            .task_name, --    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_long_task_name               => g_tasks_upd(tsk_count)
                                                                            .long_task_name, --    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_task_description             => g_tasks_upd(tsk_count)
                                                                            .task_description,
                                          p_task_start_date              => g_tasks_upd(tsk_count)
                                                                            .task_start_date, --IN  DATE        := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
                                          p_task_completion_date         => g_tasks_upd(tsk_count).task_completion_date,
                                          p_pm_parent_task_reference     => nvl(g_tasks_upd(tsk_count).pm_parent_task_reference,PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR),--PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_pa_parent_task_id            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_address_id                   => g_tasks_upd(tsk_count)
                                                                            .address_id, -- PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                          p_carrying_out_organization_id => g_tasks_upd(tsk_count)
                                                                            .carrying_out_organization_id, --  IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                          p_service_type_code            => g_tasks_upd(tsk_count)
                                                                            .service_type_code, -- Added by Joydeb as part of RT7137886
                                          p_billable_flag                => g_tasks_upd(tsk_count)
                                                                            .billable_flag, --    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_chargeable_flag              => g_tasks_upd(tsk_count)
                                                                            .chargeable_flag, --  IN VARCHAR2    := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_ready_to_bill_flag           => g_tasks_upd(tsk_count)
                                                                            .ready_to_bill_flag, -- IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_ready_to_distribute_flag     => g_tasks_upd(tsk_count)
                                                                            .ready_to_distribute_flag, --     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          p_limit_to_txn_controls_flag   => NVL(g_tasks_upd(tsk_count)
                                                                                .limit_to_txn_controls_flag,
                                                                                PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR), --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR, -- Modified by Joydeb as per CR7680
                                          p_labor_bill_rate_org_id       => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_labor_std_bill_rate_schdl    => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_labor_schedule_fixed_date    => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_labor_schedule_discount      => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_nl_bill_rate_org_id          => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_nl_std_bill_rate_schdl       => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_nl_schedule_fixed_date       => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_nl_schedule_discount         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_labor_cost_multiplier_name   => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_cost_ind_rate_sch_id         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_rev_ind_rate_sch_id          => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_inv_ind_rate_sch_id          => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_cost_ind_sch_fixed_date      => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_rev_ind_sch_fixed_date       => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_inv_ind_sch_fixed_date       => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_labor_sch_type               => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_nl_sch_type                  => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_actual_start_date            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_actual_finish_date           => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_early_start_date             => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_early_finish_date            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_late_start_date              => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_late_finish_date             => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_scheduled_start_date         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_scheduled_finish_date        => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_tasks_dff                    => 'N', --bug 6153503
                                          /*                                p_attribute_category         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
p_attribute1                 => g_tasks_upd(tsk_count).attribute1, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute2                 => g_tasks_upd(tsk_count).attribute2,--PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute3                 => g_tasks_upd(tsk_count).attribute3, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      p_attribute4                 => g_tasks_upd(tsk_count).attribute4, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute5                 => g_tasks_upd(tsk_count).attribute5, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute6                 => g_tasks_upd(tsk_count).attribute6, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute7                 => g_tasks_upd(tsk_count).attribute7, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute8                 => g_tasks_upd(tsk_count).attribute8, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute9                 => g_tasks_upd(tsk_count).attribute9,--PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute10                => g_tasks_upd(tsk_count).attribute10, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_attribute11                => g_tasks_upd(tsk_count).attribute11, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR--bug 6153503
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      p_attribute12                => g_tasks_upd(tsk_count).attribute12, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR--bug 6153503
p_attribute13                => g_tasks_upd(tsk_count).attribute13, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR--bug 6153503
p_attribute14                => g_tasks_upd(tsk_count).attribute14,-- PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR--bug 6153503
p_attribute15                => g_tasks_upd(tsk_count).attribute15, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR--bug 6153503
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */
                                          p_allow_cross_charge_flag      => g_tasks_upd(tsk_count)
                                                                            .allow_cross_charge_flag, --PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_project_rate_date            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_project_rate_type            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_cc_process_labor_flag        => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_labor_tp_schedule_id         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_labor_tp_fixed_date          => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_cc_process_nl_flag           => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_nl_tp_schedule_id            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_nl_tp_fixed_date             => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          p_receive_project_invoice_flag => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          --Modified for QC20838
                                          --p_work_type_id                 => 10000, --:= PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                          p_work_type_id => NVL(g_tasks_upd(tsk_count)
                                                                .work_type_id,
                                                                10000), --:= PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                          --End of Modified for QC20838
                                          p_emp_bill_rate_schedule_id => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_job_bill_rate_schedule_id => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          --Sakthi MCB
                                          p_non_lab_std_bill_rt_sch_id => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          p_taskfunc_cost_rate_type    => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_taskfunc_cost_rate_date    => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          --Sakthi MCB
                                          --Project Structures
                                          p_structure_type         => 'FINANCIAL',
                                          p_structure_version_id   => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          P_OBLIGATION_START_DATE  => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          P_OBLIGATION_FINISH_DATE => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          P_ESTIMATED_START_DATE   => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          P_ESTIMATED_FINISH_DATE  => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          P_BASELINE_START_DATE    => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          P_BASELINE_FINISH_DATE   => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          P_CLOSED_DATE            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE,
                                          P_WQ_UOM_CODE            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_WQ_ITEM_CODE           => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_STATUS_CODE            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_WF_STATUS_CODE         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_PM_SOURCE_CODE         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_PRIORITY_CODE          => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_MILESTONE_FLAG         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_CRITICAL_FLAG          => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_INC_PROJ_PROGRESS_FLAG => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_LINK_TASK_FLAG         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          P_CALENDAR_ID            => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          P_PLANNED_EFFORT         => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          P_DURATION               => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          P_PLANNED_WORK_QUANTITY  => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM,
                                          P_TASK_TYPE              => PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
                                          --Project Structures
                                         ,
                                          p_labor_disc_reason_code     => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_non_labor_disc_reason_code => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          --PA L changes -- bug 2872708   --Add task
                                         ,
                                          p_retirement_cost_flag => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_cint_eligible_flag   => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR,
                                          p_cint_stop_date       => PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
                                          --end PA L changes -- bug 2872708
                                         ,
                                          p_pa_project_id_out     => p_pa_project_id_out --OUT NOCOPY NUMBER --File.Sql.39 bug 4440895
                                         ,
                                          p_pa_project_number_out => p_pa_project_number_out --OUT NOCOPY VARCHAR2 --File.Sql.39 bug 4440895
                                         ,
                                          p_task_id               => p_task_id --OUT    NOCOPY NUMBER --File.Sql.39 bug 4440895
                                          -- PA L Changes 3010538
                                         ,
                                          p_process_mode => 'ONLINE'
                                          -- FP-M Bug # 3301192
                                         ,
                                          p_pred_string => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          -- ,p_pred_delimiter                 IN VARCHAR2    DEFAULT ','
                                         ,
                                          p_pred_delimiter => PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                          -- FP M changes begin (venkat)
                                          /*
p_base_percent_comp_deriv_code   IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_sch_tool_tsk_type_code      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_constraint_type_code       IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_constraint_date            IN DATE   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_DATE
p_free_slack             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
p_total_slack                 IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
p_effort_driven_flag         IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_level_assignments_flag     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ,p_invoice_method              IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_customer_id                 IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
p_gen_etc_source_code             IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
changes end (venkat)
changes start (Mapping )
p_financial_task_flag        IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
p_mapped_task_id             IN NUMBER   := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM
p_mapped_task_reference      IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR
changes end (Mapping )
p_deliverable                 IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR    -- 3435905
p_deliverable_id              IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM -- 3661788 Added IN parameter
egin Venkat) Bug # 3450684 ----------------------------------------------------------
p_ext_act_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
p_ext_remain_duration         IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
p_ext_sch_duration            IN NUMBER  := PA_INTERFACE_UTILS_PUB.G_PA_MISS_NUM --Bug no 3450684
nd Venkat) Bug # 3450684 ------------------------------------------------------------
p_op_validate_flag        IN VARCHAR2     := 'Y' --added by rtarway 4218977
p_structure_updates_flag  IN VARCHAR2     := 'Y' --Added for Bug 7264422
p_adj_on_std_inv     IN VARCHAR2 := PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR   /* Added for 12.2Payroll billing ER 15883958  */);
                  write_into_file('Task Creation Status' ||
                                  g_return_status);
                  IF g_return_status <> 'S' THEN
                    IF g_msg_count >= 1 THEN
                      FOR i IN 1 .. g_msg_count LOOP
                        pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                            p_msg_index     => i,
                                                            p_encoded       => 'F',
                                                            p_data          => g_data,
                                                            p_msg_count     => g_msg_count,
                                                            p_msg_index_out => g_msg_index_out);
                      END LOOP; --i in 1..g_msg_count
                      write_into_file('Task Creation Error : ' || g_data);
                    END IF; -- g_msg_count >= 1 THEN
                  ELSE
                    g_tasks_upd(tsk_count).pa_task_id := p_task_id;
                  END IF; --g_return_status <> 'S' THEN
                END IF;
              END LOOP;
            ELSE
              pa_project_pub.update_project(p_api_version_number => gc_api_version_number,
                                            p_commit             => fnd_api.g_false,
                                            p_init_msg_list      => fnd_api.g_false,
                                            p_msg_count          => g_msg_count,
                                            p_msg_data           => g_msg_data,
                                            p_return_status      => g_return_status,
                                            p_workflow_started   => l_workflow_started,
                                            p_pm_product_code    => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                            p_project_in         => g_project_in,
                                            p_project_out        => g_project_out,
                                            p_customers_in       => g_customers_upd, -- g_customers_blank,--g_customers_upd,--g_customers_in,
                                            p_key_members        => g_key_members_in,
                                            p_class_categories   => g_class_categories_in,
                                            p_tasks_in           => g_tasks_upd, --g_tasks_blank,--Modified as part of Phase 3B
                                            p_tasks_out          => g_tasks_out);
            END IF;
            -- write_into_file ( 'Project Update Status ' || g_project_in.pa_project_number || '*' || g_project_out.pa_project_id || '**' || g_msg_count || '.***.' || g_msg_data || '.' || g_return_status || '**' || g_data );
            write_into_file('Project Update Status :' || g_return_status);
            IF g_return_status <> 'S' THEN
              IF g_msg_count >= 1 THEN
                FOR i IN 1 .. g_msg_count LOOP
                  pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                      p_msg_index     => i,
                                                      p_encoded       => 'F',
                                                      p_data          => g_data,
                                                      p_msg_count     => g_msg_count,
                                                      p_msg_index_out => g_msg_index_out);
                END LOOP; --i in 1..g_msg_count
                write_into_file(g_data);
                l_prj_err := l_prj_err || ': Status :' || g_return_status ||
                             '. Error :' || g_data;
                l_err_flag := 'Y';
                g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                l_agr_err := l_agr_err || '.' || l_prj_err;
              END IF; -- g_msg_count >= 1 THEN
            END IF; --g_return_status <> 'S' THEN
            IF g_return_status = 'S' THEN
              FOR task_count IN 1 .. g_tasks_in.count LOOP
                write_into_file('Task Update Source Code : ' || g_tasks_in(task_count)
                                .pm_source_code);
                if g_tasks_in(task_count).pa_task_id is null then
                  begin
                    select task_id
                      into g_tasks_in(task_count).pa_task_id
                      from pa_tasks
                     where project_id = g_project_in.pa_project_id
                       and pm_task_reference = g_tasks_in(task_count)
                          .pm_task_reference
                       and task_number = g_tasks_in(task_count)
                          .pa_task_number;
                  exception
                    when others then
                      null;
                  end;
                end if;
                pa_project_pub.update_task(p_api_version_number => gc_api_version_number,
                                           p_commit             => fnd_api.g_false,
                                           p_init_msg_list      => fnd_api.g_false,
                                           p_msg_count          => g_msg_count,
                                           p_msg_data           => g_msg_data,
                                           p_return_status      => g_return_status,
                                           p_pm_product_code    => g_agr_rec.agr_extra_rec.pm_product_code,
                                           p_pa_project_id      => g_project_in.pa_project_id,
                                           --                                           p_pm_task_reference          => g_tasks_in(task_count).pm_task_reference,
                                           p_pa_task_id                 => g_tasks_in(task_count)
                                                                           .pa_task_id,
                                           p_task_number                => g_tasks_in(task_count)
                                                                           .pa_task_number,
                                           p_task_name                  => g_tasks_in(task_count)
                                                                           .task_name,
                                           p_long_task_name             => g_tasks_in(task_count)
                                                                           .long_task_name,
                                           p_task_description           => g_tasks_in(task_count)
                                                                           .task_description,
                                           p_task_start_date            => g_tasks_in(task_count)
                                                                           .task_start_date,
                                           p_task_completion_date       => g_tasks_in(task_count).task_completion_date,
                                           p_tasks_dff                  => 'Y', --bug 6153503
                                           p_attribute_category         => g_tasks_in(task_count)
                                                                           .attribute_category,
                                           p_attribute1                 => g_tasks_in(task_count)
                                                                           .attribute1,
                                           p_attribute2                 => g_tasks_in(task_count)
                                                                           .attribute2,
                                           p_attribute3                 => g_tasks_in(task_count)
                                                                           .attribute3,
                                           p_attribute4                 => g_tasks_in(task_count)
                                                                           .attribute4,
                                           p_attribute5                 => g_tasks_in(task_count)
                                                                           .attribute5,
                                           p_attribute6                 => g_tasks_in(task_count)
                                                                           .attribute6,
                                           p_attribute7                 => g_tasks_in(task_count)
                                                                           .attribute7,
                                           p_attribute8                 => g_tasks_in(task_count)
                                                                           .attribute8,
                                           p_attribute9                 => g_tasks_in(task_count)
                                                                           .attribute9,
                                           p_attribute10                => g_tasks_in(task_count)
                                                                           .attribute10,
                                           p_attribute11                => g_tasks_in(task_count)
                                                                           .attribute11,
                                           p_attribute12                => g_tasks_in(task_count)
                                                                           .attribute12,
                                           p_attribute13                => g_tasks_in(task_count)
                                                                           .attribute13,
                                           p_attribute14                => g_tasks_in(task_count)
                                                                           .attribute14,
                                           p_attribute15                => g_tasks_in(task_count)
                                                                           .attribute15,
                                           p_limit_to_txn_controls_flag => NVL(g_tasks_in(task_count)
                                                                               .limit_to_txn_controls_flag,
                                                                               PA_INTERFACE_UTILS_PUB.G_PA_MISS_CHAR), -- Added by Joydeb as per CR7680
                                           p_out_pa_task_id             => l_out_pa_task_id,
                                           p_out_pm_task_reference      => l_out_pm_task_reference,
                                           P_PM_SOURCE_CODE             => g_tasks_in(task_count)
                                                                           .pm_source_code); --g_tasks_in(task_count).pm_source_code);
                write_into_file('Task Update Status(Task Number : ' || g_tasks_in(task_count)
                                .pa_task_number || ') : ' ||
                                g_return_status);
                IF g_return_status <> 'S' THEN
                  IF g_msg_count >= 1 THEN
                    FOR i IN 1 .. g_msg_count LOOP
                      pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                          p_msg_index     => i,
                                                          p_encoded       => 'F',
                                                          p_data          => g_data,
                                                          p_msg_count     => g_msg_count,
                                                          p_msg_index_out => g_msg_index_out);
                    END LOOP; --i in 1..g_msg_count
                    write_into_file(g_data);
                    l_prj_err := l_prj_err || ': Status :' ||
                                 g_return_status || '. Error :' || g_data;
                    l_err_flag := 'Y';
                    g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                    g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                    l_agr_err := l_agr_err || '.' || l_prj_err;
                  END IF; -- g_msg_count >= 1 THEN
                END IF; --g_return_status <> 'S' THEN
                ---added by Mousami CR24557 Start -------
                IF g_allow_cust_crdt_recvr = 'Y' THEN
                  BEGIN
                    write_into_file('g_project_in.pa_project_id:' ||
                                    g_project_in.pa_project_id);
                    process_credit_receiver(p_project_id         => g_project_in.pa_project_id,
                                            p_prj_crd_recver_tbl => g_agr_rec.g_prj_tbl(p)
                                                                    .g_prj_crd_recver_tbl,
                                            x_return_status      => x_return_status,
                                            x_return_message     => x_return_message);
                    IF NVL(x_return_status, 'XX') = gc_error THEN
                      l_prj_err := l_prj_err || x_return_message;
                      l_err_flag := 'Y';
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                      l_agr_err := l_agr_err || '.' || l_prj_err;
                    END IF;
                  EXCEPTION
                    WHEN OTHERS THEN
                      write_into_file('Exception while insert ' || sqlerrm);
                      l_prj_err := l_prj_err ||
                                   '. Exception at Credit Receiver : ' ||
                                   sqlerrm;
                      l_err_flag := 'Y';
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
                      g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
                      l_agr_err := l_agr_err || '.' || l_prj_err;
                  END;
                END IF;
                ---added by Mousami CR24557 End -------
              END LOOP;
            END IF;
          EXCEPTION
            WHEN OTHERS THEN
              --RAISE e_api_err;
              l_prj_err := l_prj_err || ' API Exception: ' || SQLERRM;
              l_err_flag := 'Y';
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_status := gc_error;
              g_agr_rec.g_prj_tbl(p).prj_extra_rec.prj_message := l_prj_err;
              l_agr_err := l_agr_err || '.' || l_prj_err;
          END;
          --end if;
          IF l_err_flag = 'N' AND g_budget_prj_tbl.COUNT > 0 THEN
            write_into_file('Budget Table Count : ' ||
                            g_budget_prj_tbl.COUNT);
            --FOR prj_budget_cnt IN 1 .. g_budget_prj_tbl.COUNT LOOP --commented for CR24470
            FOR prj_budget_cnt IN g_budget_prj_tbl.first .. g_budget_prj_tbl.last LOOP
              -- Added for CR24470
              g_budget_prj_tbl(prj_budget_cnt).p_pa_project_id := NVL(g_project_in.pa_project_id,
                                                                      g_project_out.pa_project_id);
              g_budget_prj_tbl(prj_budget_cnt).p_pm_project_reference := g_project_in.pm_project_reference;
              -- FOR bud_line_count IN 1 .. g_budget_prj_tbl(prj_budget_cnt)
              --                            .g_budget_line_in_tbl.count LOOP  --commented for CR24470
              -- Added for CR24470
              FOR bud_line_count IN g_budget_prj_tbl(prj_budget_cnt)
                                    .g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                                   .g_budget_line_in_tbl.last LOOP
                BEGIN
                  write_into_file('Budget Line Task Number : ' || g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count)
                                  .task_number);
                  SELECT task_id,
                         pm_task_reference,
                         pwt.work_type_id, -- Added for CR24470
                         pwt.name --- Added for CR24470
                    INTO g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(bud_line_count)
                         .pa_task_id,
                         g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(bud_line_count)
                         .pm_task_reference,
                         g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count)
                         .work_type_id, -- Added for CR24470
                         g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count)
                         .work_type -- Added for CR24470
                  /*FROM pa_tasks
                  WHERE project_id =
                        NVL(g_project_in.pa_project_id,
                            g_project_out.pa_project_id)
                    AND task_number = g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count)
                       .task_number;*/
                    FROM pa_tasks pt, pa_work_types_tl pwt
                   WHERE pt.project_id = g_budget_prj_tbl(prj_budget_cnt)
                        .p_pa_project_id --g_project_out.pa_project_id
                     AND pt.task_number = g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(bud_line_count)
                        .task_number
                     and pwt.work_type_id = pt.work_type_id
                     and pwt.language = 'US';
                EXCEPTION
                  WHEN OTHERS THEN
                    write_into_file('In Budget Exception : ' ||
                                    SUBSTR(SQLERRM, 1, 200));
                END;
              END LOOP;
            END LOOP;
          END IF; --IF l_err_flag = 'N' THEN
          --End of Phase 3B
        END IF;
        --Added for CR9339
        IF g_task_exp_limit_flag = 'Y' AND g_return_status = 'S' AND g_agr_rec.g_prj_tbl(p)
          .g_prj_task_rec.g_task_limit_exp.count > 0 THEN
          add_task_limit_exp_category(g_agr_rec.g_prj_tbl(p)
                                      .g_prj_task_rec.g_task_limit_exp);
        END IF;
        --End of Added for CR9339
      END LOOP;

    END IF; -- End of g_agr_rec.g_prj_tbl.COUNT
    --
    IF g_process_mode = 'CREATE' THEN
      /* AGREEMENT CREATION START*/
      -- If Any Error in Project Creation then Raise Exception
      IF l_err_flag = 'Y' THEN
        RAISE e_api_err;
      END IF;
      gv_poo := 'Agreement and Funding Creation API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        Agreement_cr_upd(x_return_status  => x_return_status,
                         x_return_message => x_return_message);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Agreement API Exception : ' || sqlerrm;
      END;
      --Agreement Creation API END
      -- If Any Error in Agreement or Funding then Raise Exception
      IF NVL(x_return_status, 'XX') = gc_error THEN
        RAISE e_api_err;
      END IF;
      ---Addition start for CR24470 ---
      gv_poo := 'Agreement Basline API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        agr_baseline_budget(x_return_status  => x_return_status,
                            x_return_message => x_return_message);
        write_into_file('Agreement Basline Creation Status ' ||
                        g_msg_count || '.***.' || g_msg_data || '.' ||
                        g_return_status);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Agreement Basline API Exception : ' ||
                              sqlerrm;
      END;
      --Agreement Basline Creation API END

      -- If Any Error in Agreement Basline then Raise Exception
      IF NVL(x_return_status, 'XX') = gc_error THEN
        RAISE e_api_err;
      END IF;
      ---Addition end for CR24470 ---
      --Phase 3B
      IF l_err_flag = 'N' THEN
        write_into_file('Budget Table Count : ' || g_budget_prj_tbl.COUNT);
        IF g_budget_prj_tbl.COUNT > 0 THEN
          ---Addition start for CR24470 ----
          FOR prj_budget_cnt IN g_budget_prj_tbl.first .. g_budget_prj_tbl.COUNT LOOP
            if g_budget_prj_tbl(prj_budget_cnt).budget_type_code = 'FC' then
              derive_budget_details(x_return_status, x_return_message);
              exit;
            end if;
          end loop;
          --- Additition ends for CR24470 ----
          ---FOR prj_budget_cnt IN 1 .. g_budget_prj_tbl.COUNT LOOP  -- commented for CR24470
          write_into_file('g_budget_prj_tbl.COUNT ' ||
                          g_budget_prj_tbl.COUNT);
          FOR prj_budget_cnt IN g_budget_prj_tbl.first .. g_budget_prj_tbl.COUNT LOOP
            write_into_file('Before Budget Creation API');
            write_into_file(g_budget_prj_tbl(prj_budget_cnt)
                            .p_pm_project_reference || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .p_pa_project_id || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .budget_type_code || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .entry_method_code || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .resource_list_id);
            write_into_file(g_budget_prj_tbl(prj_budget_cnt)
                            .g_budget_line_in_tbl.COUNT || '-' || g_budget_prj_tbl(prj_budget_cnt)
                            .g_budget_line_out_tbl.COUNT);
            --FOR i IN 1 .. g_budget_prj_tbl(prj_budget_cnt)
            --              .g_budget_line_in_tbl.COUNT LOOP  -- commented for CR24470
            FOR i IN g_budget_prj_tbl(prj_budget_cnt)
                     .g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                    .g_budget_line_in_tbl.last LOOP
              g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).resource_alias := NVL(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                                                                             .resource_alias,
                                                                                             g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(i)
                                                                                             .expenditure_type);
            END LOOP;
			--Added for CR25364
			if gv_supress_zero_lines = 'Y' THEN
				validate_budget_line_records(g_budget_prj_tbl(prj_budget_cnt));
            end if;
            --End of Added for CR25364
            ---Added for CR24470
            if g_budget_prj_tbl(prj_budget_cnt)
             .g_budget_line_in_tbl.COUNT > 0 then

              -----------------AC--
              for i in g_budget_prj_tbl(prj_budget_cnt)
                       .g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                      .g_budget_line_in_tbl.last loop

                write_into_file('task :' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                .pa_task_id);
              end loop;
              -----------------AC--
              BEGIN
                pa_budget_pub.create_draft_budget(p_api_version_number   => gc_api_version_number,
                                                  p_commit               => fnd_api.g_false,
                                                  p_init_msg_list        => fnd_api.g_true,
                                                  p_msg_count            => g_msg_count,
                                                  p_msg_data             => g_msg_data,
                                                  p_return_status        => g_return_status,
                                                  p_pm_product_code      => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                                  p_pm_budget_reference  => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .p_pm_project_reference,
                                                  p_pa_project_id        => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .p_pa_project_id,
                                                  p_pm_project_reference => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .p_pm_project_reference ||
                                                                             'THR API',
                                                  p_budget_version_name  => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .budget_version_name,
                                                  p_budget_type_code     => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .budget_type_code,
                                                  p_change_reason_code   => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .change_reason_code,
                                                  p_description          => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .description,
                                                  p_entry_method_code    => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .entry_method_code,
                                                  p_resource_list_name   => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .resource_list_name,
                                                  p_resource_list_id     => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .resource_list_id,
                                                  p_attribute_category   => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute_category,
                                                  p_attribute1           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute1,
                                                  p_attribute2           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute2,
                                                  p_attribute3           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute3,
                                                  p_attribute4           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute4,
                                                  p_attribute5           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute5,
                                                  p_attribute6           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute6,
                                                  p_attribute7           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute7,
                                                  p_attribute8           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute8,
                                                  p_attribute9           => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute9,
                                                  p_attribute10          => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute10,
                                                  p_attribute11          => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute11,
                                                  p_attribute12          => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute12,
                                                  p_attribute13          => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute13,
                                                  p_attribute14          => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute14,
                                                  p_attribute15          => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .attribute15,
                                                  p_budget_lines_in      => g_budget_prj_tbl(prj_budget_cnt)
                                                                            .g_budget_line_in_tbl,
                                                  p_budget_lines_out     => g_budget_line_out_tbl_t);
                write_into_file('Budget Status for ' || g_budget_prj_tbl(prj_budget_cnt)
                                .p_pm_project_reference || '**' ||
                                g_msg_count || '.***.' || g_return_status);
              EXCEPTION
                WHEN OTHERS THEN
                  write_into_file('Exception in Create Draft Budget ' ||
                                  SUBSTR(SQLERRM, 1, 200));
              END;
              IF g_return_status <> 'S' THEN
                IF g_msg_count >= 1 THEN
                  FOR i IN 1 .. g_msg_count LOOP
                    pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                        p_msg_index     => i,
                                                        p_encoded       => 'F',
                                                        p_data          => x_data,
                                                        p_msg_count     => x_msg_count,
                                                        p_msg_index_out => x_msg_index_out);
                    l_err_msg := SUBSTR(l_err_msg || '. Error :' || x_data,1,3950);
                  END LOOP; --i in 1..g_msg_count
                  l_err_flag       := 'Y';
                  x_return_message := x_return_message || '.' || l_err_msg;
                END IF; -- g_msg_count >= 1 THEN
              END IF; --g_return_status <> 'S' THEN
              write_into_file('x_return_message    : ' || x_return_message);
              write_into_file('x_msg_count       : ' || g_msg_count);
              write_into_file('x_msg_data        : ' || g_msg_data);
              write_into_file('x_return_status   : ' || g_return_status);
              --write_into_file(substr(g_msg_data,1,200));
              IF g_return_status <> 'S' AND l_err_flag = 'N' THEN
                l_err_flag := 'Y';
              END IF;
              IF l_err_flag <> 'Y' THEN
                gv_poo := 'BaseLine Budget';
                write_into_file('Calling Baseline Budget API');
                pa_budget_pub.Baseline_Budget(p_api_version_number   => gc_api_version_number,
                                              p_commit               => fnd_api.g_false,
                                              p_init_msg_list        => gc_init_msg_list,
                                              p_msg_count            => g_msg_count,
                                              p_msg_data             => g_msg_data,
                                              p_return_status        => g_return_status,
                                              p_workflow_started     => l_workflow_started,
                                              p_pm_product_code      => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                              p_pa_project_id        => g_budget_prj_tbl(prj_budget_cnt)
                                                                        .p_pa_project_id,
                                              p_pm_project_reference => g_budget_prj_tbl(prj_budget_cnt)
                                                                        .p_pm_project_reference,
                                              p_budget_type_code     => g_budget_prj_tbl(prj_budget_cnt)
                                                                        .budget_type_code);
                IF g_return_status <> 'S' THEN
                  IF g_msg_count >= 1 THEN
                    FOR i IN 1 .. g_msg_count LOOP
                      pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                          p_msg_index     => i,
                                                          p_encoded       => 'F',
                                                          p_data          => x_data,
                                                          p_msg_count     => x_msg_count,
                                                          p_msg_index_out => x_msg_index_out);
                      l_err_msg := l_err_msg || '. Error :' || x_data;
                      write_into_file(l_err_msg);
                    END LOOP; --i in 1..g_msg_count
                    l_err_flag       := 'Y';
                    x_return_message := x_return_message || '.' ||
                                        l_err_msg;
                  END IF; -- g_msg_count >= 1 THEN
                END IF; --g_return_status <> 'S' THEN
                write_into_file('x_return_message    : ' ||
                                x_return_message);
                write_into_file('x_msg_count       : ' || g_msg_count);
                write_into_file('x_msg_data        : ' || g_msg_data);
                write_into_file('x_return_status   : ' || g_return_status);
                --write_into_file(substr(g_msg_data,1,200));
                IF g_return_status <> 'S' AND l_err_flag = 'N' THEN
                  l_err_flag := 'Y';
                END IF;
              END IF;
            END IF;
          END LOOP;
        end if;
      END IF;
      IF l_err_flag = 'Y' THEN
        RAISE e_api_err;
      END IF;
      --End Phase 3B
      /* Commented the below section for CR24470 and moved this procedure call up to accomodate forecast budget calculation
         in FR budget creation, funding amount is an input in budget amount calculation and funding amount is baselined
         agr_baseline_budget procedure.So moved it up to get the calculaton value of budget amount
      */
      /*gv_poo := 'Agreement Basline API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        agr_baseline_budget(x_return_status  => x_return_status,
                            x_return_message => x_return_message);
        write_into_file('Agreement Basline Creation Status ' ||
                        g_msg_count || '.***.' || g_msg_data || '.' ||
                        g_return_status);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Agreement Basline API Exception : ' ||
                              sqlerrm;
      END;
      --Agreement Basline Creation API END
      -- If Any Error in Agreement Basline then Raise Exception
      IF NVL(x_return_status, 'XX') = gc_error THEN
        RAISE e_api_err;
      END IF;*/
      gv_poo := 'Create Draft Budget and Budget Lines for Equipment type of Project';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        cr_drft_budget_n_baseline(x_return_status  => x_return_status,
                                  x_return_message => x_return_message);
        write_into_file('Draft Baduget and Basline Creation Status ' ||
                        x_return_status || '**' || x_return_message);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Agreement Basline API Exception : ' ||
                              sqlerrm;
      END;
      --Draft Budget and Basline Creation API END
      -- If Any Error in Draft Budget and Basline then Raise Exception
      IF NVL(x_return_status, 'XX') = gc_error THEN
        RAISE e_api_err;
      END IF;

      IF g_funding_in.COUNT = 0
      AND NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                        p_key_type       => gc_key_type,
                                                        p_key_type_value => gv_source_system,
                                                        p_name           => 'CREATE_PROJ_WITHOUT_FUNDING'),'N') = 'Y' THEN

        write_into_file('Assuming only one project per payload creating for the first time, hence ignoring subproject association');

      ELSE
      -- SubProject Association
      gv_poo := 'SubProject Association API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        subproj_assoc(x_return_status  => x_return_status,
                      x_return_message => x_return_message);
        write_into_file('SubProject Association Creation Status ' ||
                        g_msg_count || '.***.' || g_msg_data || '.' ||
                        g_return_status);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. SubProject Association API Exception : ' ||
                              sqlerrm;
      END;

       END IF ;
      -- If Any Error in SubProject Association then Raise Exception
      IF NVL(x_return_status, 'XX') = gc_error THEN
        RAISE e_api_err;
      END IF;
      -- Project Status Change
      gv_poo := 'Project Status Update API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        proj_status_update(x_return_status  => x_return_status,
                           x_return_message => x_return_message);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Project Status Update API Exception : ' ||
                              sqlerrm;
      END;
    ELSE
      /* AGREEMENT UPDATE START*/
      -- Process Mode Update
      gv_poo := 'Agreement and Funding Update API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        write_into_file('Process Agreement Update : ' || gv_source_system);
        write_into_file('g_agr_partial_update : ' || g_agr_partial_update);
        --if gv_source_system in ('FOE') then  -- Commented by vinod
        IF g_agr_partial_update = 'Y' THEN
          -- Added by vinod
          agreement_update(x_return_status  => x_return_status,
                           x_return_message => x_return_message);
          write_into_file('Agreement Update Status :' || x_return_status);
        ELSE
          Agreement_cr_upd(x_return_status  => x_return_status,
                           x_return_message => x_return_message);
          write_into_file('Agreement Update Status :' || x_return_status);
        END IF;
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Agreement API Exception : ' || sqlerrm;
      END;
      --Agreement Creation API END
      IF x_return_status = gc_error THEN
        l_err_flag := 'Y';
        --- Added for CR24470 ----
        raise e_api_err;
      END IF;

      gv_poo := 'Agreement Basline API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        agr_baseline_budget(x_return_status  => x_return_status,
                            x_return_message => x_return_message);
        write_into_file('Agreement Basline Creation Status ' ||
                        g_msg_count || '.***.' || g_msg_data || '.' ||
                        g_return_status);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Agreement Basline API Exception : ' ||
                              sqlerrm;
      END;
      -- If Any Error in Agreement or Funding then Raise Exception
      IF NVL(x_return_status, 'XX') = gc_error THEN
        l_err_flag := 'Y';
        RAISE e_api_err;
        --- Ended for CR24470 ----
      END IF;
      IF l_err_flag = 'N' THEN
        write_into_file('Budget Table Count : ' || g_budget_prj_tbl.COUNT);
        --- Added for CR24470 ----
        if g_budget_prj_tbl.COUNT > 0 then
          FOR prj_budget_cnt IN 1 .. g_budget_prj_tbl.COUNT LOOP
            if g_budget_prj_tbl(prj_budget_cnt).budget_type_code = 'FC' then
              derive_budget_details(x_return_status, x_return_message); --Added for CR24470
              exit;
            end if;
          end loop;
          --- Ended for CR24470 ----
          FOR prj_budget_cnt IN 1 .. g_budget_prj_tbl.COUNT LOOP
            write_into_file('Before Budget Update API - Budget Update Flag : ' || g_budget_prj_tbl(prj_budget_cnt)
                            .budget_update_flag);
            select decode(count(1),'0','C',g_budget_prj_tbl(prj_budget_cnt).budget_update_flag)
            into g_budget_prj_tbl(prj_budget_cnt).budget_update_flag
            from pa_budget_versions
            where project_id =  g_budget_prj_tbl(prj_budget_cnt)
                              .p_pa_project_id
            and budget_type_code = g_budget_prj_tbl(prj_budget_cnt)
                              .budget_type_code;
            ---IF NVL(g_budget_prj_tbl(prj_budget_cnt).budget_update_flag, 'Y') = 'Y' THEN  -- commented for CR24470
            --- Added for CR24470
            IF NVL(g_budget_prj_tbl(prj_budget_cnt).budget_update_flag, 'Y') IN
               ('Y', 'C') THEN
              -- Added for HPQC 19004
              write_into_file(g_budget_prj_tbl(prj_budget_cnt)
                              .p_pm_project_reference || '-' || g_budget_prj_tbl(prj_budget_cnt)
                              .p_pa_project_id || '-' || g_budget_prj_tbl(prj_budget_cnt)
                              .budget_type_code || '-' || g_budget_prj_tbl(prj_budget_cnt)
                              .entry_method_code || '-' || g_budget_prj_tbl(prj_budget_cnt)
                              .resource_list_id);
              write_into_file(g_budget_prj_tbl(prj_budget_cnt)
                              .g_budget_line_in_tbl.COUNT || '-' || g_budget_prj_tbl(prj_budget_cnt)
                              .g_budget_line_out_tbl.COUNT);
              ---FOR i IN 1 .. g_budget_prj_tbl(prj_budget_cnt)
              ---              .g_budget_line_in_tbl.COUNT LOOP  -- commented for CR24470

              begin

                -- Added for CR24470
                l_cnt_fr_fc := 0 ; -- Initialize before checking whether all tasks are eligible for budget creation or budget update in case of Forecast Revenue and Forecast Cost
                l_cnt_ecb := 0 ;   -- Initialize before checking whether all tasks are eligible for budget creation or budget update in case of Estimated Cost Budget
                l_tot_cnt_fr_fc := 0 ; -- Initialize before checking whether all tasks are eligible for budget creation or budget update in case of Forecast Revenue and Forecast Cost
                l_tot_cnt_ecb := 0 ;   -- Initialize before checking whether all tasks are eligible for budget creation or budget update in case of Estimated Cost Budget
                FOR i IN g_budget_prj_tbl(prj_budget_cnt)
                         .g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                        .g_budget_line_in_tbl.last LOOP
                -- Added by Sourabh B for Defect 32191
                -- This block checks whether Estimated Cost Budget, Forecast Cost and Forecast Revenue exists in Oracle
                IF g_budget_prj_tbl(prj_budget_cnt).budget_type_code = 'Estimated Cost Budget'
                 --commented and added valid config for CR25364
--                 AND xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
--                                                               p_key_type       => gc_key_type,
--                                                               p_key_type_value => gv_source_system,
--                                                               p_name           => 'ECB_UPDATE_FLAG') = 'Y'
                 AND xxint_event_type_utils.valid_config(p_event_type     => gc_event_type,
                                                      p_key_type       => gc_key_type,
                                                      p_key_type_value => gv_source_system,
                                                      p_key_name       => 'ECB_UPDATE_FLAG',
                                                      p_key_value      => 'Y',
                                                      p_attribute4     => nvl(gv_business_offering,'XX')) = 'Y'

                THEN



                      SELECT COUNT(1)
                        INTO l_cnt_ecb
                        FROM pa_budget_lines pbl,
                             pa_budget_versions pbv,
                             pa_resource_assignments pra,
                             gl_currencies gc
                       WHERE pbl.budget_version_id                                      = pbv.budget_version_id
                         AND pra.project_id                                             = pbv.project_id
                         AND pbl.resource_assignment_id                                 = pra.resource_assignment_id
                         AND pbl.projfunc_currency_code                                 = gc.currency_code
                         AND pbv.current_flag                                           = 'Y'
                         AND pbv.budget_type_code                                       = g_budget_prj_tbl(prj_budget_cnt).budget_type_code
                         AND pbv.project_id                                             = g_budget_prj_tbl(prj_budget_cnt).p_pa_project_id
                         AND pra.task_id                                                = g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).pa_task_id
                         --AND NVL(pbl.period_name,'X')                                   = NVL(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).period_name,'X') -- Removed this condition as per Defect 32191
                         AND NVL(pbl.burdened_cost,0)                                   = NVL(ROUND(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).burdened_cost,gc.precision),0) ;

                l_tot_cnt_ecb := l_tot_cnt_ecb + l_cnt_ecb ;
                write_into_file('Total ECB count: ' ||l_tot_cnt_ecb) ;

                ELSIF g_budget_prj_tbl(prj_budget_cnt).budget_type_code = 'Estimated Revenue Budget' -- CR24909 added Estimated Revenue Budget
                --commented and added valid config for CR25364
--                 AND xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
--                                                               p_key_type       => gc_key_type,
--                                                               p_key_type_value => gv_source_system,
--                                                               p_name           => 'ERB_UPDATE_FLAG') = 'Y'
                AND xxint_event_type_utils.valid_config(p_event_type     => gc_event_type,
                                                      p_key_type       => gc_key_type,
                                                      p_key_type_value => gv_source_system,
                                                      p_key_name       => 'ERB_UPDATE_FLAG',
                                                      p_key_value      => 'Y',
                                                      p_attribute4     => nvl(gv_business_offering,'XX')) = 'Y'
                THEN

                        SELECT COUNT(1)
                        INTO l_cnt_ecb
                        FROM pa_budget_lines pbl,
                             pa_budget_versions pbv,
                             pa_resource_assignments pra,
                             gl_currencies gc
                       WHERE pbl.budget_version_id                                      = pbv.budget_version_id
                         AND pra.project_id                                             = pbv.project_id
                         AND pbl.resource_assignment_id                                 = pra.resource_assignment_id
                         AND pbl.projfunc_currency_code                                 = gc.currency_code
                         AND pbv.current_flag                                           = 'Y'
                         AND pbv.budget_type_code                                       = g_budget_prj_tbl(prj_budget_cnt).budget_type_code
                         AND pbv.project_id                                             = g_budget_prj_tbl(prj_budget_cnt).p_pa_project_id
                         AND pra.task_id                                                = g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).pa_task_id
                         --AND NVL(pbl.period_name,'X')                                   = NVL(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).period_name,'X') -- Removed this condition as per Defect 32191
                         AND NVL(pbl.revenue,0)                                         = NVL(ROUND(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).revenue,gc.precision),0) ;

                l_tot_cnt_ecb := l_tot_cnt_ecb + l_cnt_ecb ;
                write_into_file('Total ECB count: ' ||l_tot_cnt_ecb) ;


                ELSIF g_budget_prj_tbl(prj_budget_cnt).budget_type_code IN ('FR','FC')
                --commented and added valid config for CR25364
--                          AND xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
--                                                                        p_key_type       => gc_key_type,
--                                                                        p_key_type_value => gv_source_system,
--                                                                        p_name           => 'FC_FR_UPDATE_FLAG') = 'Y' THEN
                        AND xxint_event_type_utils.valid_config(p_event_type     => gc_event_type,
                                      p_key_type       => gc_key_type,
                                      p_key_type_value => gv_source_system,
                                      p_key_name       => 'FC_FR_UPDATE_FLAG',
                                      p_key_value      => 'Y',
                                      p_attribute4     => nvl(gv_business_offering,'XX')) = 'Y' THEN

                      SELECT COUNT(1)
                        INTO l_cnt_fr_fc
                        FROM pa_budget_lines pbl,
                             pa_budget_versions pbv,
                             pa_resource_assignments pra
                       WHERE pbl.budget_version_id            = pbv.budget_version_id
                         AND pra.project_id                   = pbv.project_id
                         AND pbl.resource_assignment_id       = pra.resource_assignment_id
                         AND pbv.project_id                   = g_budget_prj_tbl(prj_budget_cnt).p_pa_project_id
--                         AND pra.task_id                      = g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).pa_task_id
                         AND pbv.current_flag                 = 'Y'
                         AND pbv.budget_type_code             = g_budget_prj_tbl(prj_budget_cnt).budget_type_code ;

                 l_tot_cnt_fr_fc := l_tot_cnt_fr_fc + l_cnt_fr_fc ;
                 write_into_file('Total FR/FC count: ' ||l_tot_cnt_fr_fc) ;

                 END IF ;


                  g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i).resource_alias := NVL(g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                                                                                 .resource_alias,
                                                                                                 g_budget_prj_tbl(prj_budget_cnt).g_prj_bud_line_extra_t(i)
                                                                                                 .expenditure_type);
                  write_into_file(i || ' - ' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                  .pa_task_id);
                END LOOP;
                ---added for Cr24470
              exception
                when others then
                  write_into_file('Exception in reading Budget Line Table');
              end;
            write_into_file('l_tot_cnt_ecb : '||l_tot_cnt_ecb);
            write_into_file('l_tot_cnt_fr_fc : '||l_tot_cnt_fr_fc);
            write_into_file('Payload Count : '||g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl.COUNT);

             IF (l_tot_cnt_ecb + l_tot_cnt_fr_fc) < g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl.COUNT THEN
				if gv_supress_zero_lines = 'Y' THEN
					validate_budget_line_records(g_budget_prj_tbl(prj_budget_cnt));
				end if;
              --Added by Vishnu to check budget Update
              if g_budget_prj_tbl(prj_budget_cnt)
               .g_budget_line_in_tbl.COUNT > 0 then
               write_into_file('Budget Flag :'||g_budget_prj_tbl(prj_budget_cnt).budget_update_flag);
                if NVL(g_budget_prj_tbl(prj_budget_cnt).budget_update_flag,
                       'Y') = 'C' THEN
                  BEGIN

                    -----------------AC--
                    write_into_file('print budget det2');
                    for i in g_budget_prj_tbl(prj_budget_cnt)
                             .g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                            .g_budget_line_in_tbl.last loop
                      write_into_file('print budget det3');
                      write_into_file('task :' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                      .pa_task_id);
                      write_into_file('resource alias :' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                      .resource_alias);
                      write_into_file('Burden Cost :'|| g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                      .burdened_cost);
                    end loop;
                    -----------------AC--

                    write_into_file('Before Create Draft Budget API - Update Mode');
                    pa_budget_pub.create_draft_budget(p_api_version_number   => gc_api_version_number,
                                                      p_commit               => fnd_api.g_false,
                                                      p_init_msg_list        => fnd_api.g_true,
                                                      p_msg_count            => g_msg_count,
                                                      p_msg_data             => g_msg_data,
                                                      p_return_status        => g_return_status,
                                                      p_pm_product_code      => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                                      p_pm_budget_reference  => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .p_pm_project_reference,
                                                      p_pa_project_id        => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .p_pa_project_id,
                                                      p_pm_project_reference => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .p_pm_project_reference ||
                                                                                 'THR API',
                                                      p_budget_version_name  => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .budget_version_name,
                                                      p_budget_type_code     => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .budget_type_code,
                                                      p_change_reason_code   => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .change_reason_code,
                                                      p_description          => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .description,
                                                      p_entry_method_code    => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .entry_method_code,
                                                      p_resource_list_name   => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .resource_list_name,
                                                      p_resource_list_id     => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .resource_list_id,
                                                      p_attribute_category   => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute_category,
                                                      p_attribute1           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute1,
                                                      p_attribute2           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute2,
                                                      p_attribute3           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute3,
                                                      p_attribute4           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute4,
                                                      p_attribute5           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute5,
                                                      p_attribute6           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute6,
                                                      p_attribute7           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute7,
                                                      p_attribute8           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute8,
                                                      p_attribute9           => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute9,
                                                      p_attribute10          => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute10,
                                                      p_attribute11          => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute11,
                                                      p_attribute12          => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute12,
                                                      p_attribute13          => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute13,
                                                      p_attribute14          => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute14,
                                                      p_attribute15          => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .attribute15,
                                                      p_budget_lines_in      => g_budget_prj_tbl(prj_budget_cnt)
                                                                                .g_budget_line_in_tbl,
                                                      p_budget_lines_out     => g_budget_line_out_tbl_t);
                    write_into_file('Budget Status for ' || g_budget_prj_tbl(prj_budget_cnt)
                                    .p_pm_project_reference || '**' ||
                                    g_msg_count || '.***.' ||
                                    g_return_status);
                  EXCEPTION
                    WHEN OTHERS THEN
                      write_into_file('Exception in Create Draft Budget ' ||
                                      SUBSTR(SQLERRM, 1, 200));
                  END;
                ELSE
                  ---eneded for CR24470
                  write_into_file('Calling Budget Update');
                   for i in g_budget_prj_tbl(prj_budget_cnt)
                             .g_budget_line_in_tbl.first .. g_budget_prj_tbl(prj_budget_cnt)
                                                            .g_budget_line_in_tbl.last loop
                      write_into_file('print budget det4');
                      write_into_file('task :' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                      .pa_task_id);
                      write_into_file('resource alias :' || g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                      .resource_alias);
                      write_into_file('Burden Cost :'|| g_budget_prj_tbl(prj_budget_cnt).g_budget_line_in_tbl(i)
                                      .burdened_cost);
                    end loop;
                  BEGIN
                    pa_budget_pub.update_budget(p_api_version_number   => gc_api_version_number,
                                                p_commit               => fnd_api.g_false,
                                                p_init_msg_list        => fnd_api.g_true,
                                                p_msg_count            => x_msg_count,
                                                p_msg_data             => x_msg_data,
                                                p_return_status        => x_return_status,
                                                p_pm_product_code      => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                                p_pa_project_id        => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .p_pa_project_id,
                                                p_pm_project_reference => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .p_pm_project_reference ||
                                                                           'THR API',
                                                p_budget_type_code     => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .budget_type_code,
                                                p_change_reason_code   => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .change_reason_code,
                                                p_description          => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .description,
                                                p_attribute_category   => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute_category,
                                                p_attribute1           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute1,
                                                p_attribute2           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute2,
                                                p_attribute3           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute3,
                                                p_attribute4           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute4,
                                                p_attribute5           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute5,
                                                p_attribute6           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute6,
                                                p_attribute7           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute7,
                                                p_attribute8           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute8,
                                                p_attribute9           => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute9,
                                                p_attribute10          => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute10,
                                                p_attribute11          => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute11,
                                                p_attribute12          => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute12,
                                                p_attribute13          => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute13,
                                                p_attribute14          => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute14,
                                                p_attribute15          => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .attribute15,
                                                p_budget_lines_in      => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .g_budget_line_in_tbl,
                                                p_budget_lines_out     => g_budget_line_out_tbl_t,
                                                p_budget_version_name  => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .budget_version_name,
                                                p_resource_list_id     => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .resource_list_id);
                    write_into_file('Budget Update Status for ' || g_budget_prj_tbl(prj_budget_cnt)
                                    .p_pm_project_reference || '**' ||
                                    g_msg_count || '.***.' ||
                                    g_return_status);
                  EXCEPTION
                    WHEN OTHERS THEN
                      write_into_file('Exception in Create Draft Budget ' ||
                                      SUBSTR(SQLERRM, 1, 200));
                  END;
                END IF;
                IF g_return_status <> 'S' THEN
                  IF g_msg_count >= 1 THEN
                    FOR i IN 1 .. g_msg_count LOOP
                      pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                          p_msg_index     => i,
                                                          p_encoded       => 'F',
                                                          p_data          => x_data,
                                                          p_msg_count     => x_msg_count,
                                                          p_msg_index_out => x_msg_index_out);
                      l_err_msg := l_err_msg || '. Error :' || x_data;
                    END LOOP; --i in 1..g_msg_count
                    l_err_flag       := 'Y';
                    x_return_message := x_return_message || '.' ||
                                        l_err_msg;
                  END IF; -- g_msg_count >= 1 THEN
                END IF; --g_return_status <> 'S' THEN
                write_into_file('x_return_message    : ' ||
                                x_return_message);
                write_into_file('x_msg_count       : ' || g_msg_count);
                write_into_file('x_msg_data        : ' || g_msg_data);
                write_into_file('x_return_status   : ' || g_return_status);
                --write_into_file(substr(g_msg_data,1,200));
                IF g_return_status <> 'S' AND l_err_flag = 'N' THEN
                  l_err_flag := 'Y';
                END IF;
                IF l_err_flag <> 'Y' THEN
                  gv_poo := 'BaseLine Budget';
                  write_into_file('Calling Baseline Budget API');
                  pa_budget_pub.Baseline_Budget(p_api_version_number   => gc_api_version_number,
                                                p_commit               => fnd_api.g_false,
                                                p_init_msg_list        => gc_init_msg_list,
                                                p_msg_count            => g_msg_count,
                                                p_msg_data             => g_msg_data,
                                                p_return_status        => g_return_status,
                                                p_workflow_started     => l_workflow_started,
                                                p_pm_product_code      => g_prj_pm_product_code, --g_agr_rec.agr_extra_rec.pm_product_code,--Modified for HPQC22755
                                                p_pa_project_id        => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .p_pa_project_id,
                                                p_pm_project_reference => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .p_pm_project_reference,
                                                p_budget_type_code     => g_budget_prj_tbl(prj_budget_cnt)
                                                                          .budget_type_code);
                  IF g_return_status <> 'S' THEN
                    IF g_msg_count >= 1 THEN
                      FOR i IN 1 .. g_msg_count LOOP
                        pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                            p_msg_index     => i,
                                                            p_encoded       => 'F',
                                                            p_data          => x_data,
                                                            p_msg_count     => x_msg_count,
                                                            p_msg_index_out => x_msg_index_out);
                        l_err_msg := l_err_msg || '. Error :' || x_data;
                      END LOOP; --i in 1..g_msg_count
                      l_err_flag       := 'Y';
                      x_return_message := x_return_message || '.' ||
                                          l_err_msg;
                    END IF; -- g_msg_count >= 1 THEN
                  END IF; --g_return_status <> 'S' THEN
                  write_into_file('x_return_message    : ' ||
                                  x_return_message);
                  write_into_file('x_msg_count       : ' || g_msg_count);
                  write_into_file('x_msg_data        : ' || g_msg_data);
                  write_into_file('x_return_status   : ' ||
                                  g_return_status);
                  --write_into_file(substr(g_msg_data,1,200));
                  IF g_return_status <> 'S' AND l_err_flag = 'N' THEN
                    l_err_flag := 'Y';
                  END IF;
                END IF;
              END IF;
             END IF ;
            END IF;
          END LOOP;
        END IF;
      END IF;
      ---IF NVL(x_return_status, 'XX') = gc_error THEN  -- commented for CR24470
      IF l_err_flag = 'Y' THEN
        RAISE e_api_err;
      END IF;
      ---commented below for CR24470 ---
      /*gv_poo := 'Agreement Basline API Starts';
      BEGIN
        x_return_status  := NULL;
        x_return_message := NULL;
        agr_baseline_budget(x_return_status  => x_return_status,
                            x_return_message => x_return_message);
        write_into_file('Agreement Basline Creation Status ' ||
                        g_msg_count || '.***.' || g_msg_data || '.' ||
                        g_return_status);
      EXCEPTION
        WHEN OTHERS THEN
          x_return_status  := gc_error;
          x_return_message := '. Agreement Basline API Exception : ' ||
                              sqlerrm;
      END;*/
      -- If Any Error in Agreement or Funding then Raise Exception
      IF NVL(x_return_status, 'XX') = gc_error THEN
        RAISE e_api_err;
      END IF;
    END IF;
    -- If Any Error in Project Status Update then Raise Exception
    IF NVL(x_return_status, 'XX') = gc_error THEN
      RAISE e_api_err;
    END IF;
    --Added for CR24105
    IF NVL(x_return_status, 'XX') <> gc_error AND
       g_proj_attach_tbl.count > 0 THEN
      create_attachment(x_return_status  => x_return_status,
                        x_return_message => x_return_message);
    END IF;

    g_agr_rec.agr_extra_rec.agr_status  := gc_success;
    g_agr_rec.agr_extra_rec.agr_message := 'Transaction Created Successfully';
    x_return_status                     := gc_success;
    x_return_message                    := 'Transaction Created Successfully';
    write_into_file('Before Commit ');
  EXCEPTION
    WHEN e_invalid_partner THEN
      ROLLBACK;
      --ROLLBACK to PROJ;
      --x_return_message                    := gv_procedure_name || '.' ||gv_poo || '.' || l_agr_err || '.' ||SQLERRM;-- Added for RT7010726
      x_return_status                     := gc_warning; --gc_error -- Modified for RT7010726
      g_agr_rec.agr_extra_rec.agr_status  := gc_error;
      g_agr_rec.agr_extra_rec.agr_message := x_return_message;
      write_into_file(gv_procedure_name || '.' || gv_poo || '.' ||
                      l_agr_err || '.' || SQLERRM);
    WHEN e_api_err THEN
      ROLLBACK;
      write_into_file('After RollBack ');
      --ROLLBACK to PROJ;
      write_into_file('Error Message ' || x_return_message || '...' ||
                      l_agr_err);
      -- In case of project error its already capture
      IF l_err_flag = 'N' THEN
        IF g_msg_count >= 1 THEN
          FOR i IN 1 .. g_msg_count LOOP
            pa_interface_utils_pub.get_messages(p_msg_data      => g_msg_data,
                                                p_msg_index     => i,
                                                p_encoded       => 'F',
                                                p_data          => g_data,
                                                p_msg_count     => g_msg_count,
                                                p_msg_index_out => g_msg_index_out);
            write_into_file(g_msg_count || '.***.' || g_data);
            l_agr_err := l_agr_err || ': Status :' || g_return_status ||
                         '. Error :' || g_data;
          END LOOP;
        END IF;
      END IF;
      write_into_file('API Exception : ' || gv_procedure_name || '.' ||
                      gv_poo || '.' || l_agr_err);
      write_into_file('End Error Message ' || x_return_message || '...' ||
                      l_agr_err);
      x_return_message                    := x_return_message || '.' ||
                                             l_agr_err;
      x_return_status                     := gc_error;
      g_agr_rec.agr_extra_rec.agr_status  := gc_error;
      g_agr_rec.agr_extra_rec.agr_message := x_return_message;
    WHEN OTHERS THEN
      ROLLBACK;
      --ROLLBACK to PROJ;
      x_return_message                    := gv_procedure_name || '.' ||
                                             gv_poo || '.' || l_agr_err || '.' ||
                                             SQLERRM;
      x_return_status                     := gc_error;
      g_agr_rec.agr_extra_rec.agr_status  := gc_error;
      g_agr_rec.agr_extra_rec.agr_message := x_return_message;
      write_into_file(x_return_message);
      write_into_file(dbms_utility.format_error_stack || '-' ||
                      dbms_utility.format_error_backtrace);
  END process_transaction;

  /*
  ** Procedure Name  : purge_old_events
  ** Purpose:  For Purging Old Error Event
  ** INC0420830 - Removed purge_old_events Procedure, since it is no longer needed. As per XXINT Setup, event will not be in ERROR anymore
  */

  /*
  ** Procedure Name  : check_duplicate_events
  **
  ** Purpose:  For Checking Duplicate Events
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 14-Oct-16            Vishnu M      Created new RT6801346
  ** 13-Dec-16            Vishnu M      Updated for RT6916412 - Performance Fix
  */

  FUNCTION check_duplicate_events(P_AGREEMENT_NUM VARCHAR2,
                                  P_ATTRIBUTE4    VARCHAR2) RETURN VARCHAR2 IS
    l_prev_payload         CLOB;
    l_new_payload          CLOB;
    l_compare_payload      NUMBER;
    l_duplicate_event_flag VARCHAR2(1) := 'N';
    l_duplicate_exists     VARCHAR2(1) := 'N'; --Added for RT6916412
    CURSOR CUR_DUP_EVENTS IS
      SELECT guid
        FROM XXINT_EVENTS_V
       WHERE event_type = gc_event_type --Added for RT6916412
         AND ATTRIBUTE3 = P_AGREEMENT_NUM
         AND ATTRIBUTE4 = P_ATTRIBUTE4
         AND ATTRIBUTE5 = gc_success
         AND attribute_category = gc_event_type
         AND current_phase = 'CLOSED'
         AND guid <> g_guid
         AND ATTRIBUTE1 = gv_source_system -- Added by Vishnu for RT 5965578
         AND creation_date < (SELECT creation_date
                                FROM xxint_events_v xev2
                               WHERE xev2.guid = g_guid)
       ORDER BY creation_date DESC;
  BEGIN
    write_into_file('Checking Duplicate Event');
    write_into_file('Agreement Number : ' || P_AGREEMENT_NUM);
    write_into_file('Project Number : ' || P_ATTRIBUTE4);
    write_into_file('Source System   : ' || gv_source_system);
    --Added for RT6916412
    SELECT DECODE(COUNT(1), 0, 'N', 'Y')
      INTO l_duplicate_exists
      FROM XXINT_EVENTS_V
     WHERE event_type = gc_event_type
       AND ATTRIBUTE3 = P_AGREEMENT_NUM
       AND ATTRIBUTE4 = P_ATTRIBUTE4
       AND ATTRIBUTE5 = gc_success
       AND attribute_category = gc_event_type
       AND current_phase = 'CLOSED'
       AND guid <> g_guid
       AND ATTRIBUTE1 = gv_source_system -- Added by Vishnu for RT 5965578
       AND creation_date < (SELECT creation_date
                              FROM xxint_events_v xev2
                             WHERE xev2.guid = g_guid);
    write_into_file('Duplicate Exists Flag   : ' || l_duplicate_exists);
    IF l_duplicate_exists = 'Y' THEN
      --End of Added for RT6916412
      BEGIN
        l_new_payload := REPLACE(REPLACE(xxint_event_api_pub.get_event_clob(g_guid,
                                                                            'HTTP_RECEIVE_XML_PAYLOAD_IN'),
                                         chr(10)),
                                 chr(13));
        SELECT (tmp.column_value).getClobVal()
          INTO l_new_payload
          FROM TABLE(xmlsequence(xmltype(l_new_payload)
                                 .extract('//G_XXPA2381_INT/G_PA_AGREEMENTS_ALL'))) tmp;
        FOR REC_DUP_EVENTS IN CUR_DUP_EVENTS LOOP
          --Compare if its Duplicate
          l_prev_payload := REPLACE(REPLACE(xxint_event_api_pub.get_event_clob(REC_DUP_EVENTS.guid,
                                                                               'HTTP_RECEIVE_XML_PAYLOAD_IN'),
                                            chr(10)),
                                    chr(13));
          SELECT (tmp.column_value).getClobVal()
            INTO l_prev_payload
            FROM TABLE(xmlsequence(xmltype(l_prev_payload)
                                   .extract('//G_XXPA2381_INT/G_PA_AGREEMENTS_ALL'))) tmp;
          l_compare_payload := dbms_lob.compare(l_new_payload,
                                                l_prev_payload);
          write_into_file('Duplicate Event Output : ' || l_compare_payload || '-' ||
                          REC_DUP_EVENTS.guid);
          IF NVL(l_compare_payload, '1') = 0 THEN
            write_into_file('Duplicate Event as the Payload is already processed through GUID : ' ||
                            REC_DUP_EVENTS.guid);
            l_duplicate_event_flag             := 'Y';
            g_agr_rec.agr_extra_rec.agr_status := gc_error;
            xxint_event_api_pub.update_event(p_guid                => g_guid,
                                             p_user_status_code    => 'DUPLICATE', --'FORCE-CLOSE',  -- Modified by Joydeb as part of RT7122728
                                             p_user_status_message => 'Force closing the event as its duplicate of already processed Event GUID = ' ||
                                                                      REC_DUP_EVENTS.guid);
          ELSE
            l_duplicate_event_flag := 'N';
          END IF;
          EXIT;
        END LOOP;
      EXCEPTION
        WHEN OTHERS THEN
          l_duplicate_event_flag := 'N';
      END;
      --Added for RT6916412
    ELSE
      l_duplicate_event_flag := 'N';
    END IF;
    --End of Added for RT6916412
    RETURN l_duplicate_event_flag;
  EXCEPTION
    WHEN OTHERS THEN
      l_duplicate_event_flag := 'N';
      RETURN l_duplicate_event_flag;
  END check_duplicate_events;

  /*
  ** Procedure Name  : xxpa_delta_track_logging
  **
  ** Purpose:  For delta tracking projects and tasks
  **
  **
  ** Procedure History:
  ** Date                 Who                 Description
  ** ---------            ---------------   ----------------------------------------
  ** 05-Mar-18            Ashwini Tiwari      Created new
  */
  PROCEDURE xxpa_delta_track_logging(p_guid xxint_events.guid%type) IS
    l_changemode_enabled   VARCHAR2(1) DEFAULT 'N';
    l_proj_object          VARCHAR2(100) := 'PA_PROJECTS_ALL';
    l_task_object          VARCHAR2(100) := 'PA_TASKS';
    l_process_mode         VARCHAR2(1) DEFAULT NULL;
    l_project_status       pa_projects_all.project_status_code%type DEFAULT NULL;
    l_task_status          pa_tasks.attribute8%type DEFAULT NULL;
    l_project_id           pa_projects_all.project_id%type DEFAULT NULL;
    l_task_id              pa_tasks.task_id%type DEFAULT NULL;
    l_event_id             xxint_events.id%type DEFAULT NULL;
    l_attribute4           VARCHAR2(10) DEFAULT NULL;
    l_partner              xxint_events.attribute1%type DEFAULT NULL;
    ln_priv_count          NUMBER := 0;
    ln_priv_task_count     NUMBER := 0;
    l_additional_data      CLOB := NULL;
    l_additional_task_data CLOB := NULL;
    le_change_mode_not_enabled EXCEPTION;

  BEGIN

    BEGIN
      SELECT 'Y'
        INTO l_changemode_enabled
        FROM xxint_event_type_key_vals
       WHERE event_type = 'XXPA2101_PROJECT_CRE_UPD_OUT'
         AND key_type = 'PARTNER'
         AND key_type_value = gv_source_system
         AND key_name = 'REQUEST_TYPE'
         AND key_value = 'CHANGE'
         AND status = 'ACTIVE';
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        RAISE le_change_mode_not_enabled;
    END;

    FOR i IN 1 .. g_agr_tbl.COUNT LOOP
      FOR j IN 1 .. g_agr_tbl(i).g_prj_tbl.COUNT LOOP
        IF g_agr_rec.agr_extra_rec.agr_status = 'ERROR' THEN
          l_process_mode   := 'A';
          l_project_status := 'ERROR';
          l_attribute4     := 'ACK';
          l_partner        := gv_source_system;

          SELECT id
            INTO l_event_id
            FROM xxint_events
           WHERE event_type = 'XXPA2381_PROJECT_IN'
             AND guid = p_guid;

        ELSE
          SELECT project_status_code,
                 project_id,
                 DECODE(g_process_mode, 'CREATE', 'C', 'UPDATE', 'U', NULL)
            INTO l_project_status, l_project_id, l_process_mode
            FROM pa_projects_all
           WHERE segment1 = g_agr_tbl(i).g_prj_tbl(j)
                .prj_main_rec.pa_project_number;
        END IF;
        ----------------------------------------------------------------------------------------------------------
        -- Check if the Project ID is already populated in the XXAU_DELTA_TRACK_PRIV. This is to prevent the
        -- multiple entries in the final response XML.
        -- Insert only if there is no record present in the XXAU_DELTA_TRACK_PRIV table.
        ----------------------------------------------------------------------------------------------------------
        BEGIN
          SELECT COUNT(1)
            INTO ln_priv_count
            FROM xxau_delta_track_priv xdtp, xxau_delta_track_obj xdto
           WHERE xdtp.object_id = xdto.object_id
             AND xdto.object_code = l_proj_object
             AND xdtp.attribute1 = g_agr_tbl(i).g_prj_tbl(j)
                .prj_main_rec.pa_project_number
             AND (xdtp.numeric_key_1 = l_project_id OR
                 xdtp.numeric_key_4 = l_event_id);
        END;
        BEGIN
          ----------------------------------------------------------------------------------------------------------
          -- Check if there is a record in PRIV table. If not found then only insert to avoid duplicate records
          -- Duplicate records are not required.
          ----------------------------------------------------------------------------------------------------------
          IF ln_priv_count = 0 THEN
            l_additional_data := '<PROJECT_NAME>' ||
                                 DBMS_XMLGEN.CONVERT(g_agr_tbl(i).g_prj_tbl(j)
                                                     .prj_main_rec.project_name,
                                                     0) ||
                                 '</PROJECT_NAME>'; -- Added by Joydeb as per RT#7333653
            xxau_delta_track_api_pkg.p_create_object_delta_priv(iv_object_code        => l_proj_object,
                                                                iv_event_crud_type    => l_process_mode,
                                                                id_event_crud_date    => SYSDATE,
                                                                in_numeric_key_1      => l_project_id, --ERROR=> NULL else project_id
                                                                in_numeric_key_2      => NULL,
                                                                in_numeric_key_3      => NULL,
                                                                in_numeric_key_4      => l_event_id, --ERROR=>event_id else NULL
                                                                in_numeric_key_5      => NULL,
                                                                iv_attribute_category => 'PA_PROJECTS_ALL',
                                                                iv_attribute1         => g_agr_tbl(i).g_prj_tbl(j)
                                                                                         .prj_main_rec.pa_project_number,
                                                                iv_attribute2         => l_project_status, --ERROR=>ERROR else project_status
                                                                iv_attribute3         => NULL,
                                                                iv_attribute4         => l_attribute4, --ERROR=>'ACK' else NULL
                                                                iv_attribute5         => l_partner, ---ERROR=> Partner code else NULL
                                                                ix_xml_payload        => XMLTYPE(l_additional_data)); -- Modified by Joydeb as per RT7333653 to store the project name as attribute7 in xxint table stores concatenated value
          END IF;
        EXCEPTION
          WHEN OTHERS THEN
            write_into_file('Exception occured while delta tracking for project: ' || g_agr_tbl(i).g_prj_tbl(j)
                            .prj_main_rec.pa_project_number);
        END;

        FOR k IN 1 .. g_agr_tbl(i).g_prj_tbl(j)
                      .g_prj_task_rec.tasks_in_tbl.COUNT LOOP

          IF g_agr_rec.agr_extra_rec.agr_status <> 'ERROR' THEN
            SELECT task_id, attribute8
              INTO l_task_id, l_task_status
              FROM pa_tasks
             WHERE project_id = l_project_id
               AND task_number = g_agr_tbl(i).g_prj_tbl(j).g_prj_task_rec.tasks_in_tbl(k)
                  .pa_task_number;
          END IF;
          ----------------------------------------------------------------------------------------------------------
          -- Check if the Project ID is already populated in the XXAU_DELTA_TRACK_PRIV. This is to prevent the
          -- multiple entries in the final response XML.
          -- Insert only if there is no record present in the XXAU_DELTA_TRACK_PRIV table.
          ----------------------------------------------------------------------------------------------------------
          BEGIN
            SELECT COUNT(1)
              INTO ln_priv_task_count
              FROM xxau_delta_track_priv xdtp, xxau_delta_track_obj xdto
             WHERE xdtp.object_id = xdto.object_id
               AND xdto.object_code = l_task_object
                  --AND xdtp.numeric_key_1 = p_pa_tasks_tbl (i).project_id
                  --AND xdtp.numeric_key_3 = p_pa_tasks_tbl (i).task_id
               AND xdtp.attribute1 = g_agr_tbl(i).g_prj_tbl(j)
                  .prj_main_rec.pa_project_number
               AND xdtp.attribute3 = g_agr_tbl(i).g_prj_tbl(j).g_prj_task_rec.tasks_in_tbl(k)
                  .pa_task_number;
          END;

          BEGIN
            ----------------------------------------------------------------------------------------------------------
            -- Check if there is a record in PRIV table. If not found then only insert to avoid duplicate records
            -- Duplicate records are not required.
            ----------------------------------------------------------------------------------------------------------
            IF ln_priv_task_count = 0 THEN
              l_additional_task_data := '<PROJECT_NAME>' ||
                                        DBMS_XMLGEN.CONVERT(g_agr_tbl(i).g_prj_tbl(j)
                                                            .prj_main_rec.project_name,
                                                            0) ||
                                        '</PROJECT_NAME>'; --Added by Joydeb as per RT#7333653
              xxau_delta_track_api_pkg.p_create_object_delta_priv(iv_object_code        => l_task_object,
                                                                  iv_event_crud_type    => l_process_mode,
                                                                  id_event_crud_date    => SYSDATE,
                                                                  in_numeric_key_1      => NVL(l_event_id,
                                                                                               l_project_id), --error => event_id else project_id,
                                                                  in_numeric_key_2      => NULL,
                                                                  in_numeric_key_3      => NVL(l_event_id,
                                                                                               l_task_id), --error =>event_id else l_task_id,
                                                                  in_numeric_key_4      => l_event_id, --error =>event_id else NULL,
                                                                  in_numeric_key_5      => NULL,
                                                                  iv_attribute_category => l_task_object,
                                                                  iv_attribute1         => g_agr_tbl(i).g_prj_tbl(j)
                                                                                           .prj_main_rec.pa_project_number,
                                                                  iv_attribute2         => g_agr_tbl(i).g_prj_tbl(j).g_prj_task_rec.tasks_in_tbl(k)
                                                                                           .task_name,
                                                                  iv_attribute3         => g_agr_tbl(i).g_prj_tbl(j).g_prj_task_rec.tasks_in_tbl(k)
                                                                                           .pa_task_number,
                                                                  iv_attribute4         => NVL(l_attribute4,
                                                                                               l_task_status), --error=> 'ACK' else task_status
                                                                  iv_attribute5         => l_partner, ---ERROR=> Partner code else NULL , -- ,
                                                                  ix_xml_payload        => XMLTYPE(l_additional_task_data));
            END IF;
          EXCEPTION
            WHEN OTHERS THEN
              write_into_file('Exception occured while delta tracking for project: ' || g_agr_tbl(i).g_prj_tbl(j)
                              .prj_main_rec.pa_project_number ||
                              ' and Task: g_agr_tbl(i).g_prj_tbl(j).g_prj_task_rec.tasks_in_tbl(k).pa_task_number');
          END;

        END LOOP;
      END LOOP;
    END LOOP;
  EXCEPTION
    WHEN le_change_mode_not_enabled THEN
      write_into_file('Delta tracking will not happen as Partner is not enabled for delta tracking in change mode');
    WHEN OTHERS THEN
      write_into_file('Exception occured while delta tracking');
  END xxpa_delta_track_logging;

  /*
  ** Procedure Name  : f_read_xml
  **
  ** Purpose:  For Reading the XML. This Procedure call Parse, Validation and process transaction
  **           procedure for Agreement, Projects, Funding etc.
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 10-Oct-13            Vipul Gosai      Created new
  ** 29-Oct-21            Jyotsana Kandpal HPQC#32791: Added logic to get the valueof new key value parameter Negative PO Addendum for Rebalancing
  */
  PROCEDURE f_read_xml(p_guid           IN VARCHAR2,
                       p_xml            IN XMLTYPE,
                       x_return_status  OUT VARCHAR2,
                       x_return_message OUT VARCHAR2) AS
    handle_event_exception EXCEPTION;
    lv_return_status VARCHAR2(10);
    lv_error_message VARCHAR2(4000);
    l_conc_projects  VARCHAR2(4000) := NULL;
    l_conc_proj_name VARCHAR2(4000) := NULL;
    l_duplicate_flag VARCHAR2(1) := NULL;
    l_retcode        NUMBER   := 0 ;
  BEGIN
    gv_procedure_name := 'f_read_xml';
    gv_poo            := 'Start';
    write_into_file(gv_procedure_name || '.' || gv_poo);
    gv_poo := 'Deriving incoming parameter';
    -- Deriving incoming parameter
    BEGIN
      --
      SELECT EXTRACTVALUE(tmp_m.COLUMN_VALUE, '/SENDER/ID', g_namespace),
             EXTRACTVALUE(tmp_m.COLUMN_VALUE,
                          '/SENDER/REFERENCE',
                          g_namespace)
        INTO gv_source_system, gv_source_reference
        FROM TABLE(XMLSEQUENCE(XMLTYPE(xxint_event_api_pub.get_event_clob(p_guid, 'HTTP_RECEIVE_XML_PAYLOAD_IN'))
                               .EXTRACT('//G_XXPA2381_INT/SENDER',
                                        g_namespace))) tmp_m;
      write_into_file('Sender id -> ' || gv_source_system);
      write_into_file('Sender reference -> ' || gv_source_reference);
      write_into_file(gv_procedure_name || '.' || gv_poo);
    EXCEPTION
      WHEN NO_DATA_FOUND THEN
        x_return_message := 'Fatal Error in Deriving Sender Information' ||
                            SQLERRM;
        x_return_status  := gc_error;
        RETURN;
      WHEN OTHERS THEN
        x_return_message := 'Fatal Error in Deriving Sender Information' ||
                            SQLERRM;
        x_return_status  := gc_error;
        RETURN;
    END;
    IF gv_source_system IS NOT NULL THEN

    -- Start: Added for HPQC#32791: to get the value of new key value parameter for Rebalancing Negative PO addendum setting for the partner
    -- This variable will be used by procedures agreement_update and agreement_cr_upd to set a DFF value on agreement level
    gv_allow_neg_po_addendum := NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                                              p_key_type       => gc_key_type,
                                                                              p_key_type_value => gv_source_system,
                                                                              p_name           => gc_allow_neg_po_add_keyname),
                                   'N');
    -- End: Added for HPQC#32791
     --Added for CR25364
	    g_supress_zero_lines_exists := xxint_event_type_utils.valid_key_name(p_event_type     => gc_event_type,
                                                                                p_key_type       => gc_key_type,
                                                                                p_key_type_value => gv_source_system,
                                                                                p_key_name           => gc_supress_zero_line_keyname);

	--End of Added for CR25364
      FOR l_data IN (SELECT ROWNUM l_agr_cnt, COLUMN_VALUE
                       FROM TABLE(XMLSEQUENCE(p_xml.EXTRACT('/G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL'))) tmp) LOOP
        gv_poo := 'Before Parse Transaction Procedure';
        BEGIN
          parse_transaction(p_xml            => l_data.COLUMN_VALUE,
                            p_agr_rec        => g_agr_tbl(l_data.l_agr_cnt),
                            x_return_status  => x_return_status,
                            x_return_message => x_return_message);
          --Assign Record type to g_agr_rec
          g_agr_rec := g_agr_tbl(l_data.l_agr_cnt);
        EXCEPTION
          WHEN OTHERS THEN
            x_return_status  := gc_error;
            x_return_message := 'Exception in Parse Transaction. ' ||
                                SQLERRM;
            l_retcode := 1 ;
        END;
        --Added for RT6801346
        BEGIN
          SELECT SUBSTR(LISTAGG(extractvalue(tmp.column_value,
                                             '/PA_PROJECTS_ALL/PA_PROJECT_NUMBER'),
                                '|') WITHIN GROUP(ORDER BY 1),
                        1,
                        149) AS aa,
                 SUBSTR(LISTAGG(extractvalue(tmp.column_value,
                                             '/PA_PROJECTS_ALL/PROJECT_NAME'),
                                '|') WITHIN GROUP(ORDER BY 1),
                        1,
                        149) AS bb
            INTO l_conc_projects, l_conc_proj_name
            FROM TABLE(xmlsequence(xmltype(g_payload)
                                   .extract('//G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/G_PA_PROJECTS_ALL/PA_PROJECTS_ALL'))) tmp;
        END;
        gv_poo := 'Update XXINT Event DFF';
        BEGIN
          --Update XXINT Event DFF
          xxint_event_api_pub.update_event(p_guid       => g_guid,
                                           p_attribute1 => gv_source_system,
                                        --   p_attribute2 => gv_source_reference, -- CR24907 - Commented and added below
                                           p_attribute2 => g_org_id, -- Added for CR24907 (Change Attribute2 to store Org_Id)
                                           p_attribute3 => g_agr_rec.agr_main_rec.agreement_num,
                                           p_attribute4 => l_conc_projects,
                                           p_attribute6 => g_process_mode,
                                           p_attribute7 => l_conc_proj_name,
                                           p_attribute8 => gv_source_reference -- CR24907 - Shift Source Reference to Attribute8
                                          );
        EXCEPTION
          WHEN OTHERS THEN
            write_into_file('Error While Updating Attributes' || SQLERRM);
        END;
        /*
        IF NVL(x_return_status, 'XX') = gc_error THEN
        -- l_error_xml := record_error(l_error_xml,l_data.column_value, p_resp_mesg);
        CONTINUE;
        END IF;
        */
        -- Validation and Derivation Start
        IF NVL(x_return_status, 'XX') <> gc_error THEN
          --- if incoming xml is parsed then proceed for validation
          gv_poo := 'Validation and Derivation';
          BEGIN
            validate_transaction( --p_agr_rec           => g_agr_tbl(l_data.l_agr_cnt)
                                 x_return_status  => x_return_status,
                                 x_return_message => x_return_message);
            write_into_file('Test x_return_message :' || x_return_message||': x_return_status - '||x_return_status);
          EXCEPTION
            WHEN OTHERS THEN
              x_return_status  := gc_error;
              x_return_message := 'Exception in Validate Transaction. ' ||
                                  SQLERRM;
              l_retcode := 1 ;
          END;
          -- Check if Event is duplicate
          BEGIN
            BEGIN
              l_duplicate_flag := check_duplicate_events(P_AGREEMENT_NUM => g_agr_rec.agr_main_rec.agreement_num,
                                                         P_ATTRIBUTE4    => l_conc_projects);
              write_into_file('Duplicate Flag :' || l_duplicate_flag);
            EXCEPTION
              WHEN OTHERS THEN
                l_duplicate_flag := 'N';
            END;
            IF NVL(l_duplicate_flag, 'N') = 'Y' THEN
              --x_return_status  := gc_error;
              x_return_message := 'Duplicate Payload';
              RETURN;
            END IF;
          END; -- End of Added for RT6801346
          -- Processing of Agreement Creation
          write_into_file('Test x_return_message  : '||x_return_message||' - x_return_status :' || x_return_status||' : gc_error - '||gc_error);
          IF NVL(x_return_status, 'XX') <> gc_error THEN
            gv_poo := 'Validation and Derivation';
            BEGIN
              process_transaction(
                                  --p_agr_rec           => g_agr_tbl(l_data.l_agr_cnt)
                                  x_return_status  => x_return_status,
                                  x_return_message => x_return_message);

            EXCEPTION
              WHEN OTHERS THEN
                x_return_status  := gc_error;
                x_return_message := 'Exception in Process Transaction. ' ||
                                    SQLERRM;
                l_retcode := 1 ;
            END;
          END IF;
        END IF; --- end if for incoming xml is parsed
        write_into_file('x_return_message  : '||x_return_message||': x_return_status - '||x_return_status||': gc_error - '||gc_error);
        write_into_file('gc_event_type  : '||gc_event_type||': gc_key_type - '||gc_key_type||': gv_source_system - '||gv_source_system||': gv_xedit_enabled - '||gv_xedit_enabled );

        IF NVL(x_return_status,'XX') = gc_error AND
        NVL(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                   p_key_type       => gc_key_type,
                                                   p_key_type_value => gv_source_system,
                                                   p_name           => gv_xedit_enabled),
                                                     'N') = 'Y' THEN
        --                       l_error_xml := record_error(l_error_xml, l_data.column_value, p_resp_mesg);
        write_into_file('Raise Exception');
        RAISE handle_event_exception;
        --                       continue;
        END IF;
      END LOOP;
      gv_poo := 'After Processing All Records';
    ELSE
      x_return_status  := gc_error;
      x_return_message := 'Error in Deriving Source System. ' || SQLERRM;
      RETURN;
    END IF; --if for source system
    write_into_file('Before coming out for f_reax_xml ' || x_return_status ||
                    x_return_message);
  EXCEPTION
    WHEN handle_event_exception THEN

      x_return_status  := gc_error;
      x_return_message := 'Test Custom exception raised. ' || SQLERRM;

      write_into_file('IN handle_event_exception ');
      l_retcode := 1 ;

      report_errors(p_xml, p_guid, x_return_message, lv_return_status, lv_error_message);

      /*IF NVL(xx_get_key_value('XXAU4066_TRACKING_ENABLED'), 'N') = 'Y' THEN

      xxint_phase_ack(x_retcode => l_retcode,
                      x_retmesg => gc_error,
                      p_guid => p_guid);

      END IF ;
      write_error_doc(p_guid             => g_guid,
                      p_sender           => gv_source_system,
                      p_sender_reference => gv_source_reference,
                      o_return_status    => lv_return_status,
                      o_error_message    => lv_error_message);
      send_response(o_return_status => lv_return_status,
                    o_error_message => lv_error_message);*/

      IF lv_return_status <> fnd_api.g_ret_sts_success THEN
        write_into_file('Error writing XXINT_XEDIT_TXN_DOCS ' ||
                        lv_error_message);
      END IF;
    WHEN OTHERS THEN
      x_return_status  := gc_error;
      x_return_message := gv_procedure_name || '.' || gv_poo || '.' ||
                          SQLERRM;
      write_into_file(x_return_message);
      l_retcode := 1 ;

      report_errors(p_xml, p_guid, x_return_message, lv_return_status, lv_error_message);

  END f_read_xml;

  /******************************************************************************
  ** Procedure Name  : xxint_phase_ack
  ** Purpose         : Procedure to process ack service for
  **                   XXPA2589_COST_REV_IN event
  ** Procedure History:
  ** ---------     ---------------   --------------------------------------
  ** Date          Who                 Description
  ** ---------     ---------------   --------------------------------------
  ** 12-Dec-2021   Sourabh B            Initial Version.                        *
  ********************************************************************************/
  PROCEDURE xxint_phase_ack(x_retcode IN OUT NUMBER,
                            x_retmesg IN OUT VARCHAR2,
                            p_guid    IN VARCHAR2) IS

    lv_rec_xxint             xxint_events_current_phase_v%rowtype;
    lv_partner_track_enabled varchar2(1) := 'N';
    lv_proc                  VARCHAR2(30) := 'xxint_phase_ack';
    lv_status                xxau_int_event_track_tbl.status%TYPE;
    lv_status_message        xxint_events.last_process_msg%TYPE;
    ln_transaction_id        NUMBER;
    Lv_payload               xmltype;
    lv_orig_guid             xxint_events.guid%type;
    g_guid                   VARCHAR2(100) DEFAULT NULL;
  BEGIN
--    x_retcode := 0;
    write_into_file('xxint_phase_ack Started : ');
    g_guid := p_guid;

    lv_payload := xmltype(xxint_event_api_pub.get_event_clob(p_guid,'HTTP_RECEIVE_XML_PAYLOAD_IN'));

    --get the XXINT Event RECORD
    lv_rec_xxint := xxint_event_api_pub.get_event_record(p_guid);

    -- Check if the partner is enabled for tracking is not required as it will be checked
    -- within XXPA4068 code
SELECT DECODE(lv_rec_xxint.user_status_code,
                  'DUPLICATE',
                  'SUCCESS',
                  DECODE(lv_rec_xxint.attribute5,
                         'SUCCESS',
                         'SUCCESS',
                         'ERROR',
                         'FAILED',
                         'IN_PROGRESS')),
           DECODE(lv_rec_xxint.user_status_code,
                  'DUPLICATE',
                  lv_rec_xxint.user_status_message,
                  lv_rec_xxint.last_process_msg)
      INTO lv_status, lv_status_message
      FROM dual;

    -- Call the event tracking API to track the guid for acknowledgment
    -- In the tracking table project number will be stored as Attribute1 and task number will be stored as ATTRIBUTE2
xxau4066_event_track_api_pkg.p_insert_event_track_status(p_guid               => p_guid,
                                                         p_event_type         => gc_event_type,
                                                         p_partner            => lv_rec_xxint.attribute1,
                                                         p_attribute_category => gc_event_type,
                                                         p_attribute1         => lv_rec_xxint.attribute3, -- Agreement Number
                                                         p_attribute2         => lv_rec_xxint.attribute4, -- Project Number
                                                         p_attribute15        => lv_rec_xxint.attribute15,-- Parent GUID
                                                         p_status             => lv_status,
                                                         p_error_message      => lv_status_message,
                                                         ou_transaction_id    => ln_transaction_id);

    write_into_file('xxau4066_event_track_api_pkg.p_insert_event_track_status --> x_transaction_id : ' ||
              ln_transaction_id);

  EXCEPTION
    WHEN OTHERS THEN
      x_retcode := -1;
      x_retmesg := 'SQL Exception in xxint_phase_ack: ' || sqlerrm;
      write_into_file(x_retmesg);
  END xxint_phase_ack;

  /*
  ** Procedure Name  Name: main_proc
  **
  ** Purpose:  From XXINT Event Call this Procedure.
  **
  ** Procedure History:
  ** Date                 Who               Description
  ** ---------            ---------------   ----------------------------------------
  ** 10-Oct-13            Vipul Gosai      Created new
  ** 12-Dec-14            Vipul Gosai      HPQC:16051 Project addition to existing in error
  */
  PROCEDURE main_proc(p_retcode IN OUT NUMBER,
                      p_errbuff IN OUT VARCHAR2,
                      p_guid    IN VARCHAR2) IS
    x_return_status  VARCHAR2(100) := NULL;
    x_return_message VARCHAR2(20000) := NULL;
    l_conc_projects  VARCHAR2(4000) := NULL;
    l_conc_proj_name VARCHAR2(4000) := NULL;
    --------------------------------------------------------------------------
    -- Get the earlier events which are not processed for a particular Agreement
    --------------------------------------------------------------------------
    -- INC0420830 Removed Cursor CUR_EVENT_EXISTS, since it is no longer needed. Based on XXINT Event setup, events will no longer be stuck in ERROR status

  BEGIN
    gv_procedure_name := 'main_proc';
    gv_poo            := 'Start:Get Payload';
    -- Added as part of HPQC:16051 Project addition to existing in error on 10-Dec-2014
    -- Initialize all global variables and Flush Memory for Global Table and Record type
    g_agr_tbl.DELETE;
    g_tasks_in.DELETE;
    g_customers_in.DELETE;
    g_key_members.DELETE;
    g_class_categories_in.DELETE;
    g_funding_in.DELETE;
    g_funding_out.DELETE;
    g_budget_tbl.DELETE;
    --Record Type
    g_agr_rec           := NULL;
    g_agreement_in_rec  := NULL;
    g_agreement_out_rec := NULL;
    g_tasks_upd.DELETE; -- Added by Vinod for WRITE
    g_tasks_blank.DELETE; -- Added by Vinod for WRITE
    g_key_members_blank.DELETE; -- Added by Joydeb as per RT7070069
    g_key_members_in.DELETE; -- Added by Joydeb as per RT7070069
    g_project_in := NULL;

    --Start of Main Process
    g_guid    := p_guid;
    g_payload := xxint_event_api_pub.get_event_clob(g_guid,'HTTP_RECEIVE_XML_PAYLOAD_IN');
    write_into_file('*****************************************************************************');
    write_into_file(gv_procedure_name || '.' || gv_poo);
    write_into_file('*****************************************************************************');

    gv_poo := 'Before f_read_xml';
    BEGIN
      f_read_xml(p_guid           => g_guid,
                 p_xml            => XMLTYPE(g_payload),
                 x_return_status  => x_return_status,
                 x_return_message => x_return_message);
      gv_poo := 'After f_read_xml' || x_return_status || x_return_message;
    EXCEPTION
      WHEN OTHERS THEN
        gv_poo := gv_poo || '. When Others ' || SQLERRM;
    END;

    --Get Project Number and Project Name to update XXINT Event
    BEGIN
      ---Must be uncommented---
      SELECT SUBSTR(LISTAGG(extractvalue(tmp.column_value,
                                         '/PA_PROJECTS_ALL/PA_PROJECT_NUMBER'),
                            '|') WITHIN GROUP(ORDER BY 1),
                    1,
                    149) AS aa,
             SUBSTR(LISTAGG(extractvalue(tmp.column_value,
                                         '/PA_PROJECTS_ALL/PROJECT_NAME'),
                            '|') WITHIN GROUP(ORDER BY 1),
                    1,
                    149) AS bb
        INTO l_conc_projects, l_conc_proj_name
        FROM TABLE(xmlsequence(xmltype(g_payload)
                               .extract('//G_XXPA2381_INT/G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/G_PA_PROJECTS_ALL/PA_PROJECTS_ALL'))) tmp;
    END;

    gv_poo := 'Update XXINT Event DFF';
    BEGIN
      --Update XXINT Event DFF

      -- CR24907 - There is a need to store Org_Id in XXINT Events attributes to support XXINT Event Error Dashboard Apex screen functionality.
      -- ATTRIBUTE1-5 should supposed to be used in order to make the query more efficient, since ATTRIBUTE1-5 are indexed columns. However, these attributes are already consumed.
      -- But we could replace ATTRIBUTE2 (Source Reference) with Org_Id and shift the Source Reference value to ATTRIBUTE8, since Source Reference column is not being referenced outside of this interface

      xxint_event_api_pub.update_event(p_guid       => g_guid,
                                       p_attribute1 => gv_source_system,
                                    -- p_attribute2 => gv_source_reference,
                                       p_attribute2 => g_org_id, -- Added for CR24907 (Change Attribute2 to store Org_Id)
                                       p_attribute3 => g_agr_rec.agr_main_rec.agreement_num,
                                       p_attribute4 => l_conc_projects,
                                       p_attribute5 => g_agr_rec.agr_extra_rec.agr_status,
                                       p_attribute6 => g_process_mode,
                                       p_attribute7 => l_conc_proj_name,
                                       p_attribute8 => gv_source_reference -- CR24907 - Shift Source Reference to Attribute8
                                      );

      --  Delta tracking will happen in below procedure
      xxpa_delta_track_logging(g_guid); -- added by Ashwini on 5-apr-18

    EXCEPTION
      WHEN OTHERS THEN
        x_return_status  := gc_error;
        x_return_message := 'Error in Updating Event Attributes ' ||SQLERRM;
    END;
    --Update event Status/Attribute with final message
    SELECT DECODE(x_return_status, gc_error, 1, 0),
           DECODE(x_return_status,
                  gc_error,
                  SUBSTR(x_return_message, 1, 1000),
                  gc_warning, -- Added for RT7010726
                  SUBSTR(x_return_message, 1, 1000), -- Added for RT7010726
                  'Event phase successfully processed')
      INTO p_retcode, p_errbuff
      FROM DUAL;

      --Added for TRANESERVICECLOUD_AP
    if x_return_status = gc_error then
         xxint_event_api_pub.update_event(p_guid                => p_guid,
                                          p_user_status_code    => gc_error,
                                          p_user_status_message => substrb(p_errbuff,1,150));
    end if;
     --End of Added for TRANESERVICECLOUD_AP

    write_into_file('At Last Status:' || p_retcode || '**' || p_errbuff);
    ---------------------------------------------------------
    -- To force close prior events related to this order line -- INC0420830 Removed Cursor CUR_EVENT_EXISTS logic, since it is no longer needed. Based on XXINT Event setup, events will no longer be stuck in ERROR status
    ---------------------------------------------------------

  --  purge_old_events; -- INC0420830 - As per XXINT Setup, Events are no longer sit with ERROR status. It automatically moves to PHASE2 based on retry limit setup. Hence, purging mechanism is no longer needed.
    --  COMMIT;

    /* INC0420830 - WorkSight expects to receive SUCCESS in the Ack service as soon as the Project is created in R12. No need to wait for subsequent Phases to complete.
       Hence, Moved xxint_phase_ack from Phase5 to Phase1 to avoid timing issue in WorkSight.
       Commented out Error condition in the below IF to call xxint_phase_ack when the Tracking enabled is Y.
    */
    IF NVL(xx_get_key_value('XXAU4066_TRACKING_ENABLED'), 'N') = 'Y' -- AND x_return_status = gc_error
        THEN

      xxint_phase_ack(x_retcode => p_retcode,
                      x_retmesg => p_errbuff,
                      p_guid => p_guid);

    END IF ;

  EXCEPTION
    WHEN OTHERS THEN
      write_into_file('ERROR IN MAIN_PROC() ' || gv_poo || '.' || SQLERRM);
      IF NVL(xx_get_key_value('XXAU4066_TRACKING_ENABLED'), 'N') = 'Y' THEN

       xxint_phase_ack(x_retcode => p_retcode,
                       x_retmesg => p_errbuff,
                       p_guid => p_guid);

      END IF ;
      log_error_prc(p_entity_id     => NULL,
                    p_entity_name   => NULL,
                    p_sql_stmt      => gv_sql_stmt,
                    p_severity      => 'E',
                    p_error_code    => SQLCODE,
                    p_error_message => SQLERRM);
      p_retcode := -1;
      p_errbuff := gv_procedure_name || '.' || gv_poo || '.' || SQLERRM;
  END main_proc;
  --
  -- Add Additional Attributes
  --
  PROCEDURE addnl_dff_proc(p_retcode OUT NUMBER,
                           p_errbuf  OUT VARCHAR2,
                           p_guid    IN VARCHAR2) IS
    l_err_messg            VARCHAR2(4000);
    g_user_id              NUMBER := fnd_global.user_id;
    g_login_id             NUMBER := fnd_global.conc_login_id;
    l_lang                 VARCHAR2(40);
    l_project_attributes   VARCHAR2(1000) := NULL;
    l_project_dff_values   VARCHAR2(1000) := NULL;
    l_task_attributes      VARCHAR2(1000) := NULL;
    l_task_dff_values      VARCHAR2(1000) := NULL;
    l_project_attributes_v VARCHAR2(1000) := NULL;
    l_project_dff_values_v VARCHAR2(1000) := NULL;
    l_task_attributes_v    VARCHAR2(1000) := NULL;
    l_task_dff_values_v    VARCHAR2(1000) := NULL;
    l_project_dff_insert   STRING(32000);
    l_task_dff_insert      STRING(32000);
    l_project_dff_upd      STRING(32000);
    l_task_dff_upd         STRING(32000);
    l_project_number       VARCHAR2(1000) := NULL;
    l_project_name         VARCHAR2(1000) := NULL;
    --l_dff_project_id NUMBER;
    --l_dff_task_id    NUMBER;
    --l_project_id NUMBER;
    --l_task_id    NUMBER;

    l_dff_ou               hr_operating_units.name%TYPE;
    e_no_data              EXCEPTION;
    x_retcode              PLS_INTEGER := 0;
    x_message              VARCHAR2(100) := NULL;
    l_event_rec            xxint_events_current_phase_v%ROWTYPE;
    l_error_flag           VARCHAR2(1) := 'N';
    l_stmt_step            VARCHAR2(200) := 'addnl_dff_proc : 00';
    l_project_id           pa_projects_all.project_ID%TYPE;
    l_task_id              pa_tasks.task_id%TYPE;
    -- CR25098 - Commented for R12.2 Upgrade Compliance - START
	--TYPE l_project_dff_t IS TABLE OF xxau.xxau_additional_dff%ROWTYPE;
    --TYPE l_task_dff_t IS TABLE OF xxau.xxau_additional_dff%ROWTYPE;
    TYPE l_project_dff_t   IS TABLE OF xxau_additional_dff%ROWTYPE;
    TYPE l_task_dff_t      IS TABLE OF xxau_additional_dff%ROWTYPE;
    -- CR25098 - Commented for R12.2 Upgrade Compliance - END
    l_project_dff_tbl      l_project_dff_t := l_project_dff_t();
    l_task_dff_tbl         l_task_dff_t := l_task_dff_t();
    l_user_status_msg      xxint_events.user_status_message%TYPE;
    l_project_seq          NUMBER := 0;
    l_task_seq             NUMBER := 0;
    l_p_exist              NUMBER := 0;
    l_t_exist              NUMBER := 0;
    l_org_id               NUMBER;
    lv_process_mode         VARCHAR2(200); --Added for CR25364
    lv_count number;--Added for CR25364
    lv_phase01_status varchar2(200);--Added for CR25364
    CURSOR get_addn_dff_info IS
      SELECT xe.guid,
             xe.attribute1,
             xe.attribute2, -- Org_Id
             xe.attribute3,
             xe.attribute4,
             xe.attribute6,
             xe.attribute7,
             xe.attribute8, -- Moved Source Reference to Attribute8 as per CR24907
             xec.clob_content
        FROM xxint_events xe, xxint_event_clobs xec
       WHERE xe.guid = p_guid
         AND xec.guid = xe.guid
         AND xec.clob_code = 'HTTP_RECEIVE_XML_PAYLOAD_IN'
         AND xe.attribute4 IS NOT NULL;
  BEGIN

    write_into_file('***************** Beginning with Additional DFF Attributes *****************');
    write_into_file('Parameters Passed ');
    write_into_file('GUID :' || p_guid);
    l_event_rec      := xxint_event_api_pub.get_event_record(p_guid => p_guid);
    l_project_number := l_event_rec.attribute4;
    l_project_name   := l_event_rec.attribute7;
	lv_process_mode  := l_event_rec.attribute6;--Added for CR25364
    l_user_status_msg := l_event_rec.user_status_message;
    lv_phase01_status := l_event_rec.attribute5;--Added for CR25364
    if nvl(lv_phase01_status,'SUCCESS') = 'SUCCESS' THEN--Added if condition for CR25364 to avoid execution in case phase01 is not success
    l_project_dff_tbl.DELETE;
    l_task_dff_tbl.DELETE;
    write_into_file('project_number: ' || l_project_number);
    write_into_file('project_name: ' || l_project_name);
    --l_dff_header_id := to_number(l_event_rec.attribute12);
    --l_eventatt13    := l_event_rec.attribute13;
    --l_dff_org_id    := to_number(SUBSTR(l_eventatt13,
    --                                  1,
    --                                  instr(l_eventatt13, '~', 1) - 1));
    l_stmt_step := 'addnl_dff_proc : 10';
    -- Get Language
    --SELECT USERENV('LANG') INTO l_lang FROM DUAL;
    -- Assign value to DFF table type for Update Processing
    write_into_file('Start Assigning values to Header DFF Table Type Variable');

    l_project_seq := l_project_seq + 1;
    l_project_dff_tbl.EXTEND(1);
    l_project_dff_tbl(l_project_seq).object_type := 'Projects';
    l_project_dff_tbl(l_project_seq).CREATED_BY := fnd_global.user_id;
    l_project_dff_tbl(l_project_seq).CREATION_DATE := SYSDATE;
    l_project_dff_tbl(l_project_seq).LAST_UPDATED_BY := fnd_global.user_id;
    l_project_dff_tbl(l_project_seq).LAST_UPDATE_DATE := SYSDATE;
    l_project_dff_tbl(l_project_seq).LAST_UPDATE_LOGIN := fnd_global.conc_login_id;

    --  <<EVENT_LOOP>>
    FOR rec_event_addn_dff_info IN get_addn_dff_info LOOP
      BEGIN
        -- Reset for every header
        l_project_attributes_v := NULL;
        l_project_dff_values_v := NULL;
        l_stmt_step            := 'addnl_dff_proc : 20';
        --IF l_project_header_id IS NULL THEN
        --  RAISE e_no_data;
        --END IF;
        -- Additional Attributes At project Level
        write_into_file('Before Get Project ID');
        BEGIN
          SELECT project_id, org_id
            into l_project_id, l_org_id
            from PA_PROJECTS_ALL
           where name = l_project_name;
        EXCEPTION
          WHEN OTHERS THEN
            l_project_id := NULL;

        END;

        write_into_file('project_id :' || l_project_id);
        IF l_project_id is NOT NULL THEN
          <<PROJECT_DFF_LOOP>>
          FOR l_p_dff IN (SELECT extractvalue(column_value,
                                              '/ATTRIBUTE/attribute_name') AS dff_name,
                                 --replace(extractvalue(column_value,'/ATTRIBUTE/attribute_value'),chr(38),'''||chr(38)||''') dff_value
                                 replace(replace(extractvalue(column_value,
                                                              '/ATTRIBUTE/attribute_value'),
                                                 '''',
                                                 ''''''),
                                         chr(38),
                                         '''||chr(38)||''') dff_value
                            FROM TABLE(XMLSEQUENCE(xmltype(rec_event_addn_dff_info.clob_content)
                                                   .EXTRACT('//G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/G_PA_PROJECTS_ALL/PA_PROJECTS_ALL/g_additional_attrs/XX_ADDITIONAL_ATTRIBUTES/ATTRIBUTE'))) fileset

                          -- SELECT
                          --   EXTRACT(fileset.COLUMN_VALUE, '//attribute_name')  AS dff_name
                          -- , EXTRACT(fileset.COLUMN_VALUE, '//attribute_value') AS dff_value
                          --   FROM
                          --   TABLE(XMLSEQUENCE(xmltype(rec_event_addn_dff_info.clob_content) .EXTRACT('//OH/g_additional_attrs/XX_ADDITIONAL_ATTRIBUTES'))) fileset
                          ) LOOP
            l_stmt_step := 'addnl_dff_proc : 30';
            write_into_file('Insode Project DFF');

            SELECT REPLACE(REPLACE(REPLACE(UPPER(l_p_dff.dff_name),
                                           '</ATTRIBUTE_NAME><ATTRIBUTE_NAME>',
                                           ','),
                                   '<ATTRIBUTE_NAME>',
                                   ''),
                           '</ATTRIBUTE_NAME>',
                           '')
              INTO l_project_attributes
              FROM DUAL;

            IF (l_project_attributes_v IS NULL) THEN
              l_stmt_step            := 'addnl_dff_proc : 40';
              l_project_attributes_v := l_project_attributes;
            ELSE
              l_stmt_step            := 'addnl_dff_proc : 50';
              l_project_attributes_v := l_project_attributes_v || ', ' ||
                                        l_project_attributes;

            END IF;
            write_into_file('Project Attribute Columns: ' ||
                            l_project_attributes_v);
            l_stmt_step := 'addnl_dff_proc : 60';
            SELECT regexp_replace(regexp_replace(regexp_replace(l_p_dff.dff_value,
                                                                '</ATTRIBUTE_VALUE><ATTRIBUTE_VALUE>',
                                                                ''',''',
                                                                1,
                                                                0,
                                                                'i'),
                                                 '<ATTRIBUTE_VALUE>',
                                                 '',
                                                 1,
                                                 0,
                                                 'i'),
                                  '</ATTRIBUTE_VALUE>',
                                  '',
                                  1,
                                  0,
                                  'i')
              INTO l_project_dff_values
              FROM DUAL;

            IF (l_project_dff_values_v IS NULL) THEN
              l_stmt_step            := 'addnl_dff_proc : 70';
              l_project_dff_values_v := '''' || l_project_dff_values || '''';

            ELSE
              l_stmt_step            := 'addnl_dff_proc : 80';
              l_project_dff_values_v := l_project_dff_values_v || ', ''' ||
                                        l_project_dff_values || '''';

            END IF;
            write_into_file('project Attribute Values: ' ||
                            l_project_dff_values_v);

            l_stmt_step := 'addnl_dff_proc : 85';

            IF (l_project_attributes = 'ATTRIBUTE1') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE1 := l_project_dff_values;
            END IF;
            write_into_file('project Attribute1: ' || l_project_dff_tbl(l_project_seq)
                            .ATTRIBUTE1);

            IF (l_project_attributes = 'ATTRIBUTE2') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE2 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE3') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE3 := l_project_dff_values;

            END IF;
            IF (l_project_attributes = 'ATTRIBUTE4') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE4 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE5') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE5 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE6') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE6 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE7') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE7 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE8') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE8 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE9') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE9 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE10') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE10 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE11') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE11 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE12') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE12 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE13') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE13 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE14') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE14 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE15') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE15 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE16') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE16 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE17') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE17 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE18') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE18 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE19') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE19 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE20') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE20 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE21') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE21 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE22') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE22 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE23') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE23 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE24') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE24 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE25') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE25 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE26') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE26 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE27') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE27 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE28') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE28 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE29') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE29 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE30') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE30 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE31') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE31 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE32') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE32 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE33') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE33 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE34') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE34 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE35') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE35 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE36') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE36 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE37') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE37 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE38') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE38 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE39') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE39 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE40') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE40 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE41') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE41 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE42') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE42 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE43') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE43 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE44') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE44 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE45') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE45 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE46') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE46 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE47') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE47 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE48') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE48 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE49') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE49 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE50') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE50 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE51') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE51 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE52') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE52 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE53') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE53 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE54') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE54 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE55') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE55 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE56') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE56 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE57') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE57 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE58') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE58 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE59') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE59 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE60') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE60 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE61') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE61 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE62') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE62 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE63') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE63 := l_project_dff_values;

            END IF;
            IF (l_project_attributes = 'ATTRIBUTE64') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE64 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE65') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE65 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE66') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE66 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE67') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE67 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE68') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE68 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE69') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE69 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE70') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE70 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE71') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE71 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE72') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE72 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE73') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE73 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE74') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE74 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE75') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE75 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE76') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE76 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE77') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE77 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE78') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE78 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE79') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE79 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE80') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE80 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE81') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE81 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE82') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE82 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE83') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE83 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE84') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE84 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE85') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE85 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE86') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE86 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE87') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE87 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE88') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE88 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE89') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE89 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE90') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE90 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE91') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE91 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE92') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE92 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE93') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE93 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE94') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE94 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE95') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE95 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE96') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE96 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE97') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE97 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE98') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE98 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE99') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE99 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'ATTRIBUTE100') THEN
              l_project_dff_tbl(l_project_seq).ATTRIBUTE100 := l_project_dff_values;
            END IF;

            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE1') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE1 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE2') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE2 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE3') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE3 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE4') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE4 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE5') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE5 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE6') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE6 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE7') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE7 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE8') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE8 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE9') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE9 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE10') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE10 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE11') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE11 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE12') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE12 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE13') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE13 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE14') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE14 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE15') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE15 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE16') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE16 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE17') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE17 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE18') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE18 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE19') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE19 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE20') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE20 := l_project_dff_values;
            END IF;

            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE21') THEN
              l_project_dff_tbl(l_project_seq).global_attribute21 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE22') THEN
              l_project_dff_tbl(l_project_seq).global_attribute22 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE23') THEN
              l_project_dff_tbl(l_project_seq).global_attribute23 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE24') THEN
              l_project_dff_tbl(l_project_seq).global_attribute24 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE25') THEN
              l_project_dff_tbl(l_project_seq).global_attribute25 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE26') THEN
              l_project_dff_tbl(l_project_seq).global_attribute26 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE27') THEN
              l_project_dff_tbl(l_project_seq).global_attribute27 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE28') THEN
              l_project_dff_tbl(l_project_seq).global_attribute28 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE29') THEN
              l_project_dff_tbl(l_project_seq).global_attribute29 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE30') THEN
              l_project_dff_tbl(l_project_seq).global_attribute30 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE31') THEN
              l_project_dff_tbl(l_project_seq).global_attribute31 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE32') THEN
              l_project_dff_tbl(l_project_seq).global_attribute32 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE33') THEN
              l_project_dff_tbl(l_project_seq).global_attribute33 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE34') THEN
              l_project_dff_tbl(l_project_seq).global_attribute34 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE35') THEN
              l_project_dff_tbl(l_project_seq).global_attribute35 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE36') THEN
              l_project_dff_tbl(l_project_seq).global_attribute36 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE37') THEN
              l_project_dff_tbl(l_project_seq).global_attribute37 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE38') THEN
              l_project_dff_tbl(l_project_seq).global_attribute38 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE39') THEN
              l_project_dff_tbl(l_project_seq).global_attribute39 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE40') THEN
              l_project_dff_tbl(l_project_seq).global_attribute40 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE41') THEN
              l_project_dff_tbl(l_project_seq).global_attribute41 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE42') THEN
              l_project_dff_tbl(l_project_seq).global_attribute42 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE43') THEN
              l_project_dff_tbl(l_project_seq).global_attribute43 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE44') THEN
              l_project_dff_tbl(l_project_seq).global_attribute44 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE45') THEN
              l_project_dff_tbl(l_project_seq).global_attribute45 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE46') THEN
              l_project_dff_tbl(l_project_seq).global_attribute46 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE47') THEN
              l_project_dff_tbl(l_project_seq).global_attribute47 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE48') THEN
              l_project_dff_tbl(l_project_seq).global_attribute48 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE49') THEN
              l_project_dff_tbl(l_project_seq).global_attribute49 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE50') THEN
              l_project_dff_tbl(l_project_seq).global_attribute50 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE51') THEN
              l_project_dff_tbl(l_project_seq).global_attribute51 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE52') THEN
              l_project_dff_tbl(l_project_seq).global_attribute52 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE53') THEN
              l_project_dff_tbl(l_project_seq).global_attribute53 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE54') THEN
              l_project_dff_tbl(l_project_seq).global_attribute54 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE55') THEN
              l_project_dff_tbl(l_project_seq).global_attribute55 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE56') THEN
              l_project_dff_tbl(l_project_seq).global_attribute56 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE57') THEN
              l_project_dff_tbl(l_project_seq).global_attribute57 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE58') THEN
              l_project_dff_tbl(l_project_seq).global_attribute58 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE59') THEN
              l_project_dff_tbl(l_project_seq).global_attribute59 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE60') THEN
              l_project_dff_tbl(l_project_seq).global_attribute60 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE61') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE61 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE62') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE62 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE63') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE63 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE64') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE64 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE65') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE65 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE66') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE66 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE67') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE67 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE68') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE68 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE69') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE69 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE70') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE70 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE71') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE71 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE72') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE72 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE73') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE73 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE74') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE74 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE75') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE75 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE76') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE76 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE77') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE77 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE78') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE78 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE79') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE79 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE80') THEN
              l_project_dff_tbl(l_project_seq).GLOBAL_ATTRIBUTE80 := l_project_dff_values;
            END IF;

            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE81') THEN
              l_project_dff_tbl(l_project_seq).global_attribute81 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE82') THEN
              l_project_dff_tbl(l_project_seq).global_attribute82 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE83') THEN
              l_project_dff_tbl(l_project_seq).global_attribute83 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE84') THEN
              l_project_dff_tbl(l_project_seq).global_attribute84 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE85') THEN
              l_project_dff_tbl(l_project_seq).global_attribute85 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE86') THEN
              l_project_dff_tbl(l_project_seq).global_attribute86 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE87') THEN
              l_project_dff_tbl(l_project_seq).global_attribute87 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE88') THEN
              l_project_dff_tbl(l_project_seq).global_attribute88 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE89') THEN
              l_project_dff_tbl(l_project_seq).global_attribute89 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE90') THEN
              l_project_dff_tbl(l_project_seq).global_attribute90 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE91') THEN
              l_project_dff_tbl(l_project_seq).global_attribute91 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE92') THEN
              l_project_dff_tbl(l_project_seq).global_attribute92 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE93') THEN
              l_project_dff_tbl(l_project_seq).global_attribute93 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE94') THEN
              l_project_dff_tbl(l_project_seq).global_attribute94 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE95') THEN
              l_project_dff_tbl(l_project_seq).global_attribute95 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE96') THEN
              l_project_dff_tbl(l_project_seq).global_attribute96 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE97') THEN
              l_project_dff_tbl(l_project_seq).global_attribute97 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE98') THEN
              l_project_dff_tbl(l_project_seq).global_attribute98 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE99') THEN
              l_project_dff_tbl(l_project_seq).global_attribute99 := l_project_dff_values;
            END IF;
            IF (l_project_attributes = 'GLOBAL_ATTRIBUTE100') THEN
              l_project_dff_tbl(l_project_seq).global_attribute100 := l_project_dff_values;
            END IF;
          END LOOP project_dff_loop;
          --END;
          --END LOOP;
          write_into_file('Project Attributes:' || l_project_attributes_v);
          IF (l_project_attributes_v IS NOT NULL) THEN
            l_stmt_step := 'addnl_dff_proc : 90';

            -- write_into_file('Check if the Header Additional Attributes already exist for project_id:' ||
            --                                  l_dff_project_id);
            SELECT COUNT(1)
              INTO l_p_exist
              FROM xxau_additional_dff
             WHERE object_type = 'Projects'
               AND key1 = l_project_id;

            write_into_file('l_p_exist :' || l_p_exist);

            IF (l_p_exist > 0) THEN

              BEGIN
                l_stmt_step := 'addnl_dff_proc : 95';
                --l_project_dff_upd :=

                SELECT 'UPDATE XXAU_ADDITIONAL_DFF xld
                              SET last_update_date = SYSDATE' ||
                       ',CONTEXT = ' || l_org_id || ',last_updated_by = ' ||
                       fnd_global.user_id ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE1,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE1 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE1,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE1 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE2,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE2 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE2,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE2 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE3,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE3 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE3,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE3 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE4,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE4 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE4,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE4 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE5,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE5 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE5,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE5 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE6,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE6 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE6,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE6 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE7,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE7 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE7,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE7 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE8,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE8 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE8,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE8 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE9,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE9 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE9,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE9 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE10,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE10 = ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE10,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE10 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE11,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE11 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE11,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE11 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE12,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE12 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE12,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE12 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE13,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE13 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE13,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE13 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE14,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE14 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE14,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE14 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE15,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE15 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE15,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE15 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE16,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE16 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE16,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE16 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE17,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE17 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE17,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE17 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE18,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE18 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE18,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE18 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE19,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE19 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE19,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE19 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE20,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE20 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE20,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE20 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE21,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE21 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE21,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE21 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE22,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE22 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE22,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE22 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE23,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE23 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE23,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE23 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE24,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE24 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE24,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE24 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE25,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE25 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE25,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE25 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE26,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE26 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE26,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE26 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE27,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE27 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE27,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE27 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE28,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE28 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE28,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE28 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE29,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE29 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE29,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE29 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE30,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE30 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE30,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE30 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE31,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE31 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE31,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE31 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE32,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE32 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE32,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE32 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE33,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE33 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE33,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE33 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE34,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE34 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE34,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE34 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE35,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE35 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE35,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE35 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE36,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE36 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE36,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE36 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE37,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE37 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE37,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE37 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE38,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE38 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE38,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE38 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE39,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE39 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE39,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE39 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE40,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE40 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE40,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE40 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE41,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE41 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE41,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE41 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE42,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE42 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE42,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE42 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE43,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE43 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE43,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE43 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE44,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE44 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE44,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE44 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE45,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE45 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE45,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE45 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE46,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE46 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE46,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE46 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE47,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE47 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE47,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE47 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE48,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE48 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE48,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE48 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE49,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE49 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE49,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE49 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE50,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE50 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE50,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE50 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE51,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE51 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE51,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE51 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE52,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE52 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE52,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE52 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE53,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE53 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE53,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE53 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE54,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE54 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE54,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE54 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE55,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE55 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE55,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE55 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE56,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE56 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE56,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE56 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE57,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE57 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE57,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE57 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE58,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE58 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE58,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE58 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE59,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE59 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE59,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE59 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE60,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE60 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE60,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE60 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE61,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE61 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE61,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE61 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE62,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE62 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE62,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE62 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE63,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE63 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE63,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE63 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE64,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE64 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE64,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE64 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE65,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE65 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE65,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE65 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE66,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE66 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE66,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE66 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE67,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE67 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE67,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE67 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE68,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE68 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE68,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE68 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE69,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE69 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE69,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE69 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE70,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE70 = ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE70,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE70 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE71,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE71 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE71,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE71 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE72,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE72 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE72,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE72 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE73,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE73 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE73,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE73 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE74,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE74 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE74,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE74 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE75,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE75 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE75,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE75 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE76,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE76 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE76,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE76 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE77,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE77 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE77,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE77 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE78,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE78 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE78,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE78 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE79,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE79 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE79,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE79 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE80,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE80 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE80,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE80 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE81,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE81 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE81,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE81 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE82,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE82 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE82,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE82 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE83,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE83 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE83,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE83 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE84,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE84 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE84,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE84 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE85,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE85 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE85,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE85 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE86,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE86 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE86,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE86 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE87,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE87 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE87,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE87 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE88,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE88 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE88,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE88 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE89,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE89 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE89,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE89 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE90,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE90 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE90,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE90 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE91,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE91 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE91,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE91 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE92,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE92 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE92,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE92 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE93,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE93 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE93,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE93 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE94,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE94 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE94,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE94 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE95,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE95 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE95,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE95 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE96,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE96 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE96,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE96 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE97,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE97 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE97,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE97 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE98,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE98 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE98,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE98 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE99,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE99 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE99,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE99 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq).ATTRIBUTE100,
                              NULL,
                              NULL,
                              ',xld.ATTRIBUTE100 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE100,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .ATTRIBUTE100 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE1,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE1 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE1,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE1 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE2,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE2 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE2,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE2 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE3,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE3 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE3,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE3 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE4,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE4 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE4,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE4 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE5,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE5 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE5,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE5 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE6,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE6 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE6,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE6 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE7,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE7 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE7,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE7 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE8,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE8 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE8,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE8 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE9,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE9 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE9,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE9 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE10,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE10 = ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE10,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE10 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE11,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE11 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE11,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE11 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE12,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE12 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE12,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE12 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE13,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE13 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE13,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE12 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE14,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE14 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE14,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE14 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE15,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE15 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE15,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE15 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE16,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE16 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE16,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE16 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE17,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE17 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE17,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE17 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE18,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE18 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE18,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE18 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE19,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE19 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE19,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE19 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE20,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE20 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE20,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE20 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE21,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE21 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE21,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE21 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE22,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE22 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE22,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE22 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE23,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE23 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE23,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE23 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE24,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE24 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE24,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE24 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE25,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE25 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE25,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE25 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE26,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE26 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE26,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE26 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE27,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE27 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE27,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE27 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE28,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE28 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE28,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE28 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE29,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE29 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE29,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE29 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE30,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE30 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE30,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE30 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE31,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE31 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE31,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE31 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE32,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE32 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE32,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE32 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE33,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE33 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE33,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE33 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE34,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE34 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE34,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE34 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE35,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE35 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE35,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE35 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE36,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE36 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE36,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE36 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE37,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE37 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE37,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE37 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE38,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE38 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE38,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE38 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE39,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE39 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE39,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE39 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE40,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE40 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE40,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE40 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE41,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE41 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE41,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE41 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE42,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE42 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE42,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE42 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE43,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE43 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE43,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE43 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE44,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE44 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE44,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE44 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE45,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE45 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE45,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE45 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE46,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE46 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE46,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE46 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE47,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE47 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE47,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE47 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE48,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE48 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE48,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE48 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE49,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE49 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE49,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE49 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE50,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE50 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE50,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE50 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE51,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE51 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE51,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE51 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE52,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE52 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE52,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE52 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE53,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE53 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE53,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE53 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE54,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE54 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE54,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE54 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE55,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE55 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE55,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE55 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE56,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE56 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE56,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE56 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE57,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE57 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE57,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE57 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE58,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE58 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE58,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE58 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE59,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE59 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE59,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE59 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE60,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE60 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE60,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE60 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE61,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE61 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE61,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE61 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE62,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE62 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE62,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE62 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE63,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE63 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE63,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE63 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE64,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE64 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE64,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE64 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE65,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE65 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE65,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE65 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE66,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE66 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE66,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE66 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE67,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE67 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE67,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE67 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE68,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE68 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE68,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE68 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE69,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE69 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE69,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE69 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE70,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE70 = ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE70,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE70 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE71,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE71 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE71,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE71 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE72,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE72 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE72,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE72 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE73,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE73 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE73,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE73 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE74,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE74 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE74,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE74 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE75,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE75 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE75,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE75 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE76,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE76 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE76,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE76 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE77,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE77 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE77,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE77 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE78,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE78 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE78,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE78 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE79,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE79 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE79,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE79 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE80,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE80 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE80,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE80 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE81,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE81 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE81,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE81 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE82,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE82 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE82,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE82 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE83,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE83 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE83,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE83 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE84,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE84 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE84,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE84 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE85,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE85 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE85,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE85 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE86,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE86 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE86,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE86 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE87,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE87 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE87,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE87 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE88,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE88 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE88,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE88 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE89,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE89 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE89,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE89 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE90,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE90 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE90,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE90 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE91,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE91 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE91,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE91 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE92,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE92 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE92,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE92 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE93,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE93 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE93,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE93 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE94,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE94 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE94,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE94 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE95,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE95 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE95,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE95 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE96,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE96 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE96,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE96 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE97,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE97 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE97,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE97 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE98,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE98 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE98,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE98 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE99,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE99 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE99,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE99 || '''',
                                   'NULL')) ||
                       DECODE(l_project_dff_tbl(l_project_seq)
                              .GLOBAL_ATTRIBUTE100,
                              NULL,
                              NULL,
                              ',xld.GLOBAL_ATTRIBUTE100 =  ' ||
                              NVL2(l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE100,
                                   '''' || l_project_dff_tbl(l_project_seq)
                                   .GLOBAL_ATTRIBUTE100 || '''',
                                   'NULL')) || ' WHERE object_type = ' ||
                       '''Projects''' || ' AND key1 = ' || L_PROJECT_ID
                  INTO l_project_dff_upd
                  FROM DUAL;
                BEGIN
                  l_stmt_step := 'addnl_dff_proc : 96';
                  write_into_file('project Upd SQL: ' || l_project_dff_upd);
                  EXECUTE IMMEDIATE l_project_dff_upd;
                  write_into_file('DFF Successfully updated for project_id ' ||
                                  l_project_id);
                  COMMIT;
                EXCEPTION
                  WHEN OTHERS THEN
                    l_error_flag := 'Y';
                    write_into_file('Error while Updating project dff ' ||
                                    SQLERRM);
                END;

                --COMMIT;

              EXCEPTION
                WHEN OTHERS THEN
                  write_into_file('Error while updating additional project dff ' ||
                                  SQLERRM);
              END;
            ELSE
              --project exists in XDFF
              l_project_dff_insert := 'INSERT INTO XXAU_ADDITIONAL_DFF (KEY1, object_type, ' ||
                                      l_project_attributes_v ||
                                      ', CONTEXT, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE, LAST_UPDATE_LOGIN,PARENT_TABLE,PARENT_ID ) VALUES ( ' ||
                                      l_project_id || ', ' ||
                                      '''Projects''' || ', ' ||
                                      l_project_dff_values_v || ', ' ||
                                      l_org_id || ', ' || g_user_id ||
                                      ', SYSDATE, ' || g_user_id ||
                                      ', SYSDATE, ' || g_login_id || ', ' ||
                                      '''PA_PROJECTS_ALL'''|| ', '||L_PROJECT_ID||
                                      ')';
              write_into_file('Header Insert SQL: ' ||
                              l_project_dff_insert);
              BEGIN
                l_stmt_step := 'addnl_dff_proc : 100';
                EXECUTE IMMEDIATE l_project_dff_insert;
                COMMIT;
              EXCEPTION
                WHEN OTHERS THEN
                  l_error_flag := 'Y';
                  write_into_file('Error while inserting addition project dff ' ||
                                  SQLERRM);
              END;
            END IF; --IF( l_p_exist > 0)
          END IF; -- project attributes exists
		  --Start of Added for CR25364
		  --Added to get Project Approval date in XDFF
          --
          BEGIN
            select count(1)
            into lv_count
            from pa_projects_all ppa
            where ppa.project_id  = l_project_id
            and ppa.project_status_code = 'APPROVED';

          if lv_process_mode = 'CREATE' and lv_count > 0 then

            select count(1)
            into lv_count
            from xxau_additional_dff
            where object_type = 'Projects'
            and key1 = l_project_id;

            if lv_count = 0 then
                insert into xxau_additional_dff
                (object_type,
                 key1,
                 attribute11,
                 creation_date,
                 created_by,
                 last_update_date,
                 last_updated_by
                 )
                 values
                 ('Projects',
                 l_project_id,
                 to_char(sysdate,'DD-MON-YYYY HH24:MI:SS'),
                 sysdate,
                 fnd_global.user_id,
                 sysdate,
                 fnd_global.user_id);

            else
                update xxau_additional_dff
                  set attribute11 = to_char(sysdate,'DD-MON-YYYY HH24:MI:SS')
                where object_type= 'Projects'
                and key1 = l_project_id
                and attribute11 is null;
            end if;
            end if;
          END;
		  --End of Added for CR25364
        END IF; --project_id is null
        --END LOOP;
        -- Additional DFFs at Line Level
        l_stmt_step := 'addnl_dff_proc : 110';

        FOR proj_rec IN (SELECT EXTRACT(hdrset.COLUMN_VALUE, '//G_TASKS') AS g_task,
                                EXTRACT(hdrset.COLUMN_VALUE,
                                        '//PM_PROJECT_REFERENCE') AS g_progect_ref,
                                EXTRACT(hdrset.COLUMN_VALUE,
                                        '//PA_PROJECT_NUMBER') AS g_project_number,
                                EXTRACT(hdrset.COLUMN_VALUE,
                                        '//PROJECT_NAME') AS g_project_name
                           FROM TABLE(XMLSEQUENCE(xmltype(rec_event_addn_dff_info.clob_content)
                                                  .EXTRACT('//G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/G_PA_PROJECTS_ALL/PA_PROJECTS_ALL'))) hdrset) LOOP
          l_stmt_step := 'addnl_dff_proc : 120';

          write_into_file('TASK DFF Start..');

          BEGIN
            SELECT project_id
              into l_project_id
              from PA_PROJECTS_ALL
             where name = l_project_name;
          EXCEPTION
            WHEN OTHERS THEN
              l_project_id := NULL;
          END;
          write_into_file('TASK DFF - l_project_id:' || l_project_id);

          IF l_project_id IS NOT NULL THEN
            -- Retrieve Tasks 1 by 1
            FOR task_rec IN (SELECT EXTRACT(lineset.COLUMN_VALUE,
                                            '/TASKS/g_additional_attrs/XX_ADDITIONAL_ATTRIBUTES') AS g_t_dff,
                                    EXTRACTVALUE(lineset.COLUMN_VALUE,
                                                 '/TASKS/PM_TASK_REFERENCE') AS g_task_reference,
                                    EXTRACTVALUE(lineset.COLUMN_VALUE,
                                                 '/TASKS/PA_TASK_NUMBER',
                                                 g_namespace) AS g_task_number,
                                    EXTRACTVALUE(lineset.COLUMN_VALUE,
                                                 '/TASKS/TASK_NAME') AS g_task_name
                               FROM TABLE(XMLSEQUENCE(proj_rec.g_task.EXTRACT('//TASKS'))) lineset) LOOP
              --l_line_dff_tbl.DELETE;
              --l_line_seq := 0;
              l_t_exist := 0;
              write_into_file('l_task_seq ' || l_task_seq);
              IF (l_task_seq = 0) THEN
                l_task_seq := l_task_seq + 1;
              ELSE
                write_into_file('l_task_seq ' || l_task_seq);
              END IF;
              l_task_dff_tbl.EXTEND(1);
              write_into_file('task_rec.g_task_name :' ||
                              task_rec.g_task_name);
              write_into_file('task_rec.g_task_name :' ||
                              task_rec.g_task_reference);
              write_into_file('task_rec.g_task_name :' ||
                              task_rec.g_task_number);

              l_task_dff_tbl(l_task_seq).object_type := 'Tasks';
              l_task_dff_tbl(l_task_seq).key1 := l_project_id;
              l_task_dff_tbl(l_task_seq).key2 := l_task_id;
              l_task_dff_tbl(l_task_seq).CREATED_BY := fnd_global.user_id;
              l_task_dff_tbl(l_task_seq).CREATION_DATE := SYSDATE;
              l_task_dff_tbl(l_task_seq).LAST_UPDATED_BY := fnd_global.user_id;
              l_task_dff_tbl(l_task_seq).LAST_UPDATE_DATE := SYSDATE;
              l_task_dff_tbl(l_task_seq).LAST_UPDATE_LOGIN := fnd_global.conc_login_id;

              l_stmt_step := 'addnl_dff_proc : 130';
              write_into_file('task DFF - step:' || l_stmt_step);
              -- Reset for every task
              l_task_attributes_v := NULL;
              l_task_dff_values_v := NULL;
              <<task_DFF_LOOP>>
              FOR l_t_dff IN (

                              SELECT task_dff.att_name  as dff_name,
                                      task_dff.att_value as dff_value
                                FROM (SELECT extractvalue(column_value,
                                                           '/ATTRIBUTE/attribute_name') AS att_name,
                                              --replace(extractvalue(column_value, '/ATTRIBUTE/attribute_value'),chr(38),'''||chr(38)||''') att_value
                                              replace(replace(extractvalue(column_value,
                                                                           '/ATTRIBUTE/attribute_value'),
                                                              '''',
                                                              ''''''),
                                                      chr(38),
                                                      '''||chr(38)||''') att_value
                                         FROM TABLE(XMLSEQUENCE(task_rec.g_t_dff.EXTRACT('//ATTRIBUTE')))) task_dff

                              --SELECT
                              --  EXTRACT(task_dff.COLUMN_VALUE, '//attribute_name')  AS dff_name
                              --, EXTRACT(task_dff.COLUMN_VALUE, '//attribute_value') AS dff_value
                              --  FROM
                              --  TABLE(XMLSEQUENCE(ol_rec.g_l_dff.EXTRACT('//ATTRIBUTE'))) task_dff
                              ) LOOP
                l_stmt_step := 'addnl_dff_proc : 140';
                write_into_file('Task DFF - step:' || l_stmt_step);
                IF (l_t_dff.dff_name IS NOT NULL) THEN
                  SELECT REPLACE(REPLACE(REPLACE(UPPER(l_t_dff.dff_name),
                                                 '</ATTRIBUTE_NAME><ATTRIBUTE_NAME>',
                                                 ','),
                                         '<ATTRIBUTE_NAME>',
                                         ''),
                                 '</ATTRIBUTE_NAME>',
                                 '')
                    INTO l_task_attributes
                    FROM DUAL;
                  l_stmt_step := 'addnl_dff_proc : 150';
                  IF NVL(l_task_attributes, 'NA') NOT IN
                     ('PARTNER_task_TAG_LINK',
                      'task_TAG',
                      'SERIAL_NUMBER_SOURCE',
                      'SERIAL_NUMBER',
                      'SERIAL_MANDATORY',
                      'HOLDNAME',
                      'OPERATION_CODE') THEN
                    IF (l_task_attributes_v IS NULL) THEN
                      l_task_attributes_v := l_task_attributes;
                    ELSE
                      l_task_attributes_v := l_task_attributes_v || ', ' ||
                                             l_task_attributes;
                    END IF;
                    write_into_file('Task DFF Columns :' ||
                                    l_task_attributes_v);
                    l_stmt_step := 'addnl_dff_proc : 160';
                    write_into_file('Task DFF - step:' || l_stmt_step);
                    SELECT regexp_replace(regexp_replace(regexp_replace(l_t_dff.dff_value,
                                                                        '</ATTRIBUTE_VALUE><ATTRIBUTE_VALUE>',
                                                                        ''',''',
                                                                        1,
                                                                        0,
                                                                        'i'),
                                                         '<ATTRIBUTE_VALUE>',
                                                         '',
                                                         1,
                                                         0,
                                                         'i'),
                                          '</ATTRIBUTE_VALUE>',
                                          '',
                                          1,
                                          0,
                                          'i')
                      INTO l_task_dff_values
                      FROM DUAL;
                    l_stmt_step := 'addnl_dff_proc : 170';
                    IF (l_task_dff_values_v IS NULL) THEN
                      l_task_dff_values_v := '''' || l_task_dff_values || '''';
                    ELSE
                      l_task_dff_values_v := l_task_dff_values_v || ', ''' ||
                                             l_task_dff_values || '''';
                    END IF;
                    write_into_file(RPAD('Task DFF Values', 25, ' ') || ': ' ||
                                    l_task_dff_values_v);

                    l_stmt_step := 'addnl_dff_proc : 175';

                    IF (l_task_attributes = 'ATTRIBUTE1') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE1 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE2') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE2 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE3') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE3 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE4') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE4 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE5') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE5 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE6') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE6 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE7') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE7 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE8') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE8 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE9') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE9 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE10') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE10 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE11') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE11 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE12') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE12 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE13') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE13 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE14') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE14 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE15') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE15 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE16') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE16 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE17') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE17 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE18') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE18 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE19') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE19 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE20') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE20 := l_task_dff_values;
                    END IF;
                    --l_stmt_step := 'xxont_addnl_dff_proc : 177';

                    IF (l_task_attributes = 'ATTRIBUTE21') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE21 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE22') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE22 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE23') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE23 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE24') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE24 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE25') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE25 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE26') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE26 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE27') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE27 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE28') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE28 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE29') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE29 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE30') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE30 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE31') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE31 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE32') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE32 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE33') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE33 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE34') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE34 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE35') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE35 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE36') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE36 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE37') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE37 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE38') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE38 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE39') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE39 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE40') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE40 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE41') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE41 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE42') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE42 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE43') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE43 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE44') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE44 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE45') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE45 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE46') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE46 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE47') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE47 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE48') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE48 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE49') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE49 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE50') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE50 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE51') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE51 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE52') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE52 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE53') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE53 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE54') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE54 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE55') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE55 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE56') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE56 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE57') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE57 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE58') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE58 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE59') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE59 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE60') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE60 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE61') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE61 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE62') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE62 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE63') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE63 := l_task_dff_values;

                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE64') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE64 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE65') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE65 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE66') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE66 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE67') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE67 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE68') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE68 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE69') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE69 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE70') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE70 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE71') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE71 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE72') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE72 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE73') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE73 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE74') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE74 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE75') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE75 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE76') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE76 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE77') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE77 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE78') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE78 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE79') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE79 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE80') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE80 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE81') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE81 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE82') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE82 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE83') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE83 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE84') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE84 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE85') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE85 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE86') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE86 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE87') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE87 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE88') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE88 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE89') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE89 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE90') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE90 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE91') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE91 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE92') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE92 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE93') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE93 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE94') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE94 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE95') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE95 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE96') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE96 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE97') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE97 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE98') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE98 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE99') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE99 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'ATTRIBUTE100') THEN
                      l_task_dff_tbl(l_task_seq).ATTRIBUTE100 := l_task_dff_values;
                    END IF;
                    l_stmt_step := 'addnl_dff_proc : 178';

                    write_into_file('task DFF - step:' || l_stmt_step);

                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE1') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE1 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE2') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE2 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE3') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE3 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE4') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE4 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE5') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE5 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE6') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE6 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE7') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE7 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE8') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE8 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE9') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE9 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE10') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE10 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE11') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE11 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE12') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE12 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE13') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE13 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE14') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE14 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE15') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE15 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE16') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE16 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE17') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE17 := l_task_dff_values;
                    END IF;

                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE18') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE18 := l_task_dff_values;
                    END IF;

                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE19') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE19 := l_task_dff_values;
                    END IF;

                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE20') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE20 := l_task_dff_values;
                    END IF;

                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE21') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute21 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE22') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute22 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE23') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute23 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE24') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute24 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE25') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute25 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE26') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute26 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE27') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute27 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE28') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute28 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE29') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute29 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE30') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute30 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE31') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute31 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE32') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute32 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE33') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute33 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE34') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute34 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE35') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute35 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE36') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute36 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE37') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute37 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE38') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute38 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE39') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute39 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE40') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute40 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE41') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute41 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE42') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute42 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE43') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute43 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE44') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute44 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE45') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute45 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE46') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute46 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE47') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute47 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE48') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute48 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE49') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute49 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE50') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute50 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE51') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute51 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE52') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute52 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE53') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute53 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE54') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute54 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE55') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute55 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE56') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute56 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE57') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute57 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE58') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute58 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE59') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute59 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE60') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute60 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE61') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE61 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE62') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE62 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE63') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE63 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE64') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE64 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE65') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE65 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE66') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE66 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE67') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE67 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE68') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE68 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE69') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE69 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE70') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE70 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE71') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE71 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE72') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE72 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE73') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE73 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE74') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE74 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE75') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE75 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE76') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE76 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE77') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE77 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE78') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE78 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE79') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE79 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE80') THEN
                      l_task_dff_tbl(l_task_seq).GLOBAL_ATTRIBUTE80 := l_task_dff_values;
                    END IF;

                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE81') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute81 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE82') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute82 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE83') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute83 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE84') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute84 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE85') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute85 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE86') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute86 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE87') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute87 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE88') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute88 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE89') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute89 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE90') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute90 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE91') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute91 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE92') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute92 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE93') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute93 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE94') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute94 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE95') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute95 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE96') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute96 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE97') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute97 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE98') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute98 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE99') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute99 := l_task_dff_values;
                    END IF;
                    IF (l_task_attributes = 'GLOBAL_ATTRIBUTE100') THEN
                      l_task_dff_tbl(l_task_seq).global_attribute100 := l_task_dff_values;
                    END IF;

                  END IF;
                END IF;
              END LOOP task_dff_loop;
              l_stmt_step := 'addnl_dff_proc : 179';
              write_into_file('taskDFF - step:' || l_stmt_step);

              -- Insert task Level Values
              write_into_file('l_task_attributes_v :' ||
                              l_task_attributes_v);
              IF (l_task_attributes_v IS NOT NULL) THEN
                l_stmt_step := 'xxau_addnl_dff_proc : 180';
                BEGIN
                  SELECT task_id
                    INTO l_task_id
                    FROM pa_projects_all pp, pa_tasks pt
                   WHERE pp.project_id = pt.project_id
                     AND pp.project_id = l_project_id
                        --AND pt.task_name = task_rec.g_task_name
                     AND pt.task_number = task_rec.g_task_number;
                  write_into_file('task DFF - Task ID:' || l_task_id);

                EXCEPTION
                  WHEN OTHERS THEN
                    l_task_id    := NULL;
                    l_error_flag := 'Y';
                    write_into_file('When Others excpetion occured while fetching task number - SQLERRM:' ||
                                    SQLERRM);
                END;
                l_stmt_step := 'addnl_dff_proc : 181';
                -- Start: Code added by Jyotsana for CR#22497 to allow for task Level DFF updates from KODIAK

                write_into_file('Check if the Task Additional Attributes already exist for task_id:' ||
                                l_task_id);
                IF l_task_id IS NOT NULL THEN
                  SELECT COUNT(1)
                    INTO l_t_exist
                    FROM XXAU_ADDITIONAL_DFF
                   WHERE key1 = l_project_id
                     AND key2 = l_task_id
                     AND object_type = 'Tasks';
                  IF (l_t_exist > 0) THEN
                    write_into_file('****  Additional Attributes already exist for task_id:' ||
                                    l_task_id);
                    BEGIN
                      --l_task_dff_upd :=
                      SELECT 'UPDATE XXAU_ADDITIONAL_DFF xld
                              SET last_update_date = SYSDATE' ||
                             ',last_updated_by = ' || fnd_global.user_id ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE1,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE1 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE1,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE1 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE2,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE2 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE2,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE2 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE3,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE3 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE3,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE3 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE4,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE4 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE4,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE4 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE5,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE5 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE5,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE5 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE6,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE6 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE6,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE6 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE7,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE7 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE7,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE7 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE8,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE8 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE8,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE8 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE9,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE9 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE9,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE9 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE10,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE10 = ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE10,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE10 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE11,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE11 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE11,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE11 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE12,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE12 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE12,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE12 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE13,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE13 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE13,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE13 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE14,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE14 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE14,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE14 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE15,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE15 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE15,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE15 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE16,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE16 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE16,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE16 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE17,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE17 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE17,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE17 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE18,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE18 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE18,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE18 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE19,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE19 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE19,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE19 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE20,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE20 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE20,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE20 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE21,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE21 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE21,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE21 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE22,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE22 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE22,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE22 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE23,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE23 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE23,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE23 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE24,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE24 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE24,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE24 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE25,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE25 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE25,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE25 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE26,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE26 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE26,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE26 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE27,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE27 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE27,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE27 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE28,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE28 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE28,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE28 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE29,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE29 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE29,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE29 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE30,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE30 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE30,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE30 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE31,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE31 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE31,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE31 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE32,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE32 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE32,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE32 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE33,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE33 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE33,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE33 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE34,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE34 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE34,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE34 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE35,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE35 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE35,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE35 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE36,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE36 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE36,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE36 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE37,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE37 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE37,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE37 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE38,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE38 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE38,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE38 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE39,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE39 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE39,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE39 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE40,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE40 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE40,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE40 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE41,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE41 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE41,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE41 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE42,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE42 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE42,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE42 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE43,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE43 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE43,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE43 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE44,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE44 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE44,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE44 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE45,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE45 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE45,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE45 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE46,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE46 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE46,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE46 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE47,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE47 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE47,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE47 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE48,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE48 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE48,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE48 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE49,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE49 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE49,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE49 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE50,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE50 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE50,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE50 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE51,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE51 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE51,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE51 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE52,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE52 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE52,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE52 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE53,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE53 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE53,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE53 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE54,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE54 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE54,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE54 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE55,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE55 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE55,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE55 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE56,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE56 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE56,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE56 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE57,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE57 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE57,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE57 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE58,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE58 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE58,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE58 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE59,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE59 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE59,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE59 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE60,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE60 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE60,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE60 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE61,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE61 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE61,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE61 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE62,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE62 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE62,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE62 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE63,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE63 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE63,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE63 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE64,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE64 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE64,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE64 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE65,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE65 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE65,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE65 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE66,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE66 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE66,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE66 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE67,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE67 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE67,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE67 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE68,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE68 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE68,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE68 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE69,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE69 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE69,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE69 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE70,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE70 = ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE70,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE70 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE71,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE71 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE71,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE71 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE72,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE72 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE72,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE72 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE73,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE73 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE73,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE73 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE74,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE74 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE74,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE74 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE75,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE75 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE75,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE75 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE76,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE76 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE76,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE76 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE77,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE77 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE77,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE77 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE78,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE78 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE78,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE78 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE79,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE79 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE79,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE79 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE80,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE80 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE80,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE80 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE81,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE81 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE81,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE81 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE82,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE82 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE82,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE82 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE83,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE83 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE83,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE83 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE84,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE84 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE84,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE84 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE85,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE85 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE85,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE85 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE86,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE86 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE86,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE86 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE87,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE87 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE87,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE87 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE88,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE88 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE88,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE88 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE89,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE89 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE89,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE89 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE90,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE90 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE90,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE90 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE91,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE91 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE91,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE91 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE92,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE92 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE92,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE92 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE93,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE93 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE93,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE93 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE94,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE94 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE94,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE94 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE95,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE95 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE95,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE95 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE96,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE96 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE96,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE96 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE97,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE97 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE97,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE97 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE98,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE98 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE98,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE98 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE99,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE99 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE99,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE99 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq).ATTRIBUTE100,
                                    NULL,
                                    NULL,
                                    ',xld.ATTRIBUTE100 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE100,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .ATTRIBUTE100 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE1,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE1 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE1,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE1 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE2,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE2 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE2,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE2 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE3,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE3 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE3,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE3 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE4,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE4 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE4,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE4 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE5,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE5 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE5,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE5 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE6,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE6 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE6,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE6 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE7,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE7 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE7,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE7 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE8,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE8 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE8,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE8 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE9,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE9 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE9,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE9 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE10,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE10 = ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE10,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE10 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE11,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE11 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE11,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE11 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE12,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE12 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE12,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE12 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE13,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE13 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE13,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE12 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE14,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE14 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE14,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE14 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE15,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE15 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE15,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE15 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE16,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE16 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE16,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE16 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE17,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE17 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE17,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE17 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE18,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE18 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE18,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE18 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE19,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE19 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE19,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE19 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE20,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE20 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE20,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE20 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE21,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE21 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE21,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE21 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE22,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE22 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE22,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE22 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE23,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE23 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE23,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE23 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE24,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE24 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE24,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE24 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE25,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE25 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE25,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE25 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE26,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE26 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE26,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE26 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE27,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE27 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE27,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE27 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE28,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE28 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE28,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE28 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE29,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE29 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE29,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE29 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE30,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE30 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE30,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE30 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE31,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE31 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE31,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE31 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE32,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE32 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE32,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE32 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE33,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE33 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE33,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE33 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE34,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE34 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE34,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE34 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE35,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE35 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE35,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE35 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE36,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE36 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE36,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE36 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE37,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE37 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE37,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE37 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE38,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE38 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE38,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE38 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE39,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE39 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE39,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE39 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE40,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE40 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE40,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE40 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE41,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE41 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE41,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE41 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE42,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE42 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE42,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE42 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE43,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE43 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE43,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE43 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE44,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE44 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE44,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE44 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE45,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE45 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE45,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE45 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE46,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE46 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE46,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE46 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE47,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE47 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE47,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE47 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE48,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE48 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE48,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE48 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE49,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE49 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE49,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE49 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE50,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE50 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE50,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE50 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE51,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE51 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE51,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE51 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE52,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE52 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE52,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE52 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE53,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE53 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE53,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE53 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE54,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE54 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE54,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE54 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE55,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE55 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE55,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE55 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE56,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE56 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE56,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE56 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE57,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE57 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE57,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE57 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE58,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE58 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE58,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE58 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE59,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE59 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE59,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE59 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE60,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE60 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE60,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE60 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE61,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE61 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE61,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE61 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE62,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE62 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE62,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE62 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE63,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE63 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE63,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE63 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE64,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE64 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE64,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE64 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE65,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE65 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE65,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE65 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE66,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE66 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE66,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE66 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE67,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE67 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE67,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE67 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE68,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE68 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE68,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE68 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE69,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE69 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE69,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE69 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE70,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE70 = ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE70,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE70 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE71,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE71 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE71,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE71 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE72,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE72 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE72,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE72 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE73,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE73 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE73,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE73 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE74,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE74 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE74,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE74 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE75,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE75 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE75,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE75 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE76,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE76 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE76,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE76 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE77,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE77 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE77,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE77 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE78,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE78 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE78,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE78 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE79,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE79 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE79,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE79 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE80,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE80 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE80,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE80 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE81,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE81 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE81,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE81 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE82,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE82 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE82,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE82 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE83,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE83 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE83,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE83 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE84,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE84 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE84,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE84 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE85,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE85 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE85,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE85 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE86,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE86 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE86,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE86 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE87,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE87 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE87,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE87 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE88,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE88 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE88,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE88 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE89,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE89 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE89,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE89 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE90,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE90 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE90,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE90 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE91,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE91 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE91,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE91 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE92,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE92 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE92,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE92 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE93,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE93 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE93,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE93 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE94,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE94 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE94,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE94 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE95,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE95 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE95,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE95 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE96,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE96 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE96,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE96 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE97,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE97 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE97,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE97 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE98,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE98 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE98,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE98 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE99,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE99 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE99,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE99 || '''',
                                         'NULL')) ||
                             DECODE(l_task_dff_tbl(l_task_seq)
                                    .GLOBAL_ATTRIBUTE100,
                                    NULL,
                                    NULL,
                                    ',xld.GLOBAL_ATTRIBUTE100 =  ' ||
                                    NVL2(l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE100,
                                         '''' || l_task_dff_tbl(l_task_seq)
                                         .GLOBAL_ATTRIBUTE100 || '''',
                                         'NULL')) || ' WHERE key1 =' ||
                             L_PROJECT_ID || ' AND OBJECT_TYPE=' || '''' ||
                             'Tasks' || '''' || ' AND KEY2 =' || L_TASK_ID
                        INTO l_task_dff_upd
                        FROM DUAL;

                      BEGIN
                        l_stmt_step := 'addnl_dff_proc : 188';
                        write_into_file('Before task dff update execute immediate..');
                        write_into_file(RPAD('Task Upd SQL', 25, ' ') || ': ' ||
                                        l_task_dff_upd);
                        EXECUTE IMMEDIATE l_task_dff_upd;
                        write_into_file('After task dff update execute immediate..');
                        write_into_file('DFF Successfully updated for task_id ' ||
                                        L_TASK_ID);
                        COMMIT;
                      EXCEPTION
                        WHEN OTHERS THEN
                          l_error_flag := 'Y';
                          write_into_file('Exception while updating Task DFF data: ' ||
                                          SQLERRM);
                      END;
                      --COMMIT;
                    EXCEPTION
                      WHEN OTHERS THEN
                        write_into_file('Error while updating addition Task dff ' ||
                                        SQLERRM);
                    END;
                  ELSE
                    write_into_file('Before task dff insert SQL format..');
                    l_task_dff_insert := 'INSERT INTO XXAU_ADDITIONAL_DFF ( object_type, key1, key2, ' ||
                                         l_task_attributes_v ||
                                         ' ,CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE,LAST_UPDATE_LOGIN,PARENT_TABLE,PARENT_ID ) VALUES ( ' ||
                                         '''Tasks''' || ', ' ||
                                         l_project_id || ', ' || l_task_id || ', ' ||
                                         l_task_dff_values_v || ', ' ||
                                         fnd_global.user_id ||
                                         ', SYSDATE, ' ||
                                         fnd_global.user_id ||
                                         ', SYSDATE, ' ||
                                         fnd_global.conc_login_id || ', ' ||
                                         '''PA_TASKS'''|| ', '||l_task_id||
                                         ' )';
                    write_into_file(RPAD('Task DFF Insert SQL', 25, ' ') || ': ' ||
                                    l_task_dff_insert);
                    BEGIN
                      l_stmt_step := 'addnl_dff_proc : 190';
                      write_into_file('Before task dff insert execute immediate..');
                      EXECUTE IMMEDIATE l_task_dff_insert;
                      write_into_file('After task dff insert execute immediate..');
                      COMMIT;
                    EXCEPTION
                      WHEN OTHERS THEN
                        l_error_flag := 'Y';
                        write_into_file('Exception while inserting Task DFF data: ' ||
                                        SQLERRM);
                    END;

                  END IF;
                END IF; --IF( l_l_exist > 0)
              END IF; --Task Attribute exists
              l_task_seq := l_task_seq + 1;
              write_into_file('l_task_seq: ' || l_task_seq);
            END LOOP; --task_loop
          END IF; --project id is null
        END LOOP; -- proj_loop;
        BEGIN
          write_into_file('l_error_flag => ' || l_error_flag);
          IF NVL(l_error_flag, 'N') = 'Y' THEN
            p_retcode := 0;
            l_user_status_msg := NVL(l_user_status_msg,' ')||'Error while inserting Additional DFF ';

            xxint_event_api_pub.update_event(p_guid                => g_guid,
                                             p_user_status_code    => 'ERROR',
                                             p_user_status_message => substrb(l_user_status_msg,1,150));
          ELSE
            p_retcode := 0;
            p_errbuf  := 'Completed Additional DFF ';
          END IF;
        EXCEPTION
          WHEN OTHERS THEN
            p_retcode := 0;
            l_user_status_msg := NVL(l_user_status_msg,' ')||'Error while inserting Additional DFF SQLERRM:' ||SQLERRM;
            xxint_event_api_pub.update_event(p_guid                => g_guid,
                                             p_user_status_code    => 'ERROR',
                                             p_user_status_message => substrb(l_user_status_msg,1,150));
            write_into_file('Exception occurred: ' || SQLERRM ||
                            ' while updating event attribute4 for GUID: ' ||
                            rec_event_addn_dff_info.guid);
        END;
      EXCEPTION
        WHEN e_no_data THEN
          p_retcode := 0;
          l_user_status_msg := NVL(l_user_status_msg,' ')||'Error Occurred : ' || SQLERRM || CHR(10) ||
                          'while querying additional attributes information with GUID: ' ||
                          rec_event_addn_dff_info.guid;
          xxint_event_api_pub.update_event(p_guid                => g_guid,
                                             p_user_status_code    => 'ERROR',
                                             p_user_status_message => substrb(l_user_status_msg,1,150));
          write_into_file(l_user_status_msg);
      END;
    END LOOP; --event_loop;
    END IF;--Added for CR25364 Avoid executing if phase 01 is Not success
    write_into_file('***************** Additional DFF Attributes completed *****************');
  EXCEPTION
    WHEN OTHERS THEN
      p_retcode := 0;
      l_user_status_msg := NVL(l_user_status_msg,' ')||'Error while inserting Additional DFF SQLERRM:' ||
                   SQLERRM;
      xxint_event_api_pub.update_event(p_guid                => g_guid,
                                             p_user_status_code    => 'ERROR',
                                             p_user_status_message => substrb(l_user_status_msg,1,150));
      write_into_file(l_user_status_msg||'Exception occurred - at:' || l_stmt_step);
  END addnl_dff_proc;
  --
  --added as per CR24894.
  --Procedure to call functionality of XXPA1559 to add project to the project manufacturing organization
  --
  PROCEDURE assign_pjm_org(x_retcode IN OUT NUMBER,
                           x_retmesg IN OUT VARCHAR2,
                           p_guid    IN VARCHAR2)
  IS
    lv_rec_xxint             xxint_events_current_phase_v%rowtype;
    lv_errbuf                VARCHAR2(4000);
    lv_retcode                 VARCHAR2(10);
    lv_payload               xmltype;
    lv_submit_xxpa1559         VARCHAR2(1);
    lv_project_id            NUMBER;
    lv_pjm_count            NUMBER := 0;
    lv_phase01_status      VARCHAR2(200);
  BEGIN
    write_into_file('Phase 2 Started : ');
    x_retcode := 0;
    g_guid := p_guid;

    lv_payload := xmltype(xxint_event_api_pub.get_event_clob(p_guid,'HTTP_RECEIVE_XML_PAYLOAD_IN'));

    --get the XXINT Event RECORD
    lv_rec_xxint := xxint_event_api_pub.get_event_record(p_guid);
    lv_phase01_status := lv_rec_xxint.attribute5;--Added for CR25364
    if nvl(lv_phase01_status,'SUCCESS') = 'SUCCESS' THEN--Added if condition for CR25364 to avoid execution in case phase01 is not success

    --Check the key value setup to see if XXPA1559 logic needs to be executed
    lv_submit_xxpa1559 := nvl(xxint_event_type_utils.get_key_parm_value(p_event_type     => gc_event_type,
                                                              p_key_type       => gc_key_type,
                                                              p_key_type_value => lv_rec_xxint.attribute1, --partner code
                                                              p_name           => 'XXPA1559_PJM_ORG_ASSIGNMENT'),
                               'N');
    write_into_file('XXPA1559_PJM_ORG_ASSIGNMENT key value : '||lv_submit_xxpa1559||CHR(10)||
                    'Project request Mode : '||lv_rec_xxint.attribute6);
    --execute XXPA1559 logic if the key value is enabled and the project request is CREATE mode
    IF (lv_submit_xxpa1559 = 'Y' AND NVL(lv_rec_xxint.attribute6,'X') = 'CREATE')
    THEN
        --get all the projects from the payload
        FOR proj_rec IN (SELECT EXTRACTVALUE(hdrset.COLUMN_VALUE,
                                        '/PA_PROJECTS_ALL/PA_PROJECT_NUMBER',
                                        g_namespace) AS project_number
                           FROM TABLE(XMLSEQUENCE(lv_payload.EXTRACT('//G_PA_AGREEMENTS_ALL/PA_AGREEMENTS_ALL/G_PA_PROJECTS_ALL/PA_PROJECTS_ALL',g_namespace))) hdrset) LOOP
          lv_pjm_count := 0;
          BEGIN
            SELECT project_id
              into lv_project_id
              from PA_PROJECTS_ALL
             where segment1 = proj_rec.project_number;
          EXCEPTION
            WHEN OTHERS THEN
              lv_project_id := NULL;
          END;
          --if project is created successfully then call XXPA1559 logic
          IF lv_project_id IS NOT NULL
          THEN
            --Call XXPA1559 logic
            xxpa_proj_task_crtn_pkg.xxpa_proj_task_creatn_proc(p_errbuf => lv_errbuf,
                                                               p_retcode => lv_retcode,
                                                               p_project_id => lv_project_id,
                                                               p_check_for_agreement => 'N',
                                                               p_buffer_lst_run_mins => 0);
            --Get the number of PJM organizations assigned
            SELECT count(1)
            INTO lv_pjm_count
            FROM pjm_project_parameters
            WHERE project_id = lv_project_id;

            write_into_file('Project # '||proj_rec.project_number||' is created successfully. XXPA1559 logic is executed with project ID '||lv_project_id||CHR(10)||
                            'Number of PJM organizations assigned# '||lv_pjm_count||CHR(10)||
                            'XXPA1559 status : '||lv_retcode||CHR(10)||
                            'XXPA1559 Error message : '||lv_errbuf);

          END IF;
        END LOOP;
    END IF;
    END IF;--Added for CR25364 Avoid executing if phase 01 is Not success
  EXCEPTION
    WHEN OTHERS
    THEN
        --no need to error the phase as in case of failure the XXPA1559 concurrent program will take care of the assignment
      x_retcode := 0;
      x_retmesg := 'SQL Exception in assign_pjm_org : ' || sqlerrm;
      write_into_file(x_retmesg);
  END assign_pjm_org;

END XXPA_PROJ_IN_PKG;
/